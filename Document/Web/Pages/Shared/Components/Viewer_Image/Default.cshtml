@using OpenDMS.Core.DTOs;
@inject IConfiguration config
@model IndexModel


@if (Model != null)
{
    <div class="nav-toolbar-container">
        <ul class="nav nav-toolbar">
            @if (Model.CanAddContent)
            {
                <li class="">
                    <a class="dropdown-item" onclick="return AddFile(@Model.DocumentId)" href="#">
                        <i class="fa fa-upload"></i>
                        <span>Carica</span>
                    </a>
                </li>
            }

            @if (Model.Document.ContentType == OpenDMS.Domain.Enumerators.ContentType.Document && Model.Document.Image != null)
            {
                <li id="tbDownload">
                    <a href="#" role="button" class="MobileIcon dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"><i class="fa fa-download"></i> Scarica... <span class="fa fa-caret-down"></span></a>
                    <ul class="dropdown-menu">
                        <li class="btnDownload"><a onclick="return Download(@Model.DocumentId, '')" class="dropdown-item" href="#"><i class="fa fa-image"></i> Immagine Originale</a></li>
                        @if (Model.Document.Image.PreviewStatus == OpenDMS.Domain.Enumerators.JobStatus.Completed)
                        {
                            <li class="btnPDF"><a onclick="return Download(@Model.DocumentId, '.pdf')" class="dropdown-item" href="#"><i class="fa fa-file-pdf-o"></i> Versione PDF</a></li>
                        }
                    </ul>
                </li>
                @if (Model.CanAddContent && Model.CanSign)
                {
                    <li id="tbAddDigitalSignature"><a href="#" onclick="return AddDigitalSign('[@Model.DocumentId]')" title="Apponi Firma Elettronica"><i class="fa fa-pencil"></i> Firma Elettronica</a></li>
                }
            }
        </ul>
        <label class="PreviewDocumentName"></label>
        <ul class="nav nav-toolbar">
            <li class="Mobile" id="tbZoomIn"><a href="#" onclick="Zoom(-1)" title="Ingrandisci"><i class="fa fa-plus-circle"></i></a></li>
            <li class="Mobile" id="tbZoomOut"><a href="#" onclick="Zoom(+1)" title="Riduci"><i class="fa fa-minus-circle"></i></a></li>
            <li class="Mobile"><span id="tbZoomValue">100%</span></li>
            <li class="Mobile" id="tbZoomWidth"><a href="#" onclick="Zoom(+3)" title="Adatta alla larghezza dello schermo"><i class="fa fa-file-o"></i></a></li>
        </ul>
    </div>
    <div class="Panel">
        <container class="PreviewImage">
            <div class="PreviewPanel">
                <div>
                    <h1>Caricamento in corso...</h1>
                </div>
            </div>
            <div class="ErrorPanel" style="display:none">
                <h1>Si è verificato un errore durante l'estrazione del file</h1>
                <p class="ErrorMessage"></p>
            </div>
            <img class="hidden ImagePage large" /> 
        </container>
    </div>
    @if (Model.Document.Image != null)
    {

        <div class="Bottom Mobile" style="border-top:1px solid #eee">
            <label><b>Versione: </b>@(
        Model.Document.Image.VersionNumber
        ).@(
                  Model.Document.Image.RevisionNumber.ToString("00")
                  )</label>
            <label><b>Dimensione: </b> @Model.Document.Image.FileSize Bytes</label>
            <label><b>Pubblicazione: </b> @Model.Document.Image.SendingStatus @Model.Document.Image.SendingDate</label>
        </div>
    }
}
else
{

}

<script>


    var zoomFactor = 1;

    function Zoom(factor) {
        var panel = $(".ImagePage");// PreviewImage");
        if (factor == 2) // larghezza
            zoomFactor = 1;
        else
            if (factor == 3) // altezza
                zoomFactor = 1;
            else
                zoomFactor = zoomFactor * (factor > 0 ? 3 / 4 : 4 / 3);
        panel.css("zoom", zoomFactor);
        $("#tbZoomValue").html(" " + Math.trunc(zoomFactor * 100) + "% " );

    }

    $(document).ready(() => {

        const imageId = @Model.Document.Image.Id;

        fetch("/internalapi/preview/GetBase64/" + imageId)
            .then((response) => { if (!response.ok) return response.text().then(text => { throw new Error(text) }); else return response.text() })
            .then((data) => {
                const imageViewer = $('.PreviewPanel');
                imageViewer.addClass("hidden");
                const image = $('.ImagePage');
                image.removeClass("hidden");
                var w = $('.PreviewImage')[0].clientWidth - 24;
                image[0].style.width = w + "px";
                image[0].src = "data:image/png;base64, " + data;
            })
            .catch(error => {
                $(".PreviewPanel").hide();
                $(".ErrorMessage").text(error.message);
                $(".ErrorPanel").show();
            })
    });

</script>