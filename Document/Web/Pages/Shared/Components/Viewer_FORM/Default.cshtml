@using OpenDMS.Core.DTOs;
@inject IConfiguration config
@model IndexModel


  <style>
    .bjs-powered-by
    {
        display:none;
    }

/*    html, body, div, span, applet, object, iframe,
    h1, h2, h3, h4, h5, h6, p, blockquote, pre,
    a, abbr, acronym, address, big, cite, code,
    del, dfn, em, img, ins, kbd, q, s, samp,
    small, strike, strong, sub, sup, tt, var,
    b, u, i, center,
    dl, dt, dd, ol, ul, li,
    fieldset, form, label, legend,
    table, caption, tbody, tfoot, thead, tr, th, td,
    article, aside, canvas, details, embed,
    figure, figcaption, footer, header, hgroup,
    menu, nav, output, ruby, section, summary,
    time, mark, audio, video {
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font: inherit;
        vertical-align: baseline;
    }
    article, aside, details, figcaption, figure,
    footer, header, hgroup, menu, nav, section {
        display: block;
    }

    body {
        line-height: 1;
    }

    ol, ul {
        list-style: none;
    }

    blockquote, q {
        quotes: none;
    }

        blockquote:before, blockquote:after,
        q:before, q:after {
            content: '';
            content: none;
        }

    table {
        border-collapse: collapse;
        border-spacing: 0;
    }
*/ 
    .fjs-powered-by {
        display: none;
    }
    .PreviewPanel 
    {
        max-width:800px;
        height:100%;
        border-right:2px dotted #4bc;
        pointer-events: none;
    }
</style>
<link rel="stylesheet" href="https://unpkg.com/@@bpmn-io/form-js@1.1.0/dist/assets/form-js.css">


<div class="Page">
    @if (Model != null)
    {
        <iframe frameborder="0" class=" CheckOut hidden MainPanel"></iframe>
        <div class="Preview Page">
            <div class="MainPanel">
                <div class="nav-toolbar-container">
                    <ul class="nav nav-toolbar">
                        @if (Model.CanAddContent && (Model.Document.ContentType== OpenDMS.Domain.Enumerators.ContentType.Document) && String.IsNullOrEmpty(Model.Document.DocumentType.CreationFormKey) )
                        {
                            <li class="">
                                <a class="dropdown-item" onclick="return AddFile(@Model.DocumentId)" href="#">
                                    <i class="fa fa-upload"></i>
                                    <span>Carica</span>
                                </a>
                            </li>
                        }

                        @if (Model.CanViewContent && Model.Document.ContentType == OpenDMS.Domain.Enumerators.ContentType.Document && Model.Document.Image != null)
                        {
                            <li id="tbDownload">
                                <a href="#" role="button" class="MobileIcon dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"><i class="fa fa-download"></i> Scarica... <span class="fa fa-caret-down"></span></a>
                                <ul class="dropdown-menu">
                                    <li class="btnDownload"><a onclick="return Download(@Model.DocumentId, '')" class="dropdown-item" href="#"><i class="fa fa-image"></i> Documento Originale</a></li>
                                    @if (Model.Document.Image.PreviewStatus == OpenDMS.Domain.Enumerators.JobStatus.Completed)
                                    {
                                        <li class="btnPDF"><a onclick="return Download(@Model.DocumentId, '.pdf')" class="dropdown-item" href="#"><i class="fa fa-file-pdf-o"></i> Versione PDF</a></li>
                                    }
                                </ul>
                            </li>
                        }
@*                         @if (Model.CanAddContent && Model.Document.Image != null)
                        {
                            <li class="Mobile">
                                <a class="dropdown-item" onclick="return CheckOut(@Model.DocumentId)" href="#">
                                    <i class="@Model.Document.Icon"></i>
                                    <span>Modifica...</span>
                                </a>
                            </li>
                        }
 *@
                        @if (Model.CanAddContent && Model.CanSign && Model.Document.Image.PreviewStatus == OpenDMS.Domain.Enumerators.JobStatus.Completed)
                        {
                            <li id="tbAddDigitalSignature"><a href="#" class="MobileIcon" onclick="return AddDigitalSign('[@Model.DocumentId]')" title="Apponi Firma Elettronica"><i class="fa fa-pencil"></i> Firma Elettronica</a></li>
                        }


@*                        @if (Model.CanDeploy && Model.Document.Image != null && Model.Document.Image.SendingStatus == OpenDMS.Domain.Enumerators.JobStatus.Queued)
                        {
                            <li id="tbPublish"><a href="#" class="" onclick="return publish()">     <i class="fa fa-cloud"></i> Pubblica...</a></li>
                        }
*@                    </ul>
                    <ul class="nav nav-toolbar">
                    </ul>
                    <ul class="nav nav-toolbar">
                        <li class="Mobile" id="tbZoomIn"><a href="#" onclick="Zoom(-1)" title="Ingrandisci"><i class="fa fa-plus-circle"></i></a></li>
                        <li class="Mobile" id="tbZoomOut"><a href="#" onclick="Zoom(+1)" title="Riduci"><i class="fa fa-minus-circle"></i></a></li>
                        <li class="Mobile"><span id="tbZoomValue">100%</span></li>
                        <li class="Mobile" id="tbZoomWidth"><a href="#" onclick="Zoom(+3)" title="Adatta alla larghezza dello schermo"><i class="fa fa-file-o"></i></a></li>
                    </ul>
                </div>
                <div class="Panel">
                    <container class="PreviewPanel">
                        <div class="LoadingPanel">
                            <h1>Caricamento in corso...</h1>
                        </div>
                        <div class="ErrorPanel" style="display:none">
                            <h1>Si è verificato un errore durante l'estrazione del file</h1>
                            <p class="ErrorMessage"></p>
                        </div>
                        <div class="canvas">
                        </div>

                    </container>
                </div>
                @if (Model.Document.Image != null)
                {
                    <div class="Bottom Mobile" style="border-top:1px solid #eee">
                        <label><b>Versione: </b>@(Model.Document.Image.VersionNumber).@(Model.Document.Image.RevisionNumber.ToString("00"))</label>
                        <label><b>Dimensione: </b> @Model.Document.Image.FileSize Bytes</label>
                        <label><b>Pubblicazione: </b> @Model.Document.Image.SendingStatus @Model.Document.Image.SendingDate</label>
                    </div>
                }
            </div>
        </div>
    }
    else
    {

    }

</div>


<script src="/js/bpmn.io/form-viewer.umd.js"></script>


<script>


    $(document).ready(() => {

        const imageId = @Model.Document.Image.Id;
        const imageViewer = document.querySelector('.PreviewPanel');


        fetch("/internalapi/preview/GetBase64/" + imageId)
            .then((response) => { if (!response.ok) return response.text().then(text => { throw new Error(text) }); else return response.text() })
            .then((data) => {
                xml = atob(data);
                const container = document.querySelector('.canvas');
                FormViewer.createForm({
                    container,
                    schema: JSON.parse(xml)
                });
                $(".LoadingPanel").hide();
                $(".PreviewPanel").find("input").attr("disabled", "disabled").attr("readonly", "readonly").attr("tabIndex", "-1");                      
                $(".PreviewPanel").find("button").attr("disabled", "disabled").attr("readonly", "readonly").attr("tabIndex", " - 1");
                $(".PreviewPanel").find("a").attr("disabled", "disabled").attr("readonly", "readonly").attr("tabIndex", "-1");
            })
            .catch(error => {
                $(".LoadingPanel").hide();
                $(".ErrorMessage").text(error.message);
                $(".ErrorPanel").show();
            });
    });


    function CheckOut() {
        var basepath = "@(config["Endpoint:FormService"] ?? "")"// window.location.origin;

        //var previewPanel = $(".Preview");
        //previewPanel.addClass("hidden");
        //var checkout = $(".CheckOut");
        //checkout.removeClass("hidden");
        window.open(basepath + "?id=@Model.DocumentId");

    }


    function publish() {
        fetch("/internalapi/wf/deploy/@Model.DocumentId")
            .then((response) => { return response.json })
            .then((data) => {
                window.location.reload();
            })
    }

    var zoomFactor = 1;
    function Zoom(factor) {
        var panel = $(".PreviewPanel");
        if (factor == 2) // larghezza
            zoomFactor = .13348388671875;
        else
            if (factor == 3) // altezza
                zoomFactor = 1;
            else
                zoomFactor = zoomFactor * (factor > 0 ? 3 / 4 : 4 / 3);
        panel.css("zoom", zoomFactor);
        $("#tbZoomValue").html(" " + Math.trunc(zoomFactor * 100) + "% ");

    }


</script>