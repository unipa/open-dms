{"version":3,"file":"index.esm.js","sources":["../src/components/Header.js","../src/context/DescriptionContext.js","../src/context/ErrorsContext.js","../src/context/EventContext.js","../src/context/LayoutContext.js","../src/hooks/useDescriptionContext.js","../src/hooks/useError.js","../src/hooks/useEvent.js","../src/hooks/useKeyFactory.js","../src/hooks/useLayoutState.js","../src/hooks/usePrevious.js","../src/hooks/useShowEntryEvent.js","../src/hooks/useStickyIntersectionObserver.js","../src/hooks/useStaticCallback.js","../src/components/Group.js","../src/components/Placeholder.js","../src/PropertiesPanel.js","../src/components/DropdownButton.js","../src/components/HeaderButton.js","../src/components/entries/Collapsible.js","../src/components/ListItem.js","../src/components/ListGroup.js","../src/components/entries/Description.js","../src/components/entries/Checkbox.js","../src/components/entries/FEEL/FeelEditor.js","../src/components/entries/FEEL/FeelIndicator.js","../src/components/entries/FEEL/FeelIcon.js","../src/components/entries/FEEL/Feel.js","../src/components/entries/List.js","../src/components/entries/NumberField.js","../src/components/entries/Select.js","../src/components/entries/Simple.js","../src/components/entries/TextArea.js","../src/components/entries/TextField.js","../src/components/entries/ToggleSwitch.js","../src/features/debounce-input/debounceInput.js","../src/features/debounce-input/index.js"],"sourcesContent":["import { ExternalLinkIcon } from './icons';\n\n/**\n * @typedef { {\n *  getElementLabel: (element: object) => string,\n *  getTypeLabel: (element: object) => string,\n *  getElementIcon: (element: object) => import('preact').Component,\n *  getDocumentationRef: (element: object) => string\n * } } HeaderProvider\n */\n\n/**\n * @param {Object} props\n * @param {Object} props.element,\n * @param {HeaderProvider} props.headerProvider\n */\nexport default function Header(props) {\n\n  const {\n    element,\n    headerProvider\n  } = props;\n\n  const {\n    getElementIcon,\n    getDocumentationRef,\n    getElementLabel,\n    getTypeLabel,\n  } = headerProvider;\n\n  const label = getElementLabel(element);\n  const type = getTypeLabel(element);\n  const documentationRef = getDocumentationRef && getDocumentationRef(element);\n\n  const ElementIcon = getElementIcon(element);\n\n  return (<div class=\"bio-properties-panel-header\">\n    <div class=\"bio-properties-panel-header-icon\">\n      { ElementIcon && <ElementIcon width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" /> }\n    </div>\n    <div class=\"bio-properties-panel-header-labels\">\n      <div title={ type } class=\"bio-properties-panel-header-type\">{ type }</div>\n      { label ?\n        <div title={ label } class=\"bio-properties-panel-header-label\">{ label }</div> :\n        null\n      }\n    </div>\n    <div class=\"bio-properties-panel-header-actions\">\n      { documentationRef ?\n        <a\n          rel=\"noopener\"\n          class=\"bio-properties-panel-header-link\"\n          href={ documentationRef }\n          title=\"Open documentation\"\n          target=\"_blank\">\n          <ExternalLinkIcon />\n        </a> :\n        null\n      }\n    </div>\n  </div>);\n}","import {\n  createContext\n} from 'preact';\n\nconst DescriptionContext = createContext({\n  description: {},\n  getDescriptionForId: () => {}\n});\n\nexport default DescriptionContext;\n","import {\n  createContext\n} from 'preact';\n\nconst ErrorsContext = createContext({\n  errors: {}\n});\n\nexport default ErrorsContext;","/**\n * @typedef {Function} <propertiesPanel.showEntry> callback\n *\n * @example\n *\n * useEvent('propertiesPanel.showEntry', ({ focus = false, ...rest }) => {\n *   // ...\n * });\n *\n * @param {Object} context\n * @param {boolean} [context.focus]\n *\n * @returns void\n */\n\n/**\n * @typedef {Function} <propertiesPanel.showError> callback\n *\n * @example\n *\n * useEvent('propertiesPanel.showError', ({ focus = false, message, ...rest }) => {\n *   // ...\n * });\n *\n * @param {Object} context\n * @param {string} context.message\n * @param {boolean} [context.focus]\n *\n * @returns void\n */\n\nimport { createContext } from 'preact';\n\nconst EventContext = createContext({ eventBus: null });\n\nexport default EventContext;\n","import {\n  createContext\n} from 'preact';\n\nconst LayoutContext = createContext({\n  layout: {},\n  setLayout: () => {},\n  getLayoutForKey: () => {},\n  setLayoutForKey: () => {}\n});\n\nexport default LayoutContext;","import {\n  useContext\n} from 'preact/hooks';\n\nimport {\n  DescriptionContext\n} from '../context';\n\n/**\n * Accesses the global DescriptionContext and returns a description for a given id and element.\n *\n * @example\n * ```jsx\n * function TextField(props) {\n *   const description = useDescriptionContext('input1', element);\n * }\n * ```\n *\n * @param {string} id\n * @param {object} element\n *\n * @returns {string}\n */\nexport function useDescriptionContext(id, element) {\n  const {\n    getDescriptionForId\n  } = useContext(DescriptionContext);\n\n  return getDescriptionForId(id, element);\n}\n","import { useContext } from 'preact/hooks';\n\nimport { ErrorsContext } from '../context';\n\nexport function useError(id) {\n  const { errors } = useContext(ErrorsContext);\n\n  return errors[ id ];\n}\n","import { useContext, useEffect, useRef } from 'preact/hooks';\n\nimport { EventContext } from '../context';\n\n\n/**\n * Subscribe to an event immediately. Update subscription after inputs changed.\n *\n * @param {string} event\n * @param {Function} callback\n */\nexport function useEvent(event, callback, eventBus) {\n  const eventContext = useContext(EventContext);\n\n  if (!eventBus) {\n    ({ eventBus } = eventContext);\n  }\n\n  const didMount = useRef(false);\n\n  // (1) subscribe immediately\n  if (eventBus && !didMount.current) {\n    eventBus.on(event, callback);\n  }\n\n  // (2) update subscription after inputs changed\n  useEffect(() => {\n    if (eventBus && didMount.current) {\n      eventBus.on(event, callback);\n    }\n\n    didMount.current = true;\n\n    return () => {\n      if (eventBus) {\n        eventBus.off(event, callback);\n      }\n    };\n  }, [ callback, event, eventBus ]);\n}\n","import { useMemo } from 'preact/hooks';\n\nconst KEY_LENGTH = 6;\n\n/**\n * Create a persistent key factory for plain objects without id.\n *\n * @example\n * ```jsx\n * function List({ objects }) {\n *   const getKey = useKeyFactory();\n *   return (<ol>{\n *     objects.map(obj => {\n *       const key = getKey(obj);\n *       return <li key={key}>obj.name</li>\n *     })\n *   }</ol>);\n * }\n * ```\n *\n * @param {any[]} dependencies\n * @returns {(element: object) => string}\n */\nexport function useKeyFactory(dependencies = []) {\n  const map = useMemo(() => new Map(), dependencies);\n\n  const getKey = el => {\n    let key = map.get(el);\n\n    if (!key) {\n      key = Math.random().toString().slice(-KEY_LENGTH);\n      map.set(el, key);\n    }\n\n    return key;\n  };\n\n  return getKey;\n}\n","import {\n  useContext,\n  useState\n} from 'preact/hooks';\n\nimport {\n  LayoutContext\n} from '../context';\n\n/**\n * Creates a state that persists in the global LayoutContext.\n *\n * @example\n * ```jsx\n * function Group(props) {\n *   const [ open, setOpen ] = useLayoutState([ 'groups', 'foo', 'open' ], false);\n * }\n * ```\n *\n * @param {(string|number)[]} path\n * @param {any} [defaultValue]\n *\n * @returns {[ any, Function ]}\n */\nexport function useLayoutState(path, defaultValue) {\n  const {\n    getLayoutForKey,\n    setLayoutForKey\n  } = useContext(LayoutContext);\n\n  const layoutForKey = getLayoutForKey(path, defaultValue);\n  const [ value, set ] = useState(layoutForKey);\n\n  const setState = (newValue) => {\n\n    // (1) set component state\n    set(newValue);\n\n    // (2) set context\n    setLayoutForKey(path, newValue);\n  };\n\n  return [ value, setState ];\n}\n","import {\n  useEffect,\n  useRef\n} from 'preact/hooks';\n\n/**\n * @pinussilvestrus: we need to introduce our own hook to persist the previous\n * state on updates.\n *\n * cf. https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef\n} from 'preact/hooks';\n\nimport { isFunction } from 'min-dash';\n\nimport { PropertiesPanelContext } from '../context';\n\nimport { useEvent } from './useEvent';\n\n/**\n * Subscribe to `propertiesPanel.showEntry`.\n *\n * @param {string} id\n *\n * @returns {import('preact').Ref}\n */\nexport function useShowEntryEvent(id) {\n  const { onShow } = useContext(PropertiesPanelContext);\n\n  const ref = useRef();\n\n  const focus = useRef(false);\n\n  const onShowEntry = useCallback((event) => {\n    if (event.id === id) {\n      onShow();\n\n      if (!focus.current) {\n        focus.current = true;\n      }\n    }\n  }, [ id ]);\n\n  useEffect(() => {\n    if (focus.current && ref.current) {\n      if (isFunction(ref.current.focus)) {\n        ref.current.focus();\n      }\n\n      if (isFunction(ref.current.select)) {\n        ref.current.select();\n      }\n\n      focus.current = false;\n    }\n  });\n\n  useEvent('propertiesPanel.showEntry', onShowEntry);\n\n  return ref;\n}","import {\n  useEffect\n} from 'preact/hooks';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\n\n/**\n * @callback setSticky\n * @param {boolean} value\n */\n\n/**\n * Use IntersectionObserver to identify when DOM element is in sticky mode.\n * If sticky is observered setSticky(true) will be called.\n * If sticky mode is left, setSticky(false) will be called.\n *\n *\n * @param {Object} ref\n * @param {string} scrollContainerSelector\n * @param {setSticky} setSticky\n */\nexport function useStickyIntersectionObserver(ref, scrollContainerSelector, setSticky) {\n  useEffect(() => {\n\n    const Observer = IntersectionObserver;\n\n    // return early if IntersectionObserver is not available\n    if (!Observer) {\n      return;\n    }\n\n    let observer;\n\n    if (ref.current) {\n      const scrollContainer = domQuery(scrollContainerSelector);\n\n      observer = new Observer((entries) => {\n        entries.forEach(entry => {\n          if (entry.intersectionRatio < 1) {\n            setSticky(true);\n          }\n          else if (entry.intersectionRatio === 1) {\n            setSticky(false);\n          }\n        });\n      },\n      {\n        root: scrollContainer,\n        rootMargin: '0px 0px 999999% 0px', // Use bottom margin to avoid stickyness when scrolling out to bottom\n        threshold: [ 1 ]\n      });\n      observer.observe(ref.current);\n    }\n\n    // Unobserve if unmounted\n    return () => {\n      if (ref.current && observer) {\n        observer.unobserve(ref.current);\n      }\n    };\n\n  }, [ ref, scrollContainerSelector, setSticky ]);\n}\n","import { useCallback, useRef } from 'preact/hooks';\n\n/**\n * Creates a static function reference with changing body.\n * This is necessary when external libraries require a callback function\n * that has references to state variables.\n *\n * Usage:\n * const callback = useStaticCallback((val) => {val === currentState});\n *\n * The `callback` reference is static and can be safely used in external\n * libraries or as a prop that does not cause rerendering of children.\n *\n * @param {Function} callback function with changing reference\n * @returns {Function} static function reference\n */\nexport function useStaticCallback(callback) {\n  const callbackRef = useRef(callback);\n  callbackRef.current = callback;\n\n  return useCallback(\n    (...args) => callbackRef.current(...args),\n    []\n  );\n}","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  isFunction\n} from 'min-dash';\n\nimport {\n  useLayoutState\n} from '../hooks';\n\nimport { PropertiesPanelContext } from '../context';\n\nimport { useStickyIntersectionObserver } from '../hooks';\n\nimport { ArrowIcon } from './icons';\n\n/**\n * @param {import('../PropertiesPanel').GroupDefinition} props\n */\nexport default function Group(props) {\n  const {\n    element,\n    entries = [],\n    id,\n    label,\n    shouldOpen = false,\n  } = props;\n\n  const groupRef = useRef(null);\n\n  const [ open, setOpen ] = useLayoutState(\n    [ 'groups', id, 'open' ],\n    shouldOpen\n  );\n\n  const onShow = useCallback(() => setOpen(true), [ setOpen ]);\n\n  const toggleOpen = () => setOpen(!open);\n\n  const [ edited, setEdited ] = useState(false);\n\n  const [ sticky, setSticky ] = useState(false);\n\n  // set edited state depending on all entries\n  useEffect(() => {\n    const hasOneEditedEntry = entries.find(entry => {\n      const {\n        id,\n        isEdited\n      } = entry;\n\n      const entryNode = domQuery(`[data-entry-id=\"${id}\"]`);\n\n      if (!isFunction(isEdited) || !entryNode) {\n        return false;\n      }\n\n      const inputNode = domQuery('.bio-properties-panel-input', entryNode);\n\n      return isEdited(inputNode);\n    });\n\n    setEdited(hasOneEditedEntry);\n  }, [ entries ]);\n\n  // set css class when group is sticky to top\n  useStickyIntersectionObserver(groupRef, 'div.bio-properties-panel-scroll-container', setSticky);\n\n  const propertiesPanelContext = {\n    ...useContext(PropertiesPanelContext),\n    onShow\n  };\n\n  return <div class=\"bio-properties-panel-group\" data-group-id={ 'group-' + id } ref={ groupRef }>\n    <div class={ classnames(\n      'bio-properties-panel-group-header',\n      edited ? '' : 'empty',\n      open ? 'open' : '',\n      (sticky && open) ? 'sticky' : ''\n    ) } onClick={ toggleOpen }>\n      <div title={ label } class=\"bio-properties-panel-group-header-title\">\n        { label }\n      </div>\n      <div class=\"bio-properties-panel-group-header-buttons\">\n        {\n          edited && <DataMarker />\n        }\n        <button\n          title=\"Toggle section\"\n          class=\"bio-properties-panel-group-header-button bio-properties-panel-arrow\"\n        >\n          <ArrowIcon class={ open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right' } />\n        </button>\n      </div>\n    </div>\n    <div class={ classnames(\n      'bio-properties-panel-group-entries',\n      open ? 'open' : ''\n    ) }>\n      <PropertiesPanelContext.Provider value={ propertiesPanelContext }>\n        {\n          entries.map(entry => {\n            const {\n              component: Component,\n              id\n            } = entry;\n\n            return (\n              <Component\n                { ...entry }\n                element={ element }\n                key={ id } />\n            );\n          })\n        }\n      </PropertiesPanelContext.Provider>\n    </div>\n  </div>;\n}\n\nfunction DataMarker() {\n  return (\n    <div title=\"Section contains data\" class=\"bio-properties-panel-dot\"></div>\n  );\n}","/**\n * @typedef { {\n *  text: (element: object) => string,\n *  icon?: (element: Object) => import('preact').Component\n * } } PlaceholderDefinition\n *\n * @param { PlaceholderDefinition } props\n */\nexport default function Placeholder(props) {\n  const {\n    text,\n    icon: Icon\n  } = props;\n\n  return (\n    <div class=\"bio-properties-panel open\">\n      <section class=\"bio-properties-panel-placeholder\">\n        { Icon && <Icon class=\"bio-properties-panel-placeholder-icon\" /> }\n        <p class=\"bio-properties-panel-placeholder-text\">{ text }</p>\n      </section>\n    </div>\n  );\n}","import {\n  useState,\n  useEffect\n} from 'preact/hooks';\n\nimport {\n  assign,\n  get,\n  isArray,\n  set\n} from 'min-dash';\n\nimport classnames from 'classnames';\n\nimport Header from './components/Header';\n\nimport Group from './components/Group';\n\nimport Placeholder from './components/Placeholder';\n\nimport {\n  DescriptionContext,\n  ErrorsContext,\n  EventContext,\n  LayoutContext,\n  PropertiesPanelContext\n} from './context';\n\nimport { useEvent } from './hooks';\n\nconst DEFAULT_LAYOUT = {\n  open: true\n};\n\nconst DEFAULT_DESCRIPTION = {};\n\n\n/**\n * @typedef { {\n *    component: import('preact').Component,\n *    id: String,\n *    isEdited?: Function\n * } } EntryDefinition\n *\n * @typedef { {\n *    autoFocusEntry: String,\n *    autoOpen?: Boolean,\n *    entries: Array<EntryDefinition>,\n *    id: String,\n *    label: String,\n *    remove: (event: MouseEvent) => void\n * } } ListItemDefinition\n *\n * @typedef { {\n *    add: (event: MouseEvent) => void,\n *    component: import('preact').Component,\n *    element: Object,\n *    id: String,\n *    items: Array<ListItemDefinition>,\n *    label: String,\n *    shouldSort?: Boolean,\n *    shouldOpen?: Boolean\n * } } ListGroupDefinition\n *\n * @typedef { {\n *    component?: import('preact').Component,\n *    entries: Array<EntryDefinition>,\n *    id: String,\n *    label: String,\n *    shouldOpen?: Boolean\n * } } GroupDefinition\n *\n *  @typedef { {\n *    [id: String]: GetDescriptionFunction\n * } } DescriptionConfig\n *\n * @callback { {\n * @param {string} id\n * @param {Object} element\n * @returns {string}\n * } } GetDescriptionFunction\n *\n * @typedef { {\n *  getEmpty: (element: object) => import('./components/Placeholder').PlaceholderDefinition,\n *  getMultiple: (element: Object) => import('./components/Placeholder').PlaceholderDefinition\n * } } PlaceholderProvider\n *\n */\n\n\n/**\n * A basic properties panel component. Describes *how* content will be rendered, accepts\n * data from implementor to describe *what* will be rendered.\n *\n * @param {Object} props\n * @param {Object|Array} props.element\n * @param {import('./components/Header').HeaderProvider} props.headerProvider\n * @param {PlaceholderProvider} [props.placeholderProvider]\n * @param {Array<GroupDefinition|ListGroupDefinition>} props.groups\n * @param {Object} [props.layoutConfig]\n * @param {Function} [props.layoutChanged]\n * @param {DescriptionConfig} [props.descriptionConfig]\n * @param {Function} [props.descriptionLoaded]\n * @param {Object} [props.eventBus]\n */\nexport default function PropertiesPanel(props) {\n  const {\n    element,\n    headerProvider,\n    placeholderProvider,\n    groups,\n    layoutConfig = {},\n    layoutChanged,\n    descriptionConfig = {},\n    descriptionLoaded,\n    eventBus\n  } = props;\n\n  // set-up layout context\n  const [ layout, setLayout ] = useState(createLayout(layoutConfig));\n\n  useEffect(() => {\n    if (typeof layoutChanged === 'function') {\n      layoutChanged(layout);\n    }\n  }, [ layout, layoutChanged ]);\n\n  const getLayoutForKey = (key, defaultValue) => {\n    return get(layout, key, defaultValue);\n  };\n\n  const setLayoutForKey = (key, config) => {\n    const newLayout = assign({}, layout);\n    set(newLayout, key, config);\n    setLayout(newLayout);\n  };\n\n  const layoutContext = {\n    layout,\n    setLayout,\n    getLayoutForKey,\n    setLayoutForKey\n  };\n\n  // set-up description context\n  const description = createDescriptionContext(descriptionConfig);\n\n  if (typeof descriptionLoaded === 'function') {\n    descriptionLoaded(description);\n  }\n\n  const getDescriptionForId = (id, element) => {\n    return description[id] && description[id](element);\n  };\n\n  const descriptionContext = {\n    description,\n    getDescriptionForId\n  };\n\n  const [ errors, setErrors ] = useState({});\n\n  const onSetErrors = ({ errors }) => setErrors(errors);\n\n  useEvent('propertiesPanel.setErrors', onSetErrors, eventBus);\n\n  const errorsContext = {\n    errors\n  };\n\n  const eventContext = {\n    eventBus\n  };\n\n  const propertiesPanelContext = {\n    element\n  };\n\n  // empty state\n  if (placeholderProvider && !element) {\n    return <Placeholder { ...placeholderProvider.getEmpty() } />;\n  }\n\n  // multiple state\n  if (placeholderProvider && isArray(element)) {\n    return <Placeholder { ...placeholderProvider.getMultiple() } />;\n  }\n\n  return (\n    <PropertiesPanelContext.Provider value={ propertiesPanelContext }>\n      <ErrorsContext.Provider value={ errorsContext }>\n        <DescriptionContext.Provider value={ descriptionContext }>\n          <LayoutContext.Provider value={ layoutContext }>\n            <EventContext.Provider value={ eventContext }>\n              <div\n                class={ classnames(\n                  'bio-properties-panel',\n                  layout.open ? 'open' : '')\n                }>\n                <Header\n                  element={ element }\n                  headerProvider={ headerProvider } />\n                <div class=\"bio-properties-panel-scroll-container\">\n                  {\n                    groups.map(group => {\n                      const {\n                        component: Component = Group,\n                        id\n                      } = group;\n\n                      return (\n                        <Component\n                          { ...group }\n                          key={ id }\n                          element={ element } />\n                      );\n                    })\n                  }\n                </div>\n              </div>\n            </EventContext.Provider>\n          </LayoutContext.Provider>\n        </DescriptionContext.Provider>\n      </ErrorsContext.Provider>\n    </PropertiesPanelContext.Provider>\n  );\n}\n\n\n// helpers //////////////////\n\nfunction createLayout(overrides) {\n  return {\n    ...DEFAULT_LAYOUT,\n    ...overrides\n  };\n}\n\nfunction createDescriptionContext(overrides) {\n  return {\n    ...DEFAULT_DESCRIPTION,\n    ...overrides\n  };\n}","import {\n  useEffect,\n  useRef,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\n/**\n *\n * @param {object} props\n * @param {string} [props.class]\n * @param {import('preact').Component[]} [props.menuItems]\n * @returns\n */\nexport function DropdownButton(props) {\n  const {\n    class: className,\n    children,\n    menuItems = []\n  } = props;\n\n  const dropdownRef = useRef(null);\n  const menuRef = useRef(null);\n\n  const [ open, setOpen ] = useState(false);\n  const close = () => setOpen(false);\n\n  function onDropdownToggle(event) {\n    if (menuRef.current && menuRef.current.contains(event.target)) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    setOpen(open => !open);\n  }\n\n  function onActionClick(event, action) {\n    event.stopPropagation();\n\n    close();\n    action();\n  }\n\n  useGlobalClick([ dropdownRef.current ], () => close());\n\n  return (\n    <div\n      class={ classnames('bio-properties-panel-dropdown-button', { open }, className) }\n      onClick={ onDropdownToggle }\n      ref={ dropdownRef }\n    >\n      { children }\n      <div class=\"bio-properties-panel-dropdown-button__menu\" ref={ menuRef }>\n        { menuItems.map((item, index) => (\n          <MenuItem onClick={ onActionClick } item={ item } key={ index } />\n        )) }\n      </div>\n    </div>\n  );\n}\n\nfunction MenuItem({ item, onClick }) {\n  if (item.separator) {\n    return <div class=\"bio-properties-panel-dropdown-button__menu-item bio-properties-panel-dropdown-button__menu-item--separator\" />;\n  }\n\n  if (item.action) {\n    return (<button\n      class=\"bio-properties-panel-dropdown-button__menu-item bio-properties-panel-dropdown-button__menu-item--actionable\"\n      onClick={ event => onClick(event, item.action) }\n    >\n      {item.entry}\n    </button>);\n  }\n\n  return <div\n    class=\"bio-properties-panel-dropdown-button__menu-item\"\n  >\n    {item.entry}\n  </div>;\n}\n\n/**\n *\n * @param {Array<null | Element>} ignoredElements\n * @param {Function} callback\n */\nfunction useGlobalClick(ignoredElements, callback) {\n  useEffect(() => {\n\n    /**\n     * @param {MouseEvent} event\n     */\n    function listener(event) {\n      if (ignoredElements.some(element => element && element.contains(event.target))) {\n        return;\n      }\n\n      callback();\n    }\n\n    document.addEventListener('click', listener, { capture: true });\n\n    return () => document.removeEventListener('click', listener, { capture: true });\n  }, [ ...ignoredElements, callback ]);\n}\n","import classnames from 'classnames';\n\nexport function HeaderButton(props) {\n  const {\n    children = null,\n    class: classname,\n    onClick = () => {},\n    ...otherProps\n  } = props;\n\n  return <button\n    { ...otherProps }\n    onClick={ onClick }\n    class={ classnames('bio-properties-panel-group-header-button', classname) }>\n    { children }\n  </button>;\n}\n","import {\n  useCallback,\n  useContext,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\nimport { isFunction } from 'min-dash';\n\nimport {\n  ArrowIcon,\n  DeleteIcon,\n} from '../icons';\n\nimport { PropertiesPanelContext } from '../../context';\n\n\nexport default function CollapsibleEntry(props) {\n  const {\n    element,\n    entries = [],\n    id,\n    label,\n    open: shouldOpen,\n    remove\n  } = props;\n\n  const [ open, setOpen ] = useState(shouldOpen);\n\n  const toggleOpen = () => setOpen(!open);\n\n  const { onShow } = useContext(PropertiesPanelContext);\n\n  const propertiesPanelContext = {\n    ...useContext(PropertiesPanelContext),\n    onShow: useCallback(() => {\n      setOpen(true);\n\n      if (isFunction(onShow)) {\n        onShow();\n      }\n    }, [ onShow, setOpen ])\n  };\n\n  // todo(pinussilvestrus): translate once we have a translate mechanism for the core\n  const placeholderLabel = '<empty>';\n\n  return (\n    <div\n      data-entry-id={ id }\n      class={ classnames(\n        'bio-properties-panel-collapsible-entry',\n        open ? 'open' : ''\n      ) }>\n      <div class=\"bio-properties-panel-collapsible-entry-header\" onClick={ toggleOpen }>\n        <div\n          title={ label || placeholderLabel }\n          class={ classnames(\n            'bio-properties-panel-collapsible-entry-header-title',\n            !label && 'empty'\n          ) }>\n          { label || placeholderLabel }\n        </div>\n        <button\n          title=\"Toggle list item\"\n          class=\"bio-properties-panel-arrow  bio-properties-panel-collapsible-entry-arrow\"\n        >\n          <ArrowIcon class={ open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right' } />\n        </button>\n        {\n          remove\n            ?\n            (\n              <button title=\"Delete item\" class=\"bio-properties-panel-remove-entry\" onClick={ remove }>\n                <DeleteIcon />\n              </button>\n            )\n            : null\n        }\n      </div>\n      <div class={ classnames(\n        'bio-properties-panel-collapsible-entry-entries',\n        open ? 'open' : ''\n      ) }>\n        <PropertiesPanelContext.Provider value={ propertiesPanelContext }>\n          {\n            entries.map(entry => {\n              const {\n                component: Component,\n                id\n              } = entry;\n\n              return (\n                <Component\n                  { ...entry }\n                  element={ element }\n                  key={ id } />\n              );\n            })\n          }\n        </PropertiesPanelContext.Provider>\n      </div>\n    </div>\n  );\n}","import {\n  useEffect\n} from 'preact/hooks';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport { isFunction } from 'min-dash';\n\nimport CollapsibleEntry from './entries/Collapsible';\n\n/**\n * @param {import('../PropertiesPanel').ListItemDefinition} props\n */\nexport default function ListItem(props) {\n  const {\n    autoFocusEntry,\n    autoOpen\n  } = props;\n\n  // focus specified entry on auto open\n  useEffect(() => {\n    if (autoOpen && autoFocusEntry) {\n      const entry = domQuery(`[data-entry-id=\"${autoFocusEntry}\"]`);\n\n      const focusableInput = domQuery('.bio-properties-panel-input', entry);\n\n      if (focusableInput) {\n\n        if (isFunction(focusableInput.select)) {\n          focusableInput.select();\n        } else if (isFunction(focusableInput.focus)) {\n          focusableInput.focus();\n        }\n\n      }\n    }\n  }, [ autoOpen, autoFocusEntry ]);\n\n\n  return (\n    <div class=\"bio-properties-panel-list-item\">\n      <CollapsibleEntry\n        { ...props }\n        open={ autoOpen } />\n    </div>\n  );\n\n}\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\nimport {\n  find,\n  sortBy\n} from 'min-dash';\n\nimport {\n  useLayoutState,\n  usePrevious\n} from '../hooks';\n\nimport ListItem from './ListItem';\n\nimport {\n  ArrowIcon,\n  CreateIcon\n} from './icons';\n\nimport { PropertiesPanelContext } from '../context';\n\nimport { useStickyIntersectionObserver } from '../hooks';\n\nconst noop = () => {};\n\n/**\n * @param {import('../PropertiesPanel').ListGroupDefinition} props\n */\nexport default function ListGroup(props) {\n  const {\n    add,\n    element,\n    id,\n    items,\n    label,\n    shouldOpen = true,\n    shouldSort = true\n  } = props;\n\n\n  const groupRef = useRef(null);\n\n  const [ open, setOpen ] = useLayoutState(\n    [ 'groups', id, 'open' ],\n    false\n  );\n\n  const [ sticky, setSticky ] = useState(false);\n\n  const onShow = useCallback(() => setOpen(true), [ setOpen ]);\n\n  const [ ordering, setOrdering ] = useState([]);\n  const [ newItemAdded, setNewItemAdded ] = useState(false);\n\n  const prevItems = usePrevious(items);\n  const prevElement = usePrevious(element);\n\n  const elementChanged = element !== prevElement;\n  const shouldHandleEffects = !elementChanged && (shouldSort || shouldOpen);\n\n  // reset initial ordering when element changes (before first render)\n  if (elementChanged) {\n    setOrdering(createOrdering(shouldSort ? sortItems(items) : items));\n  }\n\n  // keep ordering in sync to items - and open changes\n\n  // (0) set initial ordering from given items\n  useEffect(() => {\n    if (!prevItems || !shouldSort) {\n      setOrdering(createOrdering(items));\n    }\n  }, [ items, element ]);\n\n  // (1) items were added\n  useEffect(() => {\n    if (shouldHandleEffects && prevItems && items.length > prevItems.length) {\n\n      let add = [];\n\n      items.forEach(item => {\n        if (!ordering.includes(item.id)) {\n          add.push(item.id);\n        }\n      });\n\n      let newOrdering = ordering;\n\n      // open if not open and configured\n      if (!open && shouldOpen) {\n        toggleOpen();\n\n        // if I opened and I should sort, then sort items\n        if (shouldSort) {\n          newOrdering = createOrdering(sortItems(items));\n        }\n      }\n\n      // add new items on top or bottom depending on sorting behavior\n      newOrdering = newOrdering.filter(item => !add.includes(item));\n      if (shouldSort) {\n        newOrdering.unshift(...add);\n      } else {\n        newOrdering.push(...add);\n      }\n\n      setOrdering(newOrdering);\n      setNewItemAdded(true);\n    } else {\n      setNewItemAdded(false);\n    }\n  }, [ items, open, shouldHandleEffects ]);\n\n  // (2) sort items on open if shouldSort is set\n  useEffect(() => {\n\n    if (shouldSort && open && !newItemAdded) {\n      setOrdering(createOrdering(sortItems(items)));\n    }\n  }, [ open, shouldSort ]);\n\n  // (3) items were deleted\n  useEffect(() => {\n    if (shouldHandleEffects && prevItems && items.length < prevItems.length) {\n      let keep = [];\n\n      ordering.forEach(o => {\n        if (getItem(items, o)) {\n          keep.push(o);\n        }\n      });\n\n      setOrdering(keep);\n    }\n  }, [ items, shouldHandleEffects ]);\n\n  // set css class when group is sticky to top\n  useStickyIntersectionObserver(groupRef, 'div.bio-properties-panel-scroll-container', setSticky);\n\n  const toggleOpen = () => setOpen(!open);\n\n  const hasItems = !!items.length;\n\n  const propertiesPanelContext = {\n    ...useContext(PropertiesPanelContext),\n    onShow\n  };\n\n  return <div class=\"bio-properties-panel-group\" data-group-id={ 'group-' + id } ref={ groupRef }>\n    <div\n      class={ classnames(\n        'bio-properties-panel-group-header',\n        hasItems ? '' : 'empty',\n        (hasItems && open) ? 'open' : '',\n        (sticky && open) ? 'sticky' : ''\n      ) }\n      onClick={ hasItems ? toggleOpen : noop }>\n      <div\n        title={ label }\n        class=\"bio-properties-panel-group-header-title\"\n      >\n        { label }\n      </div>\n      <div class=\"bio-properties-panel-group-header-buttons\">\n        {\n          add\n            ? (\n              <button\n                title=\"Create new list item\"\n                class=\"bio-properties-panel-group-header-button bio-properties-panel-add-entry\"\n                onClick={ add }\n              >\n                <CreateIcon />\n                {\n                  !hasItems ? (\n                    <span class=\"bio-properties-panel-add-entry-label\">Create</span>\n                  )\n                    : null\n                }\n              </button>\n            )\n            : null\n        }\n        {\n          hasItems\n            ? (\n              <div\n                title={ `List contains ${items.length} item${items.length != 1 ? 's' : ''}` }\n                class=\"bio-properties-panel-list-badge\"\n              >\n                { items.length }\n              </div>\n            )\n            : null\n        }\n        {\n          hasItems\n            ? (\n              <button\n                title=\"Toggle section\"\n                class=\"bio-properties-panel-group-header-button bio-properties-panel-arrow\"\n              >\n                <ArrowIcon class={ open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right' } />\n              </button>\n            )\n            : null\n        }\n      </div>\n    </div>\n    <div class={ classnames(\n      'bio-properties-panel-list',\n      open && hasItems ? 'open' : ''\n    ) }>\n      <PropertiesPanelContext.Provider value={ propertiesPanelContext }>\n\n        {\n          ordering.map((o, index) => {\n            const item = getItem(items, o);\n\n            if (!item) {\n              return;\n            }\n\n            const { id } = item;\n\n            // if item was added, open first or last item based on ordering\n            const autoOpen = newItemAdded && (shouldSort ? index === 0 : index === ordering.length - 1);\n\n            return (\n              <ListItem\n                { ...item }\n                autoOpen={ autoOpen }\n                element={ element }\n                index={ index }\n                key={ id } />\n            );\n          })\n        }\n      </PropertiesPanelContext.Provider>\n    </div>\n  </div>;\n}\n\n\n// helpers ////////////////////\n\n/**\n * Sorts given items alphanumeric by label\n */\nfunction sortItems(items) {\n  return sortBy(items, i => i.label.toLowerCase());\n}\n\nfunction getItem(items, id) {\n  return find(items, i => i.id === id);\n}\n\nfunction createOrdering(items) {\n  return items.map(i => i.id);\n}\n","import {\n  useDescriptionContext\n} from '../../hooks';\n\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.forId - id of the entry the description is used for\n * @param {String} props.value\n */\nexport default function Description(props) {\n  const {\n    element,\n    forId,\n    value\n  } = props;\n\n  const contextDescription = useDescriptionContext(forId, element);\n\n  const description = value || contextDescription;\n\n  if (description) {\n    return (\n      <div class=\"bio-properties-panel-description\">\n        { description }\n      </div>\n    );\n  }\n}\n","import {\n  useError,\n  useShowEntryEvent\n} from '../../hooks';\n\nimport {\n  useEffect,\n  useState\n} from 'preact/hooks';\n\nimport Description from './Description';\n\nfunction Checkbox(props) {\n  const {\n    id,\n    label,\n    onChange,\n    disabled,\n    value = false,\n    onFocus,\n    onBlur\n  } = props;\n\n  const [ localValue, setLocalValue ] = useState(value);\n\n  const handleChangeCallback = ({ target }) => {\n    onChange(target.checked);\n  };\n\n  const handleChange = e => {\n    handleChangeCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n  const ref = useShowEntryEvent(id);\n\n  return (\n    <div class=\"bio-properties-panel-checkbox\">\n      <input\n        ref={ ref }\n        id={ prefixId(id) }\n        name={ id }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        type=\"checkbox\"\n        class=\"bio-properties-panel-input\"\n        onChange={ handleChange }\n        checked={ localValue }\n        disabled={ disabled } />\n      <label for={ prefixId(id) } class=\"bio-properties-panel-label\">{ label }</label>\n    </div>\n  );\n}\n\n\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {boolean} [props.disabled]\n */\nexport default function CheckboxEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    label,\n    getValue,\n    setValue,\n    disabled,\n    onFocus,\n    onBlur\n  } = props;\n\n  const value = getValue(element);\n\n  const error = useError(id);\n\n  return (\n    <div class=\"bio-properties-panel-entry bio-properties-panel-checkbox-entry\" data-entry-id={ id }>\n      <Checkbox\n        disabled={ disabled }\n        id={ id }\n        key={ element }\n        label={ label }\n        onChange={ setValue }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        value={ value } />\n      { error && <div class=\"bio-properties-panel-error\">{ error }</div> }\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.checked;\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}\n","import classNames from 'classnames';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { forwardRef } from 'preact/compat';\n\nimport FeelEditor from '@bpmn-io/feel-editor';\nimport { useStaticCallback } from '../../../hooks';\n\n/**\n * Buffer `.focus()` calls while the editor is not initialized.\n * Set Focus inside when the editor is ready.\n */\nconst useBufferedFocus = function(editor, ref) {\n\n  const [ buffer, setBuffer ] = useState(undefined);\n\n  ref.current = useMemo(() => ({\n    focus: (offset) => {\n      if (editor) {\n        editor.focus(offset);\n      } else {\n        if (typeof offset === 'undefined') {\n          offset = Infinity;\n        }\n        setBuffer(offset);\n      }\n    }\n  }), [ editor ]);\n\n  useEffect(() => {\n    if (typeof buffer !== 'undefined' && editor) {\n      editor.focus(buffer);\n      setBuffer(false);\n    }\n  }, [ editor, buffer ]);\n};\n\nconst CodeEditor = forwardRef((props, ref) => {\n\n  const {\n    value,\n    onInput,\n    onFeelToggle,\n    onLint = () => {},\n    disabled,\n    tooltipContainer,\n    variables\n  } = props;\n\n  const inputRef = useRef();\n  const [ editor, setEditor ] = useState();\n  const [ localValue, setLocalValue ] = useState(value || '');\n\n  useBufferedFocus(editor, ref);\n\n  const handleInput = useStaticCallback(newValue => {\n    onInput(newValue);\n    setLocalValue(newValue);\n  });\n\n  useEffect(() => {\n\n    let editor;\n\n    /* Trigger FEEL toggle when\n     *\n     * - `backspace` is pressed\n     * - AND the cursor is at the beginning of the input\n     */\n    const onKeyDown = e => {\n      if (e.key !== 'Backspace' || !editor) {\n        return;\n      }\n\n      const selection = editor.getSelection();\n      const range = selection.ranges[selection.mainIndex];\n\n      if (range.from === 0 && range.to === 0) {\n        onFeelToggle();\n      }\n    };\n\n    editor = new FeelEditor({\n      container: inputRef.current,\n      onChange: handleInput,\n      onKeyDown: onKeyDown,\n      onLint: onLint,\n      tooltipContainer: tooltipContainer,\n      value: localValue,\n      variables: variables\n    });\n\n    setEditor(\n      editor\n    );\n\n    return () => {\n      onLint([]);\n      inputRef.current.innerHTML = '';\n      setEditor(null);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    if (value === localValue) {\n      return;\n    }\n\n    editor.setValue(value);\n    setLocalValue(value);\n  }, [ value ]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    editor.setVariables(variables);\n  }, [ variables ]);\n\n  const handleClick = () => {\n    ref.current.focus();\n  };\n\n  return <div class={ classNames('bio-properties-panel-feel-editor-container', disabled ? 'disabled' : null) }>\n    <div\n      name={ props.name }\n      class={ classNames('bio-properties-panel-input', localValue ? 'edited' : null) }\n      ref={ inputRef }\n      onClick={ handleClick }\n    ></div>\n  </div>;\n});\n\nexport default CodeEditor;","export function FeelIndicator(props) {\n  const {\n    active\n  } = props;\n\n  if (!active) {\n    return null;\n  }\n\n  return <span class=\"bio-properties-panel-feel-indicator\">\n    =\n  </span>;\n}","import classNames from 'classnames';\nimport { FeelOptionalIcon, FeelRequiredIcon } from '../../icons';\n\nconst noop = () => {};\n\n/**\n * @param {Object} props\n * @param {Object} props.label\n * @param {String} props.feel\n */\nexport default function FeelIcon(props) {\n\n  const {\n    label,\n    feel = false,\n    active,\n    disabled = false,\n    onClick = noop\n  } = props;\n\n  const feelRequiredLabel = ' must be a FEEL expression';\n  const feelOptionalLabel = ' can optionally be a FEEL expression';\n\n  const handleClick = e => {\n    onClick(e);\n\n    // when pointer event was created from keyboard, keep focus on button\n    if (!e.pointerType) {\n      e.stopPropagation();\n    }\n  };\n\n  return (\n    <button\n      class={ classNames('bio-properties-panel-feel-icon',\n        active ? 'active' : null,\n        feel === 'required' ? 'required' : 'optional') }\n      onClick={ handleClick }\n      disabled={ feel === 'required' || disabled }\n      title={\n        label + (\n          feel === 'required' ? feelRequiredLabel : feelOptionalLabel\n        )\n      }\n    >\n      {feel === 'required' ? <FeelRequiredIcon /> : <FeelOptionalIcon />}\n    </button>\n  );\n}","import Description from '../Description';\n\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'preact/hooks';\n\nimport { forwardRef } from 'preact/compat';\n\nimport classnames from 'classnames';\n\nimport { isFunction } from 'min-dash';\n\nimport {\n  usePrevious,\n  useShowEntryEvent,\n  useError,\n  useStaticCallback\n} from '../../../hooks';\n\nimport CodeEditor from './FeelEditor';\nimport { FeelIndicator } from './FeelIndicator';\nimport FeelIcon from './FeelIcon';\n\nconst noop = () => { };\n\nfunction FeelTextfield(props) {\n  const {\n    debounce,\n    id,\n    label,\n    onInput,\n    onError,\n    feel,\n    value = '',\n    disabled = false,\n    variables,\n    tooltipContainer,\n    OptionalComponent = OptionalFeelInput\n  } = props;\n\n  const [ localValue, _setLocalValue ] = useState(value);\n\n  const editorRef = useShowEntryEvent(id);\n  const containerRef = useRef();\n\n  const feelActive = localValue.startsWith('=') || feel === 'required';\n  const feelOnlyValue = localValue.startsWith('=') ? localValue.substring(1) : localValue;\n\n  const [ focus, _setFocus ] = useState(undefined);\n\n  const setFocus = (offset = 0) => {\n    const hasFocus = containerRef.current.contains(document.activeElement);\n\n    // Keep caret position if it is already focused, otherwise focus at the end\n    const position = hasFocus ? document.activeElement.selectionStart : Infinity;\n\n    _setFocus(position + offset);\n  };\n\n  const handleInputCallback = useMemo(() => {\n    return debounce((newValue) => {\n      onInput(newValue);\n    });\n  }, [ onInput, debounce ]);\n\n  const setLocalValue = newValue => {\n    _setLocalValue(newValue);\n\n    if (!newValue || newValue === '=') {\n      handleInputCallback(undefined);\n    } else {\n      handleInputCallback(newValue);\n    }\n\n  };\n\n  const handleFeelToggle = useStaticCallback(() => {\n    if (feel === 'required') {\n      return;\n    }\n\n    if (!feelActive) {\n      setLocalValue('=' + localValue);\n    } else {\n      setLocalValue(feelOnlyValue);\n    }\n  });\n\n  const handleLocalInput = (newValue) => {\n    if (feelActive) {\n      newValue = '=' + newValue;\n    }\n\n    if (newValue === localValue) {\n      return;\n    }\n\n    setLocalValue(newValue);\n\n    if (!feelActive && newValue.startsWith('=')) {\n\n      // focus is behind `=` sign that will be removed\n      setFocus(-1);\n    }\n  };\n\n  const handleLint = useStaticCallback(lint => {\n\n    if (!(lint && lint.length)) {\n      onError(undefined);\n      return;\n    }\n    const error = lint[0];\n    const message = `${error.source}: ${error.message}`;\n\n    onError(message);\n  });\n\n  useEffect(() => {\n    if (typeof focus !== 'undefined') {\n      editorRef.current.focus(focus);\n      _setFocus(undefined);\n    }\n  }, [ focus ]);\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    // External value change removed content => keep FEEL configuration\n    if (!value) {\n      setLocalValue(feelActive ? '=' : '');\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n\n  // copy-paste integration\n  useEffect(() => {\n    const copyHandler = event => {\n      if (!feelActive) {\n        return;\n      }\n      event.clipboardData.setData('application/FEEL', event.clipboardData.getData('text'));\n    };\n\n    const pasteHandler = event => {\n      if (feelActive) {\n        return;\n      }\n\n      const data = event.clipboardData.getData('application/FEEL');\n\n      if (data) {\n        setTimeout(() => {\n          handleFeelToggle();\n          setFocus();\n        });\n      }\n    };\n    containerRef.current.addEventListener('copy', copyHandler);\n    containerRef.current.addEventListener('cut', copyHandler);\n    containerRef.current.addEventListener('paste', pasteHandler);\n\n    return () => {\n      containerRef.current.removeEventListener('copy', copyHandler);\n      containerRef.current.removeEventListener('cut', copyHandler);\n      containerRef.current.removeEventListener('paste', pasteHandler);\n    };\n  }, [ containerRef, feelActive, handleFeelToggle, setFocus ]);\n\n  return (\n    <div class=\"bio-properties-panel-feel-entry\">\n      <label for={ prefixId(id) } class=\"bio-properties-panel-label\" onClick={ () => setFocus() }>\n        {label}\n        <FeelIcon\n          label={ label }\n          feel={ feel }\n          onClick={ handleFeelToggle }\n          active={ feelActive }></FeelIcon>\n      </label>\n\n      <div class=\"bio-properties-panel-feel-container\" ref={ containerRef }>\n        <FeelIndicator\n          active={ feelActive }\n          disabled={ feel !== 'optional' || disabled }\n          onClick={ handleFeelToggle }\n        />\n        {feelActive ?\n          <CodeEditor\n            id={ prefixId(id) }\n            name={ id }\n            onInput={ handleLocalInput }\n            disabled={ disabled }\n            onFeelToggle={ () => { handleFeelToggle(); setFocus(true); } }\n            onLint={ handleLint }\n            value={ feelOnlyValue }\n            variables={ variables }\n            ref={ editorRef }\n            tooltipContainer={ tooltipContainer }\n          /> :\n          <OptionalComponent\n            { ...props }\n            onInput={ handleLocalInput }\n            value={ localValue }\n            ref={ editorRef }\n          />\n        }\n      </div>\n    </div>\n  );\n}\n\nconst OptionalFeelInput = forwardRef((props, ref) => {\n  const {\n    id,\n    disabled,\n    onInput,\n    value,\n    onFocus,\n    onBlur\n  } = props;\n\n  const inputRef = useRef();\n\n  // To be consistent with the FEEL editor, set focus at start of input\n  // this ensures clean editing experience when switching with the keyboard\n  ref.current = {\n    focus: (position) => {\n      const input = inputRef.current;\n      if (!input) {\n        return;\n      }\n\n      input.focus();\n      if (typeof position === 'number') {\n        if (position > value.length) {\n          position = value.length;\n        }\n        input.setSelectionRange(position, position);\n      }\n\n    }\n  };\n\n  return <input\n    id={ prefixId(id) }\n    type=\"text\"\n    ref={ inputRef }\n    name={ id }\n    spellCheck=\"false\"\n    autoComplete=\"off\"\n    disabled={ disabled }\n    class=\"bio-properties-panel-input\"\n    onInput={ e => onInput(e.target.value) }\n    onFocus={ onFocus }\n    onBlur={ onBlur }\n    value={ value || '' } />;\n});\n\n\nconst OptionalFeelTextArea = forwardRef((props, ref) => {\n  const {\n    id,\n    disabled,\n    onInput,\n    value,\n    onFocus,\n    onBlur\n  } = props;\n\n  const inputRef = useRef();\n\n  // To be consistent with the FEEL editor, set focus at start of input\n  // this ensures clean editing experience when switching with the keyboard\n  ref.current = {\n    focus: () => {\n      const input = inputRef.current;\n      if (!input) {\n        return;\n      }\n\n      input.focus();\n      input.setSelectionRange(0, 0);\n    }\n  };\n\n  return <textarea\n    id={ prefixId(id) }\n    type=\"text\"\n    ref={ inputRef }\n    name={ id }\n    spellCheck=\"false\"\n    autoComplete=\"off\"\n    disabled={ disabled }\n    class=\"bio-properties-panel-input\"\n    onInput={ e => onInput(e.target.value) }\n    onFocus={ onFocus }\n    onBlur={ onBlur }\n    value={ value || '' }\n    data-gramm=\"false\"\n  />;\n});\n\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {Boolean} props.debounce\n * @param {Boolean} props.disabled\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.validate\n */\nexport default function FeelEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    debounce,\n    disabled,\n    feel,\n    label,\n    getValue,\n    setValue,\n    tooltipContainer,\n    validate,\n    show = noop,\n    example,\n    variables,\n    onFocus,\n    onBlur\n  } = props;\n\n  const [ cachedInvalidValue, setCachedInvalidValue ] = useState(null);\n  const [ validationError, setValidationError ] = useState(null);\n  const [ localError, setLocalError ] = useState(null);\n\n  let value = getValue(element);\n\n  const previousValue = usePrevious(value);\n\n  useEffect(() => {\n    if (isFunction(validate)) {\n      const newValidationError = validate(value) || null;\n\n      setValidationError(newValidationError);\n    }\n  }, [ value ]);\n\n  const onInput = useStaticCallback((newValue) => {\n    let newValidationError = null;\n\n    if (isFunction(validate)) {\n      newValidationError = validate(newValue) || null;\n    }\n\n    if (newValidationError) {\n      setCachedInvalidValue(newValue);\n    } else {\n\n      // don't create multiple commandStack entries for the same value\n      if (newValue !== value) {\n        setValue(newValue);\n      }\n    }\n\n    setValidationError(newValidationError);\n  });\n\n  const onError = useCallback(err => {\n    setLocalError(err);\n  }, []);\n\n  if (previousValue === value && validationError) {\n    value = cachedInvalidValue;\n  }\n\n  const temporaryError = useError(id);\n\n  const error = localError || temporaryError || validationError;\n\n  return (\n    <div\n      class={ classnames(\n        props.class,\n        'bio-properties-panel-entry',\n        error ? 'has-error' : '')\n      }\n      data-entry-id={ id }>\n      <FeelTextfield\n        debounce={ debounce }\n        disabled={ disabled }\n        feel={ feel }\n        id={ id }\n        key={ element }\n        label={ label }\n        onInput={ onInput }\n        onError={ onError }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        example={ example }\n        show={ show }\n        value={ value }\n        variables={ variables }\n        tooltipContainer={ tooltipContainer }\n        OptionalComponent={ props.OptionalComponent } />\n      {error && <div class=\"bio-properties-panel-error\">{error}</div>}\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\n\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {Boolean} props.debounce\n * @param {Boolean} props.disabled\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {Function} props.validate\n */\nexport function FeelTextArea(props) {\n  return <FeelEntry class=\"bio-properties-panel-feel-textarea\" OptionalComponent={ OptionalFeelTextArea } { ...props } />;\n}\n\nexport function isEdited(node) {\n  return node && (!!node.value || node.classList.contains('edited'));\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${id}`;\n}\n\n","import {\n  useEffect,\n  useRef,\n  useState\n} from 'preact/hooks';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport { isFunction } from 'min-dash';\n\nimport {\n  useKeyFactory,\n  usePrevious\n} from '../../hooks';\n\nimport classnames from 'classnames';\n\nimport {\n  ArrowIcon,\n  CreateIcon,\n  DeleteIcon\n} from '../icons';\n\n/**\n * Entry for handling lists represented as nested entries.\n *\n * @template Item\n * @param {object} props\n * @param {string} props.id\n * @param {*} props.element\n * @param {Function} props.onAdd\n * @param {import('preact').Component} props.component\n * @param {string} [props.label='<empty>']\n * @param {Function} [props.onRemove]\n * @param {Item[]} [props.items]\n * @param {boolean} [props.open]\n * @param {string|boolean} [props.autoFocusEntry] either a custom selector string or true to focus the first input\n * @param {(a: Item, b: Item) => -1 | 0 | 1} [props.compareFn]\n * @returns\n */\nexport default function List(props) {\n  const {\n    id,\n    element,\n    items = [],\n    component,\n    label = '<empty>',\n    open: shouldOpen,\n    onAdd,\n    onRemove,\n    autoFocusEntry,\n    compareFn,\n    ...restProps\n  } = props;\n\n  const [ open, setOpen ] = useState(!!shouldOpen);\n\n  const hasItems = !!items.length;\n  const toggleOpen = () => hasItems && setOpen(!open);\n\n  const opening = !usePrevious(open) && open;\n  const elementChanged = usePrevious(element) !== element;\n  const shouldReset = opening || elementChanged;\n  const sortedItems = useSortedItems(items, compareFn, shouldReset);\n\n  const newItems = useNewItems(items, elementChanged);\n\n  useEffect(() => {\n    if (open && !hasItems) {\n      setOpen(false);\n    }\n  }, [ open, hasItems ]);\n\n  /**\n   * @param {MouseEvent} event\n   */\n  function addItem(event) {\n    event.stopPropagation();\n    onAdd();\n\n    if (!open) {\n      setOpen(true);\n    }\n  }\n\n  return (\n    <div\n      data-entry-id={ id }\n      class={ classnames(\n        'bio-properties-panel-entry',\n        'bio-properties-panel-list-entry',\n        hasItems ? '' : 'empty',\n        open ? 'open' : ''\n      ) }>\n      <div class=\"bio-properties-panel-list-entry-header\" onClick={ toggleOpen }>\n        <div\n          title={ label }\n          class={ classnames(\n            'bio-properties-panel-list-entry-header-title',\n            open && 'open'\n          ) }>\n          { label }\n        </div>\n        <div\n          class=\"bio-properties-panel-list-entry-header-buttons\"\n        >\n          <button\n            title=\"Create new list item\"\n            onClick={ addItem }\n            class=\"bio-properties-panel-add-entry\"\n          >\n            <CreateIcon />\n            {\n              !hasItems ? (\n                <span class=\"bio-properties-panel-add-entry-label\">Create</span>\n              )\n                : null\n            }\n          </button>\n          {\n            hasItems && (\n              <div\n                title={ `List contains ${items.length} item${items.length != 1 ? 's' : ''}` }\n                class=\"bio-properties-panel-list-badge\"\n              >\n                { items.length }\n              </div>\n            )\n          }\n          {\n            hasItems && (\n              <button\n                title=\"Toggle list item\"\n                class=\"bio-properties-panel-arrow\"\n              >\n                <ArrowIcon class={ open ? 'bio-properties-panel-arrow-down' : 'bio-properties-panel-arrow-right' } />\n              </button>\n            )\n          }\n        </div>\n      </div>\n      {\n        hasItems && (\n          <ItemsList\n            { ...restProps }\n            autoFocusEntry={ autoFocusEntry }\n            component={ component }\n            element={ element }\n            id={ id }\n            items={ sortedItems }\n            newItems={ newItems }\n            onRemove={ onRemove }\n            open={ open }\n          />\n        )\n      }\n    </div>\n  );\n}\n\nfunction ItemsList(props) {\n  const {\n    autoFocusEntry,\n    component: Component,\n    element,\n    id,\n    items,\n    newItems,\n    onRemove,\n    open,\n    ...restProps\n  } = props;\n\n  const getKey = useKeyFactory();\n\n  const newItem = newItems[0];\n\n  useEffect(() => {\n    if (newItem && autoFocusEntry) {\n\n      // (0) select the parent entry (containing all list items)\n      const entry = domQuery(`[data-entry-id=\"${id}\"]`);\n\n      // (1) select the first input or a custom element to be focussed\n      const selector = typeof(autoFocusEntry) === 'boolean' ?\n        '.bio-properties-panel-input' :\n        autoFocusEntry;\n      const focusableInput = domQuery(selector, entry);\n\n      // (2) set focus\n      if (focusableInput) {\n\n        if (isFunction(focusableInput.select)) {\n          focusableInput.select();\n        } else if (isFunction(focusableInput.focus)) {\n          focusableInput.focus();\n        }\n\n      }\n    }\n  }, [ newItem, autoFocusEntry, id ]);\n\n  return <ol class={ classnames(\n    'bio-properties-panel-list-entry-items',\n    open ? 'open' : ''\n  ) }>\n    {\n      items.map((item, index) => {\n        const key = getKey(item);\n\n        return (<li class=\"bio-properties-panel-list-entry-item\" key={ key }>\n          <Component\n            { ...restProps }\n            element={ element }\n            id={ id }\n            index={ index }\n            item={ item }\n            open={ item === newItem } />\n          {\n            onRemove && (\n              <button\n                type=\"button\"\n                title=\"Delete item\"\n                class=\"bio-properties-panel-remove-entry bio-properties-panel-remove-list-entry\"\n                onClick={ () => onRemove && onRemove(item) }\n              ><DeleteIcon /></button>\n            )\n          }\n        </li>);\n      })\n    }\n  </ol>;\n}\n\n/**\n * Place new items in the beginning of the list and sort the rest with provided function.\n *\n * @template Item\n * @param {Item[]} currentItems\n * @param {(a: Item, b: Item) => 0 | 1 | -1} [compareFn] function used to sort items\n * @param {boolean} [shouldReset=false] set to `true` to reset state of the hook\n * @returns {Item[]}\n */\nfunction useSortedItems(currentItems, compareFn, shouldReset = false) {\n  const itemsRef = useRef(currentItems.slice());\n\n  // (1) Reset and optionally sort.\n  if (shouldReset) {\n    itemsRef.current = currentItems.slice();\n\n    if (compareFn) {\n      itemsRef.current.sort(compareFn);\n    }\n  } else {\n    const items = itemsRef.current;\n\n    // (2) Add new item to the list.\n    for (const item of currentItems) {\n      if (!items.includes(item)) {\n\n        // Unshift or push depending on whether we have a compareFn\n        compareFn ? items.unshift(item) : items.push(item);\n      }\n    }\n\n    // (3) Filter out removed items.\n    itemsRef.current = items.filter(item => currentItems.includes(item));\n  }\n\n  return itemsRef.current;\n}\n\nfunction useNewItems(items = [], shouldReset) {\n  const previousItems = usePrevious(items.slice()) || [];\n\n  if (shouldReset) {\n    return [];\n  }\n\n  return previousItems ? items.filter(item => !previousItems.includes(item)) : [];\n}\n","import Description from './Description';\n\nimport {\n  useEffect,\n  useMemo,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\nimport { isFunction } from 'min-dash';\n\nimport {\n  useError,\n  usePrevious\n} from '../../hooks';\n\nfunction NumberField(props) {\n\n  const {\n    debounce,\n    disabled,\n    id,\n    label,\n    max,\n    min,\n    onInput,\n    step,\n    value = '',\n    onFocus,\n    onBlur\n  } = props;\n\n  const [ localValue, setLocalValue ] = useState(value);\n\n  const handleInputCallback = useMemo(() => {\n    return debounce(event => {\n\n      const {\n        validity,\n        value\n      } = event.target;\n\n      if (validity.valid) {\n        onInput(value ? parseFloat(value) : undefined);\n      }\n    });\n  }, [ onInput, debounce ]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n  return (\n    <div class=\"bio-properties-panel-numberfield\">\n      <label for={ prefixId(id) } class=\"bio-properties-panel-label\">{ label }</label>\n      <input\n        id={ prefixId(id) }\n        type=\"number\"\n        name={ id }\n        spellCheck=\"false\"\n        autoComplete=\"off\"\n        disabled={ disabled }\n        class=\"bio-properties-panel-input\"\n        max={ max }\n        min={ min }\n        onInput={ handleInput }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        step={ step }\n        value={ localValue } />\n    </div>\n  );\n}\n\n/**\n * @param {Object} props\n * @param {Boolean} props.debounce\n * @param {String} props.description\n * @param {Boolean} props.disabled\n * @param {Object} props.element\n * @param {Function} props.getValue\n * @param {String} props.id\n * @param {String} props.label\n * @param {String} props.max\n * @param {String} props.min\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {String} props.step\n * @param {Function} props.validate\n */\nexport default function NumberFieldEntry(props) {\n  const {\n    debounce,\n    description,\n    disabled,\n    element,\n    getValue,\n    id,\n    label,\n    max,\n    min,\n    setValue,\n    step,\n    onFocus,\n    onBlur,\n    validate\n  } = props;\n\n  const [ cachedInvalidValue, setCachedInvalidValue ] = useState(null);\n  const globalError = useError(id);\n  const [ localError, setLocalError ] = useState(null);\n\n  let value = getValue(element);\n\n  const previousValue = usePrevious(value);\n\n  useEffect(() => {\n    if (isFunction(validate)) {\n      const newValidationError = validate(value) || null;\n\n      setLocalError(newValidationError);\n    }\n  }, [ value ]);\n\n  const onInput = (newValue) => {\n    let newValidationError = null;\n\n    if (isFunction(validate)) {\n      newValidationError = validate(newValue) || null;\n    }\n\n    if (newValidationError) {\n      setCachedInvalidValue(newValue);\n    } else {\n      setValue(newValue);\n    }\n\n    setLocalError(newValidationError);\n  };\n\n  if (previousValue === value && localError) {\n    value = cachedInvalidValue;\n  }\n\n  const error = globalError || localError;\n\n  return (\n    <div class={ classnames(\n      'bio-properties-panel-entry',\n      error ? 'has-error' : '') } data-entry-id={ id }>\n      <NumberField\n        debounce={ debounce }\n        disabled={ disabled }\n        id={ id }\n        key={ element }\n        label={ label }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        onInput={ onInput }\n        max={ max }\n        min={ min }\n        step={ step }\n        value={ value } />\n      { error && <div class=\"bio-properties-panel-error\">{ error }</div> }\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.value;\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}\n","import classNames from 'classnames';\n\nimport {\n  useError,\n  useShowEntryEvent\n} from '../../hooks';\n\nimport {\n  useEffect,\n  useState\n} from 'preact/hooks';\n\nimport Description from './Description';\n\n/**\n * @typedef { { value: string, label: string, disabled: boolean } } Option\n */\n\n/**\n * Provides basic select input.\n *\n * @param {object} props\n * @param {string} props.id\n * @param {string[]} props.path\n * @param {string} props.label\n * @param {Function} props.onChange\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {Array<Option>} [props.options]\n * @param {string} props.value\n * @param {boolean} [props.disabled]\n */\nfunction Select(props) {\n  const {\n    id,\n    label,\n    onChange,\n    options = [],\n    value = '',\n    disabled,\n    onFocus,\n    onBlur\n  } = props;\n\n  const ref = useShowEntryEvent(id);\n\n  const [ localValue, setLocalValue ] = useState(value);\n\n  const handleChangeCallback = ({ target }) => {\n    onChange(target.value);\n  };\n\n  const handleChange = e => {\n    handleChangeCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n  return (\n    <div class=\"bio-properties-panel-select\">\n      <label for={ prefixId(id) } class=\"bio-properties-panel-label\">{ label }</label>\n      <select\n        ref={ ref }\n        id={ prefixId(id) }\n        name={ id }\n        class=\"bio-properties-panel-input\"\n        onInput={ handleChange }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        value={ localValue }\n        disabled={ disabled }\n      >\n        {\n          options.map((option, idx) => {\n            return (\n              <option\n                key={ idx }\n                value={ option.value }\n                disabled={ option.disabled }>\n                { option.label }\n              </option>\n            );\n          })\n        }\n      </select>\n    </div>\n  );\n}\n\n/**\n * @param {object} props\n * @param {object} props.element\n * @param {string} props.id\n * @param {string} [props.description]\n * @param {string} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {Function} props.getOptions\n * @param {boolean} [props.disabled]\n */\nexport default function SelectEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    label,\n    getValue,\n    setValue,\n    getOptions,\n    disabled,\n    onFocus,\n    onBlur\n  } = props;\n\n  const value = getValue(element);\n  const options = getOptions(element);\n\n  const error = useError(id);\n\n  return (\n    <div\n      class={ classNames(\n        'bio-properties-panel-entry',\n        error ? 'has-error' : '')\n      }\n      data-entry-id={ id }>\n      <Select\n        id={ id }\n        key={ element }\n        label={ label }\n        value={ value }\n        onChange={ setValue }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        options={ options }\n        disabled={ disabled } />\n      { error && <div class=\"bio-properties-panel-error\">{ error }</div> }\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.value;\n}\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}\n","import {\n  useMemo,\n  useEffect,\n  useState\n} from 'preact/hooks';\n\n/**\n * @param {Object} props\n * @param {Function} props.debounce\n * @param {Boolean} [props.disabled]\n * @param {Object} props.element\n * @param {Function} props.getValue\n * @param {String} props.id\n * @param {Function} [props.onBlur]\n * @param {Function} [props.onFocus]\n * @param {Function} props.setValue\n */\nexport default function Simple(props) {\n  const {\n    debounce,\n    disabled,\n    element,\n    getValue,\n    id,\n    onBlur,\n    onFocus,\n    setValue\n  } = props;\n\n  const value = getValue(element);\n\n  const [ localValue, setLocalValue ] = useState(value);\n\n  const handleInputCallback = useMemo(() => {\n    return debounce(({ target }) => setValue(target.value.length ? target.value : undefined));\n  }, [ setValue, debounce ]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n\n  return (\n    <div class=\"bio-properties-panel-simple\">\n      <input\n        id={ prefixId(id) }\n        key={ element }\n        type=\"text\"\n        name={ id }\n        spellCheck=\"false\"\n        autoComplete=\"off\"\n        disabled={ disabled }\n        class=\"bio-properties-panel-input\"\n        onInput={ handleInput }\n        aria-label={ localValue || '<empty>' }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        value={ localValue } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.value;\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}\n","import Description from './Description';\n\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\nimport {\n  useError,\n  useShowEntryEvent\n} from '../../hooks';\n\nfunction resizeToContents(element) {\n  element.style.height = 'auto';\n  element.style.height = Math.min(element.scrollHeight + 2, 150) + 'px';\n}\n\nfunction TextArea(props) {\n\n  const {\n    id,\n    label,\n    rows = 2,\n    debounce,\n    onInput,\n    value = '',\n    disabled,\n    monospace,\n    onFocus,\n    onBlur,\n    autoResize\n  } = props;\n\n  const [ localValue, setLocalValue ] = useState(value);\n\n  const ref = useShowEntryEvent(id);\n\n  const handleInputCallback = useMemo(() => {\n    return debounce(({ target }) => onInput(target.value.length ? target.value : undefined));\n  }, [ onInput, debounce ]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n\n    autoResize && resizeToContents(e.target);\n\n    setLocalValue(e.target.value);\n  };\n\n  useLayoutEffect(() => {\n    autoResize && resizeToContents(ref.current);\n  }, []);\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n  return (\n    <div class=\"bio-properties-panel-textarea\">\n      <label for={ prefixId(id) } class=\"bio-properties-panel-label\">\n        { label }\n      </label>\n      <textarea\n        ref={ ref }\n        id={ prefixId(id) }\n        name={ id }\n        spellCheck=\"false\"\n        class={ classnames(\n          'bio-properties-panel-input',\n          monospace ? 'bio-properties-panel-input-monospace' : '',\n          autoResize ? 'auto-resize' : '')\n        }\n        onInput={ handleInput }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        rows={ rows }\n        value={ localValue }\n        disabled={ disabled }\n        data-gramm=\"false\"\n      />\n    </div>\n  );\n}\n\n/**\n * @param {object} props\n * @param {object} props.element\n * @param {string} props.id\n * @param {string} props.description\n * @param {boolean} props.debounce\n * @param {string} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {number} props.rows\n * @param {boolean} props.monospace\n * @param {boolean} [props.disabled]\n */\nexport default function TextAreaEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    debounce,\n    label,\n    getValue,\n    setValue,\n    rows,\n    monospace,\n    disabled,\n    onFocus,\n    onBlur,\n    autoResize\n  } = props;\n\n  const value = getValue(element);\n\n  const error = useError(id);\n\n  return (\n    <div\n      class={ classnames(\n        'bio-properties-panel-entry',\n        error ? 'has-error' : '')\n      }\n      data-entry-id={ id }>\n      <TextArea\n        id={ id }\n        key={ element }\n        label={ label }\n        value={ value }\n        onInput={ setValue }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        rows={ rows }\n        debounce={ debounce }\n        monospace={ monospace }\n        disabled={ disabled }\n        autoResize={ autoResize } />\n      { error && <div class=\"bio-properties-panel-error\">{ error }</div> }\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.value;\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}\n","import Description from './Description';\n\nimport {\n  useEffect,\n  useMemo,\n  useState\n} from 'preact/hooks';\n\nimport classnames from 'classnames';\n\nimport { isFunction } from 'min-dash';\n\nimport {\n  useError,\n  usePrevious,\n  useShowEntryEvent\n} from '../../hooks';\n\nfunction Textfield(props) {\n\n  const {\n    debounce,\n    disabled = false,\n    id,\n    label,\n    onInput,\n    onFocus,\n    onBlur,\n    value = ''\n  } = props;\n\n  const [ localValue, setLocalValue ] = useState(value || '');\n\n  const ref = useShowEntryEvent(id);\n\n  const handleInputCallback = useMemo(() => {\n    return debounce(({ target }) => onInput(target.value.length ? target.value : undefined));\n  }, [ onInput, debounce ]);\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n  return (\n    <div class=\"bio-properties-panel-textfield\">\n      <label for={ prefixId(id) } class=\"bio-properties-panel-label\">\n        { label }\n      </label>\n      <input\n        ref={ ref }\n        id={ prefixId(id) }\n        type=\"text\"\n        name={ id }\n        spellCheck=\"false\"\n        autoComplete=\"off\"\n        disabled={ disabled }\n        class=\"bio-properties-panel-input\"\n        onInput={ handleInput }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        value={ localValue } />\n    </div>\n  );\n}\n\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {Boolean} props.debounce\n * @param {Boolean} props.disabled\n * @param {String} props.label\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n * @param {Function} props.validate\n */\nexport default function TextfieldEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    debounce,\n    disabled,\n    label,\n    getValue,\n    setValue,\n    validate,\n    onFocus,\n    onBlur\n  } = props;\n\n  const [ cachedInvalidValue, setCachedInvalidValue ] = useState(null);\n  const globalError = useError(id);\n  const [ localError, setLocalError ] = useState(null);\n\n  let value = getValue(element);\n\n  const previousValue = usePrevious(value);\n\n  useEffect(() => {\n    if (isFunction(validate)) {\n      const newValidationError = validate(value) || null;\n\n      setLocalError(newValidationError);\n    }\n  }, [ value ]);\n\n  const onInput = (newValue) => {\n    let newValidationError = null;\n\n    if (isFunction(validate)) {\n      newValidationError = validate(newValue) || null;\n    }\n\n    if (newValidationError) {\n      setCachedInvalidValue(newValue);\n    } else {\n      setValue(newValue);\n    }\n\n    setLocalError(newValidationError);\n  };\n\n  if (previousValue === value && localError) {\n    value = cachedInvalidValue;\n  }\n\n  const error = globalError || localError;\n\n  return (\n    <div\n      class={ classnames(\n        'bio-properties-panel-entry',\n        error ? 'has-error' : '')\n      }\n      data-entry-id={ id }>\n      <Textfield\n        debounce={ debounce }\n        disabled={ disabled }\n        id={ id }\n        key={ element }\n        label={ label }\n        onInput={ onInput }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        value={ value } />\n      { error && <div class=\"bio-properties-panel-error\">{ error }</div> }\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.value;\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}","import Description from './Description';\n\nimport {\n  useEffect,\n  useState\n} from 'preact/hooks';\n\nfunction ToggleSwitch(props) {\n  const {\n    id,\n    label,\n    onInput,\n    value,\n    switcherLabel,\n    onFocus,\n    onBlur\n  } = props;\n\n  const [ localValue, setLocalValue ] = useState(value);\n\n  const handleInputCallback = async () => {\n    onInput(!value);\n  };\n\n  const handleInput = e => {\n    handleInputCallback(e);\n    setLocalValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === localValue) {\n      return;\n    }\n\n    setLocalValue(value);\n  }, [ value ]);\n\n  return (\n    <div class=\"bio-properties-panel-toggle-switch\">\n      <label class=\"bio-properties-panel-label\"\n        for={ prefixId(id) }>\n        { label }\n      </label>\n      <div class=\"bio-properties-panel-field-wrapper\">\n        <label class=\"bio-properties-panel-toggle-switch__switcher\">\n          <input\n            id={ prefixId(id) }\n            class=\"bio-properties-panel-input\"\n            type=\"checkbox\"\n            onFocus={ onFocus }\n            onBlur={ onBlur }\n            name={ id }\n            onInput={ handleInput }\n            checked={ !!localValue } />\n          <span class=\"bio-properties-panel-toggle-switch__slider\" />\n        </label>\n        <p class=\"bio-properties-panel-toggle-switch__label\">{ switcherLabel }</p>\n      </div>\n    </div>\n  );\n}\n\n/**\n * @param {Object} props\n * @param {Object} props.element\n * @param {String} props.id\n * @param {String} props.description\n * @param {String} props.label\n * @param {String} props.switcherLabel\n * @param {Function} props.getValue\n * @param {Function} props.setValue\n * @param {Function} props.onFocus\n * @param {Function} props.onBlur\n */\nexport default function ToggleSwitchEntry(props) {\n  const {\n    element,\n    id,\n    description,\n    label,\n    switcherLabel,\n    getValue,\n    setValue,\n    onFocus,\n    onBlur\n  } = props;\n\n  const value = getValue(element);\n  return (\n    <div class=\"bio-properties-panel-entry bio-properties-panel-toggle-switch-entry\" data-entry-id={ id }>\n      <ToggleSwitch\n        id={ id }\n        label={ label }\n        value={ value }\n        onInput={ setValue }\n        onFocus={ onFocus }\n        onBlur={ onBlur }\n        switcherLabel={ switcherLabel } />\n      <Description forId={ id } element={ element } value={ description } />\n    </div>\n  );\n}\n\nexport function isEdited(node) {\n  return node && !!node.checked;\n}\n\n\n// helpers /////////////////\n\nfunction prefixId(id) {\n  return `bio-properties-panel-${ id }`;\n}\n","import {\n  debounce,\n  isNumber\n} from 'min-dash';\n\nconst DEFAULT_DEBOUNCE_TIME = 300;\n\nexport default function debounceInput(debounceDelay) {\n  return function _debounceInput(fn) {\n    if (debounceDelay !== false) {\n\n      var debounceTime =\n        isNumber(debounceDelay) ?\n          debounceDelay :\n          DEFAULT_DEBOUNCE_TIME;\n\n      return debounce(fn, debounceTime);\n    } else {\n      return fn;\n    }\n  };\n}\n\ndebounceInput.$inject = [ 'config.debounceInput' ];\n","import debounceInput from './debounceInput';\n\nexport default {\n  debounceInput: [ 'factory', debounceInput ]\n};\n"],"names":["Header","props","element","headerProvider","getElementIcon","getDocumentationRef","getElementLabel","getTypeLabel","label","type","documentationRef","ElementIcon","_jsxs","_jsx","DescriptionContext","createContext","description","getDescriptionForId","ErrorsContext","errors","EventContext","eventBus","LayoutContext","layout","setLayout","getLayoutForKey","setLayoutForKey","useDescriptionContext","id","useContext","useError","useEvent","event","callback","eventContext","didMount","useRef","current","on","useEffect","off","KEY_LENGTH","useKeyFactory","dependencies","map","useMemo","Map","getKey","el","key","get","Math","random","toString","slice","set","useLayoutState","path","defaultValue","layoutForKey","value","useState","setState","newValue","usePrevious","ref","useShowEntryEvent","onShow","PropertiesPanelContext","focus","onShowEntry","useCallback","isFunction","select","useStickyIntersectionObserver","scrollContainerSelector","setSticky","Observer","IntersectionObserver","observer","scrollContainer","domQuery","entries","forEach","entry","intersectionRatio","root","rootMargin","threshold","observe","unobserve","useStaticCallback","callbackRef","args","Group","shouldOpen","groupRef","open","setOpen","toggleOpen","edited","setEdited","sticky","hasOneEditedEntry","find","isEdited","entryNode","inputNode","propertiesPanelContext","classnames","component","Component","_createElement","DataMarker","Placeholder","text","icon","Icon","DEFAULT_LAYOUT","DEFAULT_DESCRIPTION","PropertiesPanel","placeholderProvider","groups","layoutConfig","layoutChanged","descriptionConfig","descriptionLoaded","createLayout","config","newLayout","assign","layoutContext","createDescriptionContext","descriptionContext","setErrors","onSetErrors","errorsContext","getEmpty","isArray","getMultiple","group","overrides","DropdownButton","class","className","children","menuItems","dropdownRef","menuRef","close","onDropdownToggle","contains","target","stopPropagation","onActionClick","action","useGlobalClick","item","index","MenuItem","onClick","separator","ignoredElements","listener","some","document","addEventListener","capture","removeEventListener","HeaderButton","classname","otherProps","CollapsibleEntry","remove","placeholderLabel","ListItem","autoFocusEntry","autoOpen","focusableInput","noop","ListGroup","add","items","shouldSort","ordering","setOrdering","newItemAdded","setNewItemAdded","prevItems","prevElement","elementChanged","shouldHandleEffects","createOrdering","sortItems","length","includes","push","newOrdering","filter","unshift","keep","o","getItem","hasItems","sortBy","i","toLowerCase","Description","forId","contextDescription","Checkbox","onChange","disabled","onFocus","onBlur","localValue","setLocalValue","handleChangeCallback","checked","handleChange","e","prefixId","CheckboxEntry","getValue","setValue","error","node","useBufferedFocus","editor","buffer","setBuffer","undefined","offset","Infinity","CodeEditor","forwardRef","onInput","onFeelToggle","onLint","tooltipContainer","variables","inputRef","setEditor","handleInput","onKeyDown","selection","getSelection","range","ranges","mainIndex","from","to","FeelEditor","container","innerHTML","setVariables","handleClick","classNames","name","FeelIndicator","active","FeelIcon","feel","feelRequiredLabel","feelOptionalLabel","pointerType","FeelTextfield","debounce","onError","OptionalComponent","OptionalFeelInput","_setLocalValue","editorRef","containerRef","feelActive","startsWith","feelOnlyValue","substring","_setFocus","setFocus","hasFocus","activeElement","position","selectionStart","handleInputCallback","handleFeelToggle","handleLocalInput","handleLint","lint","message","source","copyHandler","clipboardData","setData","getData","pasteHandler","data","setTimeout","input","setSelectionRange","OptionalFeelTextArea","FeelEntry","validate","show","example","cachedInvalidValue","setCachedInvalidValue","validationError","setValidationError","localError","setLocalError","previousValue","newValidationError","err","temporaryError","FeelTextArea","classList","List","onAdd","onRemove","compareFn","restProps","opening","shouldReset","sortedItems","useSortedItems","newItems","useNewItems","addItem","ItemsList","newItem","selector","currentItems","itemsRef","sort","previousItems","NumberField","max","min","step","validity","valid","parseFloat","NumberFieldEntry","globalError","Select","options","option","idx","SelectEntry","getOptions","Simple","resizeToContents","style","height","scrollHeight","TextArea","rows","monospace","autoResize","useLayoutEffect","TextAreaEntry","Textfield","TextfieldEntry","ToggleSwitch","switcherLabel","ToggleSwitchEntry","DEFAULT_DEBOUNCE_TIME","debounceInput","debounceDelay","_debounceInput","fn","debounceTime","isNumber","$inject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBe,SAASA,MAAM,CAACC,KAAK,EAAE;EAEpC,MAAM;IACJC,OAAO;IACPC;GACD,GAAGF,KAAK;EAET,MAAM;IACJG,cAAc;IACdC,mBAAmB;IACnBC,eAAe;IACfC;GACD,GAAGJ,cAAc;EAElB,MAAMK,KAAK,GAAGF,eAAe,CAACJ,OAAO,CAAC;EACtC,MAAMO,IAAI,GAAGF,YAAY,CAACL,OAAO,CAAC;EAClC,MAAMQ,gBAAgB,GAAGL,mBAAmB,IAAIA,mBAAmB,CAACH,OAAO,CAAC;EAE5E,MAAMS,WAAW,GAAGP,cAAc,CAACF,OAAO,CAAC;EAE3C,OAAQU;IAAK,KAAK,EAAC,6BAA6B;IAAA,WAC9CC;MAAK,KAAK,EAAC,kCAAkC;MAAA,UACzCF,WAAW,IAAIE,IAAC,WAAW;QAAC,KAAK,EAAC,IAAI;QAAC,MAAM,EAAC,IAAI;QAAC,OAAO,EAAC;;MACzD,EACND;MAAK,KAAK,EAAC,oCAAoC;MAAA,WAC7CC;QAAK,KAAK,EAAGJ,IAAM;QAAC,KAAK,EAAC,kCAAkC;QAAA,UAAGA;QAAY,EACzED,KAAK,GACLK;QAAK,KAAK,EAAGL,KAAO;QAAC,KAAK,EAAC,mCAAmC;QAAA,UAAGA;QAAa,GAC9E,IAAI;MAEF,EACNK;MAAK,KAAK,EAAC,qCAAqC;MAAA,UAC5CH,gBAAgB,GAChBG;QACE,GAAG,EAAC,UAAU;QACd,KAAK,EAAC,kCAAkC;QACxC,IAAI,EAAGH,gBAAkB;QACzB,KAAK,EAAC,oBAAoB;QAC1B,MAAM,EAAC,QAAQ;QAAA,UACfG,IAAC,gBAAgB;QACf,GACJ;MAEE;IACF;AACR;;MCzDMC,kBAAkB,GAAGC,aAAa,CAAC;EACvCC,WAAW,EAAE,EAAE;EACfC,mBAAmB,EAAE,MAAM;AAC7B,CAAC;;MCHKC,aAAa,GAAGH,aAAa,CAAC;EAClCI,MAAM,EAAE;AACV,CAAC;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAoBMC,YAAY,GAAGL,aAAa,CAAC;EAAEM,QAAQ,EAAE;AAAK,CAAC;;MC7B/CC,aAAa,GAAGP,aAAa,CAAC;EAClCQ,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,MAAM,EAAE;EACnBC,eAAe,EAAE,MAAM,EAAE;EACzBC,eAAe,EAAE,MAAM;AACzB,CAAC;;ACDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqB,CAACC,EAAE,EAAE1B,OAAO,EAAE;EACjD,MAAM;IACJe;GACD,GAAGY,UAAU,CAACf,kBAAkB,CAAC;EAElC,OAAOG,mBAAmB,CAACW,EAAE,EAAE1B,OAAO,CAAC;AACzC;;ACzBO,SAAS4B,QAAQ,CAACF,EAAE,EAAE;EAC3B,MAAM;IAAET;GAAQ,GAAGU,UAAU,CAACX,aAAa,CAAC;EAE5C,OAAOC,MAAM,CAAES,EAAE,CAAE;AACrB;;ACHA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAEZ,QAAQ,EAAE;EAClD,MAAMa,YAAY,GAAGL,UAAU,CAACT,YAAY,CAAC;EAE7C,IAAI,CAACC,QAAQ,EAAE;IACb,CAAC;MAAEA;KAAU,GAAGa,YAAY;;EAG9B,MAAMC,QAAQ,GAAGC,MAAM,CAAC,KAAK,CAAC;;;EAG9B,IAAIf,QAAQ,IAAI,CAACc,QAAQ,CAACE,OAAO,EAAE;IACjChB,QAAQ,CAACiB,EAAE,CAACN,KAAK,EAAEC,QAAQ,CAAC;;;;EAI9BM,SAAS,CAAC,MAAM;IACd,IAAIlB,QAAQ,IAAIc,QAAQ,CAACE,OAAO,EAAE;MAChChB,QAAQ,CAACiB,EAAE,CAACN,KAAK,EAAEC,QAAQ,CAAC;;IAG9BE,QAAQ,CAACE,OAAO,GAAG,IAAI;IAEvB,OAAO,MAAM;MACX,IAAIhB,QAAQ,EAAE;QACZA,QAAQ,CAACmB,GAAG,CAACR,KAAK,EAAEC,QAAQ,CAAC;;KAEhC;GACF,EAAE,CAAEA,QAAQ,EAAED,KAAK,EAAEX,QAAQ,CAAE,CAAC;AACnC;;ACrCA,MAAMoB,UAAU,GAAG,CAAC;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAa,CAACC,YAAY,GAAG,EAAE,EAAE;EAC/C,MAAMC,GAAG,GAAGC,OAAO,CAAC,MAAM,IAAIC,GAAG,EAAE,EAAEH,YAAY,CAAC;EAElD,MAAMI,MAAM,GAAGC,EAAE,IAAI;IACnB,IAAIC,GAAG,GAAGL,GAAG,CAACM,GAAG,CAACF,EAAE,CAAC;IAErB,IAAI,CAACC,GAAG,EAAE;MACRA,GAAG,GAAGE,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACC,KAAK,CAAC,CAACb,UAAU,CAAC;MACjDG,GAAG,CAACW,GAAG,CAACP,EAAE,EAAEC,GAAG,CAAC;;IAGlB,OAAOA,GAAG;GACX;EAED,OAAOF,MAAM;AACf;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,cAAc,CAACC,IAAI,EAAEC,YAAY,EAAE;EACjD,MAAM;IACJjC,eAAe;IACfC;GACD,GAAGG,UAAU,CAACP,aAAa,CAAC;EAE7B,MAAMqC,YAAY,GAAGlC,eAAe,CAACgC,IAAI,EAAEC,YAAY,CAAC;EACxD,MAAM,CAAEE,KAAK,EAAEL,GAAG,CAAE,GAAGM,QAAQ,CAACF,YAAY,CAAC;EAE7C,MAAMG,QAAQ,GAAIC,QAAQ,IAAK;;IAG7BR,GAAG,CAACQ,QAAQ,CAAC;;;IAGbrC,eAAe,CAAC+B,IAAI,EAAEM,QAAQ,CAAC;GAChC;EAED,OAAO,CAAEH,KAAK,EAAEE,QAAQ,CAAE;AAC5B;;ACtCA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASE,WAAW,CAACJ,KAAK,EAAE;EACjC,MAAMK,GAAG,GAAG7B,MAAM,EAAE;EACpBG,SAAS,CAAC,MAAM;IACd0B,GAAG,CAAC5B,OAAO,GAAGuB,KAAK;GACpB,CAAC;EACF,OAAOK,GAAG,CAAC5B,OAAO;AACpB;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6B,iBAAiB,CAACtC,EAAE,EAAE;EACpC,MAAM;IAAEuC;GAAQ,GAAGtC,UAAU,CAACuC,aAAsB,CAAC;EAErD,MAAMH,GAAG,GAAG7B,MAAM,EAAE;EAEpB,MAAMiC,KAAK,GAAGjC,MAAM,CAAC,KAAK,CAAC;EAE3B,MAAMkC,WAAW,GAAGC,WAAW,CAAEvC,KAAK,IAAK;IACzC,IAAIA,KAAK,CAACJ,EAAE,KAAKA,EAAE,EAAE;MACnBuC,MAAM,EAAE;MAER,IAAI,CAACE,KAAK,CAAChC,OAAO,EAAE;QAClBgC,KAAK,CAAChC,OAAO,GAAG,IAAI;;;GAGzB,EAAE,CAAET,EAAE,CAAE,CAAC;EAEVW,SAAS,CAAC,MAAM;IACd,IAAI8B,KAAK,CAAChC,OAAO,IAAI4B,GAAG,CAAC5B,OAAO,EAAE;MAChC,IAAImC,UAAU,CAACP,GAAG,CAAC5B,OAAO,CAACgC,KAAK,CAAC,EAAE;QACjCJ,GAAG,CAAC5B,OAAO,CAACgC,KAAK,EAAE;;MAGrB,IAAIG,UAAU,CAACP,GAAG,CAAC5B,OAAO,CAACoC,MAAM,CAAC,EAAE;QAClCR,GAAG,CAAC5B,OAAO,CAACoC,MAAM,EAAE;;MAGtBJ,KAAK,CAAChC,OAAO,GAAG,KAAK;;GAExB,CAAC;EAEFN,QAAQ,CAAC,2BAA2B,EAAEuC,WAAW,CAAC;EAElD,OAAOL,GAAG;AACZ;;AC7CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,6BAA6B,CAACT,GAAG,EAAEU,uBAAuB,EAAEC,SAAS,EAAE;EACrFrC,SAAS,CAAC,MAAM;IAEd,MAAMsC,QAAQ,GAAGC,oBAAoB;;;IAGrC,IAAI,CAACD,QAAQ,EAAE;MACb;;IAGF,IAAIE,QAAQ;IAEZ,IAAId,GAAG,CAAC5B,OAAO,EAAE;MACf,MAAM2C,eAAe,GAAGC,KAAQ,CAACN,uBAAuB,CAAC;MAEzDI,QAAQ,GAAG,IAAIF,QAAQ,CAAEK,OAAO,IAAK;QACnCA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;UACvB,IAAIA,KAAK,CAACC,iBAAiB,GAAG,CAAC,EAAE;YAC/BT,SAAS,CAAC,IAAI,CAAC;WAChB,MACI,IAAIQ,KAAK,CAACC,iBAAiB,KAAK,CAAC,EAAE;YACtCT,SAAS,CAAC,KAAK,CAAC;;SAEnB,CAAC;OACH,EACD;QACEU,IAAI,EAAEN,eAAe;QACrBO,UAAU,EAAE,qBAAqB;;QACjCC,SAAS,EAAE,CAAE,CAAC;OACf,CAAC;MACFT,QAAQ,CAACU,OAAO,CAACxB,GAAG,CAAC5B,OAAO,CAAC;;;;IAI/B,OAAO,MAAM;MACX,IAAI4B,GAAG,CAAC5B,OAAO,IAAI0C,QAAQ,EAAE;QAC3BA,QAAQ,CAACW,SAAS,CAACzB,GAAG,CAAC5B,OAAO,CAAC;;KAElC;GAEF,EAAE,CAAE4B,GAAG,EAAEU,uBAAuB,EAAEC,SAAS,CAAE,CAAC;AACjD;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASe,iBAAiB,CAAC1D,QAAQ,EAAE;EAC1C,MAAM2D,WAAW,GAAGxD,MAAM,CAACH,QAAQ,CAAC;EACpC2D,WAAW,CAACvD,OAAO,GAAGJ,QAAQ;EAE9B,OAAOsC,WAAW,CAChB,CAAC,GAAGsB,IAAI,KAAKD,WAAW,CAACvD,OAAO,CAAC,GAAGwD,IAAI,CAAC,EACzC,EAAE,CACH;AACH;;ACOe,SAASC,KAAK,CAAC7F,KAAK,EAAE;EACnC,MAAM;IACJC,OAAO;IACPgF,OAAO,GAAG,EAAE;IACZtD,EAAE;IACFpB,KAAK;IACLuF,UAAU,GAAG;GACd,GAAG9F,KAAK;EAET,MAAM+F,QAAQ,GAAG5D,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAM,CAAE6D,IAAI,EAAEC,OAAO,CAAE,GAAG1C,cAAc,CACtC,CAAE,QAAQ,EAAE5B,EAAE,EAAE,MAAM,CAAE,EACxBmE,UAAU,CACX;EAED,MAAM5B,MAAM,GAAGI,WAAW,CAAC,MAAM2B,OAAO,CAAC,IAAI,CAAC,EAAE,CAAEA,OAAO,CAAE,CAAC;EAE5D,MAAMC,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAI,CAAC;EAEvC,MAAM,CAAEG,MAAM,EAAEC,SAAS,CAAE,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAAEyC,MAAM,EAAE1B,SAAS,CAAE,GAAGf,QAAQ,CAAC,KAAK,CAAC;;;EAG7CtB,SAAS,CAAC,MAAM;IACd,MAAMgE,iBAAiB,GAAGrB,OAAO,CAACsB,IAAI,CAACpB,KAAK,IAAI;MAC9C,MAAM;QACJxD,EAAE;QACF6E;OACD,GAAGrB,KAAK;MAET,MAAMsB,SAAS,GAAGzB,KAAQ,CAAE,mBAAkBrD,EAAG,IAAG,CAAC;MAErD,IAAI,CAAC4C,UAAU,CAACiC,QAAQ,CAAC,IAAI,CAACC,SAAS,EAAE;QACvC,OAAO,KAAK;;MAGd,MAAMC,SAAS,GAAG1B,KAAQ,CAAC,6BAA6B,EAAEyB,SAAS,CAAC;MAEpE,OAAOD,QAAQ,CAACE,SAAS,CAAC;KAC3B,CAAC;IAEFN,SAAS,CAACE,iBAAiB,CAAC;GAC7B,EAAE,CAAErB,OAAO,CAAE,CAAC;;;EAGfR,6BAA6B,CAACsB,QAAQ,EAAE,2CAA2C,EAAEpB,SAAS,CAAC;EAE/F,MAAMgC,sBAAsB,GAAG;IAC7B,GAAG/E,UAAU,CAACuC,aAAsB,CAAC;IACrCD;GACD;EAED,OAAOvD;IAAK,KAAK,EAAC,4BAA4B;IAAC,iBAAgB,QAAQ,GAAGgB,EAAI;IAAC,GAAG,EAAGoE,QAAU;IAAA,WAC7FpF;MAAK,KAAK,EAAGiG,UAAU,CACrB,mCAAmC,EACnCT,MAAM,GAAG,EAAE,GAAG,OAAO,EACrBH,IAAI,GAAG,MAAM,GAAG,EAAE,EACjBK,MAAM,IAAIL,IAAI,GAAI,QAAQ,GAAG,EAAE,CAC/B;MAAC,OAAO,EAAGE,UAAY;MAAA,WACxBtF;QAAK,KAAK,EAAGL,KAAO;QAAC,KAAK,EAAC,yCAAyC;QAAA,UAChEA;QACE,EACNI;QAAK,KAAK,EAAC,2CAA2C;QAAA,WAElDwF,MAAM,IAAIvF,IAAC,UAAU,KAAG,EAE1BA;UACE,KAAK,EAAC,gBAAgB;UACtB,KAAK,EAAC,qEAAqE;UAAA,UAE3EA,IAAC,SAAS;YAAC,KAAK,EAAGoF,IAAI,GAAG,iCAAiC,GAAG;;UACvD;QACL;MACF,EACNpF;MAAK,KAAK,EAAGgG,UAAU,CACrB,oCAAoC,EACpCZ,IAAI,GAAG,MAAM,GAAG,EAAE,CACjB;MAAA,UACDpF,IAACuD,aAAsB,CAAC,QAAQ;QAAC,KAAK,EAAGwC,sBAAwB;QAAA,UAE7D1B,OAAO,CAACtC,GAAG,CAACwC,KAAK,IAAI;UACnB,MAAM;YACJ0B,SAAS,EAAEC,SAAS;YACpBnF;WACD,GAAGwD,KAAK;UAET,OACE4B,cAAC,SAAS;YAAA,GACH5B,KAAK;YACV,OAAO,EAAGlF,OAAS;YACnB,GAAG,EAAG0B;YAAO;SAElB;;MAGD;IACF;AACR;AAEA,SAASqF,UAAU,GAAG;EACpB,OACEpG;IAAK,KAAK,EAAC,uBAAuB;IAAC,KAAK,EAAC;IAAiC;AAE9E;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASqG,WAAW,CAACjH,KAAK,EAAE;EACzC,MAAM;IACJkH,IAAI;IACJC,IAAI,EAAEC;GACP,GAAGpH,KAAK;EAET,OACEY;IAAK,KAAK,EAAC,2BAA2B;IAAA,UACpCD;MAAS,KAAK,EAAC,kCAAkC;MAAA,WAC7CyG,IAAI,IAAIxG,IAAC,IAAI;QAAC,KAAK,EAAC;QAA0C,EAChEA;QAAG,KAAK,EAAC,uCAAuC;QAAA,UAAGsG;QAAU;;IAE3D;AAEV;;ACQA,MAAMG,cAAc,GAAG;EACrBrB,IAAI,EAAE;AACR,CAAC;AAED,MAAMsB,mBAAmB,GAAG,EAAE;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,eAAe,CAACvH,KAAK,EAAE;EAC7C,MAAM;IACJC,OAAO;IACPC,cAAc;IACdsH,mBAAmB;IACnBC,MAAM;IACNC,YAAY,GAAG,EAAE;IACjBC,aAAa;IACbC,iBAAiB,GAAG,EAAE;IACtBC,iBAAiB;IACjBzG;GACD,GAAGpB,KAAK;;;EAGT,MAAM,CAAEsB,MAAM,EAAEC,SAAS,CAAE,GAAGqC,QAAQ,CAACkE,YAAY,CAACJ,YAAY,CAAC,CAAC;EAElEpF,SAAS,CAAC,MAAM;IACd,IAAI,OAAOqF,aAAa,KAAK,UAAU,EAAE;MACvCA,aAAa,CAACrG,MAAM,CAAC;;GAExB,EAAE,CAAEA,MAAM,EAAEqG,aAAa,CAAE,CAAC;EAE7B,MAAMnG,eAAe,GAAG,CAACwB,GAAG,EAAES,YAAY,KAAK;IAC7C,OAAOR,GAAG,CAAC3B,MAAM,EAAE0B,GAAG,EAAES,YAAY,CAAC;GACtC;EAED,MAAMhC,eAAe,GAAG,CAACuB,GAAG,EAAE+E,MAAM,KAAK;IACvC,MAAMC,SAAS,GAAGC,MAAM,CAAC,EAAE,EAAE3G,MAAM,CAAC;IACpCgC,GAAG,CAAC0E,SAAS,EAAEhF,GAAG,EAAE+E,MAAM,CAAC;IAC3BxG,SAAS,CAACyG,SAAS,CAAC;GACrB;EAED,MAAME,aAAa,GAAG;IACpB5G,MAAM;IACNC,SAAS;IACTC,eAAe;IACfC;GACD;;;EAGD,MAAMV,WAAW,GAAGoH,wBAAwB,CAACP,iBAAiB,CAAC;EAE/D,IAAI,OAAOC,iBAAiB,KAAK,UAAU,EAAE;IAC3CA,iBAAiB,CAAC9G,WAAW,CAAC;;EAGhC,MAAMC,mBAAmB,GAAG,CAACW,EAAE,EAAE1B,OAAO,KAAK;IAC3C,OAAOc,WAAW,CAACY,EAAE,CAAC,IAAIZ,WAAW,CAACY,EAAE,CAAC,CAAC1B,OAAO,CAAC;GACnD;EAED,MAAMmI,kBAAkB,GAAG;IACzBrH,WAAW;IACXC;GACD;EAED,MAAM,CAAEE,MAAM,EAAEmH,SAAS,CAAE,GAAGzE,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM0E,WAAW,GAAG,CAAC;IAAEpH;GAAQ,KAAKmH,SAAS,CAACnH,MAAM,CAAC;EAErDY,QAAQ,CAAC,2BAA2B,EAAEwG,WAAW,EAAElH,QAAQ,CAAC;EAE5D,MAAMmH,aAAa,GAAG;IACpBrH;GACD;EAED,MAAMe,YAAY,GAAG;IACnBb;GACD;EAED,MAAMuF,sBAAsB,GAAG;IAC7B1G;GACD;;;EAGD,IAAIuH,mBAAmB,IAAI,CAACvH,OAAO,EAAE;IACnC,OAAOW,IAAC,WAAW;MAAA,GAAM4G,mBAAmB,CAACgB,QAAQ;MAAO;;;;EAI9D,IAAIhB,mBAAmB,IAAIiB,OAAO,CAACxI,OAAO,CAAC,EAAE;IAC3C,OAAOW,IAAC,WAAW;MAAA,GAAM4G,mBAAmB,CAACkB,WAAW;MAAO;;EAGjE,OACE9H,IAACuD,aAAsB,CAAC,QAAQ;IAAC,KAAK,EAAGwC,sBAAwB;IAAA,UAC/D/F,IAAC,aAAa,CAAC,QAAQ;MAAC,KAAK,EAAG2H,aAAe;MAAA,UAC7C3H,IAAC,kBAAkB,CAAC,QAAQ;QAAC,KAAK,EAAGwH,kBAAoB;QAAA,UACvDxH,IAAC,aAAa,CAAC,QAAQ;UAAC,KAAK,EAAGsH,aAAe;UAAA,UAC7CtH,IAAC,YAAY,CAAC,QAAQ;YAAC,KAAK,EAAGqB,YAAc;YAAA,UAC3CtB;cACE,KAAK,EAAGiG,UAAU,CAChB,sBAAsB,EACtBtF,MAAM,CAAC0E,IAAI,GAAG,MAAM,GAAG,EAAE,CAC1B;cAAA,WACDpF,IAAC,MAAM;gBACL,OAAO,EAAGX,OAAS;gBACnB,cAAc,EAAGC;gBAAmB,EACtCU;gBAAK,KAAK,EAAC,uCAAuC;gBAAA,UAE9C6G,MAAM,CAAC9E,GAAG,CAACgG,KAAK,IAAI;kBAClB,MAAM;oBACJ9B,SAAS,EAAEC,SAAS,GAAGjB,KAAK;oBAC5BlE;mBACD,GAAGgH,KAAK;kBAET,OACE5B,cAAC,SAAS;oBAAA,GACH4B,KAAK;oBACV,GAAG,EAAGhH,EAAI;oBACV,OAAO,EAAG1B;oBAAY;iBAE3B;gBAEC;;;;;;IAMgB;AAEtC;;AAGA;;AAEA,SAAS6H,YAAY,CAACc,SAAS,EAAE;EAC/B,OAAO;IACL,GAAGvB,cAAc;IACjB,GAAGuB;GACJ;AACH;AAEA,SAAST,wBAAwB,CAACS,SAAS,EAAE;EAC3C,OAAO;IACL,GAAGtB,mBAAmB;IACtB,GAAGsB;GACJ;AACH;;ACpOO,SAASC,cAAc,CAAC7I,KAAK,EAAE;EACpC,MAAM;IACJ8I,KAAK,EAAEC,SAAS;IAChBC,QAAQ;IACRC,SAAS,GAAG;GACb,GAAGjJ,KAAK;EAET,MAAMkJ,WAAW,GAAG/G,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMgH,OAAO,GAAGhH,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAM,CAAE6D,IAAI,EAAEC,OAAO,CAAE,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMwF,KAAK,GAAG,MAAMnD,OAAO,CAAC,KAAK,CAAC;EAElC,SAASoD,gBAAgB,CAACtH,KAAK,EAAE;IAC/B,IAAIoH,OAAO,CAAC/G,OAAO,IAAI+G,OAAO,CAAC/G,OAAO,CAACkH,QAAQ,CAACvH,KAAK,CAACwH,MAAM,CAAC,EAAE;MAC7D;;IAGFxH,KAAK,CAACyH,eAAe,EAAE;IAEvBvD,OAAO,CAACD,IAAI,IAAI,CAACA,IAAI,CAAC;;EAGxB,SAASyD,aAAa,CAAC1H,KAAK,EAAE2H,MAAM,EAAE;IACpC3H,KAAK,CAACyH,eAAe,EAAE;IAEvBJ,KAAK,EAAE;IACPM,MAAM,EAAE;;EAGVC,cAAc,CAAC,CAAET,WAAW,CAAC9G,OAAO,CAAE,EAAE,MAAMgH,KAAK,EAAE,CAAC;EAEtD,OACEzI;IACE,KAAK,EAAGiG,UAAU,CAAC,sCAAsC,EAAE;MAAEZ;KAAM,EAAE+C,SAAS,CAAG;IACjF,OAAO,EAAGM,gBAAkB;IAC5B,GAAG,EAAGH,WAAa;IAAA,WAEjBF,QAAQ,EACVpI;MAAK,KAAK,EAAC,4CAA4C;MAAC,GAAG,EAAGuI,OAAS;MAAA,UACnEF,SAAS,CAACtG,GAAG,CAAC,CAACiH,IAAI,EAAEC,KAAK,KAC1BjJ,IAAC,QAAQ;QAAC,OAAO,EAAG6I,aAAe;QAAC,IAAI,EAAGG;SAAaC,KAAK,CAC9D;MACG;IACF;AAEV;AAEA,SAASC,QAAQ,CAAC;EAAEF,IAAI;EAAEG;AAAQ,CAAC,EAAE;EACnC,IAAIH,IAAI,CAACI,SAAS,EAAE;IAClB,OAAOpJ;MAAK,KAAK,EAAC;MAA+G;;EAGnI,IAAIgJ,IAAI,CAACF,MAAM,EAAE;IACf,OAAQ9I;MACN,KAAK,EAAC,6GAA6G;MACnH,OAAO,EAAGmB,KAAK,IAAIgI,OAAO,CAAChI,KAAK,EAAE6H,IAAI,CAACF,MAAM,CAAG;MAAA,UAE/CE,IAAI,CAACzE;MACC;;EAGX,OAAOvE;IACL,KAAK,EAAC,iDAAiD;IAAA,UAEtDgJ,IAAI,CAACzE;IACF;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASwE,cAAc,CAACM,eAAe,EAAEjI,QAAQ,EAAE;EACjDM,SAAS,CAAC,MAAM;;AAGlB;AACA;IACI,SAAS4H,QAAQ,CAACnI,KAAK,EAAE;MACvB,IAAIkI,eAAe,CAACE,IAAI,CAAClK,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACqJ,QAAQ,CAACvH,KAAK,CAACwH,MAAM,CAAC,CAAC,EAAE;QAC9E;;MAGFvH,QAAQ,EAAE;;IAGZoI,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEH,QAAQ,EAAE;MAAEI,OAAO,EAAE;KAAM,CAAC;IAE/D,OAAO,MAAMF,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAEL,QAAQ,EAAE;MAAEI,OAAO,EAAE;KAAM,CAAC;GAChF,EAAE,CAAE,GAAGL,eAAe,EAAEjI,QAAQ,CAAE,CAAC;AACtC;;ACzGO,SAASwI,YAAY,CAACxK,KAAK,EAAE;EAClC,MAAM;IACJgJ,QAAQ,GAAG,IAAI;IACfF,KAAK,EAAE2B,SAAS;IAChBV,OAAO,GAAG,MAAM,EAAE;IAClB,GAAGW;GACJ,GAAG1K,KAAK;EAET,OAAOY;IAAA,GACA8J,UAAU;IACf,OAAO,EAAGX,OAAS;IACnB,KAAK,EAAGnD,UAAU,CAAC,0CAA0C,EAAE6D,SAAS,CAAG;IAAA,UACzEzB;IACK;AACX;;ACEe,SAAS2B,gBAAgB,CAAC3K,KAAK,EAAE;EAC9C,MAAM;IACJC,OAAO;IACPgF,OAAO,GAAG,EAAE;IACZtD,EAAE;IACFpB,KAAK;IACLyF,IAAI,EAAEF,UAAU;IAChB8E;GACD,GAAG5K,KAAK;EAET,MAAM,CAAEgG,IAAI,EAAEC,OAAO,CAAE,GAAGrC,QAAQ,CAACkC,UAAU,CAAC;EAE9C,MAAMI,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAI,CAAC;EAEvC,MAAM;IAAE9B;GAAQ,GAAGtC,UAAU,CAACuC,aAAsB,CAAC;EAErD,MAAMwC,sBAAsB,GAAG;IAC7B,GAAG/E,UAAU,CAACuC,aAAsB,CAAC;IACrCD,MAAM,EAAEI,WAAW,CAAC,MAAM;MACxB2B,OAAO,CAAC,IAAI,CAAC;MAEb,IAAI1B,UAAU,CAACL,MAAM,CAAC,EAAE;QACtBA,MAAM,EAAE;;KAEX,EAAE,CAAEA,MAAM,EAAE+B,OAAO,CAAE;GACvB;;;EAGD,MAAM4E,gBAAgB,GAAG,SAAS;EAElC,OACElK;IACE,iBAAgBgB,EAAI;IACpB,KAAK,EAAGiF,UAAU,CAChB,wCAAwC,EACxCZ,IAAI,GAAG,MAAM,GAAG,EAAE,CACjB;IAAA,WACHrF;MAAK,KAAK,EAAC,+CAA+C;MAAC,OAAO,EAAGuF,UAAY;MAAA,WAC/EtF;QACE,KAAK,EAAGL,KAAK,IAAIsK,gBAAkB;QACnC,KAAK,EAAGjE,UAAU,CAChB,qDAAqD,EACrD,CAACrG,KAAK,IAAI,OAAO,CAChB;QAAA,UACDA,KAAK,IAAIsK;QACP,EACNjK;QACE,KAAK,EAAC,kBAAkB;QACxB,KAAK,EAAC,0EAA0E;QAAA,UAEhFA,IAAC,SAAS;UAAC,KAAK,EAAGoF,IAAI,GAAG,iCAAiC,GAAG;;QACvD,EAEP4E,MAAM,GAGFhK;QAAQ,KAAK,EAAC,aAAa;QAAC,KAAK,EAAC,mCAAmC;QAAC,OAAO,EAAGgK,MAAQ;QAAA,UACtFhK,IAAC,UAAU;QACJ,GAET,IAAI;MAEN,EACNA;MAAK,KAAK,EAAGgG,UAAU,CACrB,gDAAgD,EAChDZ,IAAI,GAAG,MAAM,GAAG,EAAE,CACjB;MAAA,UACDpF,IAACuD,aAAsB,CAAC,QAAQ;QAAC,KAAK,EAAGwC,sBAAwB;QAAA,UAE7D1B,OAAO,CAACtC,GAAG,CAACwC,KAAK,IAAI;UACnB,MAAM;YACJ0B,SAAS,EAAEC,SAAS;YACpBnF;WACD,GAAGwD,KAAK;UAET,OACE4B,cAAC,SAAS;YAAA,GACH5B,KAAK;YACV,OAAO,EAAGlF,OAAS;YACnB,GAAG,EAAG0B;YAAO;SAElB;;MAGD;IACF;AAEV;;AC1Fe,SAASmJ,QAAQ,CAAC9K,KAAK,EAAE;EACtC,MAAM;IACJ+K,cAAc;IACdC;GACD,GAAGhL,KAAK;;;EAGTsC,SAAS,CAAC,MAAM;IACd,IAAI0I,QAAQ,IAAID,cAAc,EAAE;MAC9B,MAAM5F,KAAK,GAAGH,KAAQ,CAAE,mBAAkB+F,cAAe,IAAG,CAAC;MAE7D,MAAME,cAAc,GAAGjG,KAAQ,CAAC,6BAA6B,EAAEG,KAAK,CAAC;MAErE,IAAI8F,cAAc,EAAE;QAElB,IAAI1G,UAAU,CAAC0G,cAAc,CAACzG,MAAM,CAAC,EAAE;UACrCyG,cAAc,CAACzG,MAAM,EAAE;SACxB,MAAM,IAAID,UAAU,CAAC0G,cAAc,CAAC7G,KAAK,CAAC,EAAE;UAC3C6G,cAAc,CAAC7G,KAAK,EAAE;;;;GAK7B,EAAE,CAAE4G,QAAQ,EAAED,cAAc,CAAE,CAAC;EAGhC,OACEnK;IAAK,KAAK,EAAC,gCAAgC;IAAA,UACzCA,IAAC,gBAAgB;MAAA,GACVZ,KAAK;MACV,IAAI,EAAGgL;;IACL;AAGV;;AClBA,MAAME,MAAI,GAAG,MAAM,EAAE;;AAErB;AACA;AACA;AACe,SAASC,SAAS,CAACnL,KAAK,EAAE;EACvC,MAAM;IACJoL,GAAG;IACHnL,OAAO;IACP0B,EAAE;IACF0J,KAAK;IACL9K,KAAK;IACLuF,UAAU,GAAG,IAAI;IACjBwF,UAAU,GAAG;GACd,GAAGtL,KAAK;EAGT,MAAM+F,QAAQ,GAAG5D,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAM,CAAE6D,IAAI,EAAEC,OAAO,CAAE,GAAG1C,cAAc,CACtC,CAAE,QAAQ,EAAE5B,EAAE,EAAE,MAAM,CAAE,EACxB,KAAK,CACN;EAED,MAAM,CAAE0E,MAAM,EAAE1B,SAAS,CAAE,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMM,MAAM,GAAGI,WAAW,CAAC,MAAM2B,OAAO,CAAC,IAAI,CAAC,EAAE,CAAEA,OAAO,CAAE,CAAC;EAE5D,MAAM,CAAEsF,QAAQ,EAAEC,WAAW,CAAE,GAAG5H,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAE6H,YAAY,EAAEC,eAAe,CAAE,GAAG9H,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM+H,SAAS,GAAG5H,WAAW,CAACsH,KAAK,CAAC;EACpC,MAAMO,WAAW,GAAG7H,WAAW,CAAC9D,OAAO,CAAC;EAExC,MAAM4L,cAAc,GAAG5L,OAAO,KAAK2L,WAAW;EAC9C,MAAME,mBAAmB,GAAG,CAACD,cAAc,KAAKP,UAAU,IAAIxF,UAAU,CAAC;;;EAGzE,IAAI+F,cAAc,EAAE;IAClBL,WAAW,CAACO,cAAc,CAACT,UAAU,GAAGU,SAAS,CAACX,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC;;;;;;EAMpE/I,SAAS,CAAC,MAAM;IACd,IAAI,CAACqJ,SAAS,IAAI,CAACL,UAAU,EAAE;MAC7BE,WAAW,CAACO,cAAc,CAACV,KAAK,CAAC,CAAC;;GAErC,EAAE,CAAEA,KAAK,EAAEpL,OAAO,CAAE,CAAC;;;EAGtBqC,SAAS,CAAC,MAAM;IACd,IAAIwJ,mBAAmB,IAAIH,SAAS,IAAIN,KAAK,CAACY,MAAM,GAAGN,SAAS,CAACM,MAAM,EAAE;MAEvE,IAAIb,GAAG,GAAG,EAAE;MAEZC,KAAK,CAACnG,OAAO,CAAC0E,IAAI,IAAI;QACpB,IAAI,CAAC2B,QAAQ,CAACW,QAAQ,CAACtC,IAAI,CAACjI,EAAE,CAAC,EAAE;UAC/ByJ,GAAG,CAACe,IAAI,CAACvC,IAAI,CAACjI,EAAE,CAAC;;OAEpB,CAAC;MAEF,IAAIyK,WAAW,GAAGb,QAAQ;;;MAG1B,IAAI,CAACvF,IAAI,IAAIF,UAAU,EAAE;QACvBI,UAAU,EAAE;;;QAGZ,IAAIoF,UAAU,EAAE;UACdc,WAAW,GAAGL,cAAc,CAACC,SAAS,CAACX,KAAK,CAAC,CAAC;;;;;MAKlDe,WAAW,GAAGA,WAAW,CAACC,MAAM,CAACzC,IAAI,IAAI,CAACwB,GAAG,CAACc,QAAQ,CAACtC,IAAI,CAAC,CAAC;MAC7D,IAAI0B,UAAU,EAAE;QACdc,WAAW,CAACE,OAAO,CAAC,GAAGlB,GAAG,CAAC;OAC5B,MAAM;QACLgB,WAAW,CAACD,IAAI,CAAC,GAAGf,GAAG,CAAC;;MAG1BI,WAAW,CAACY,WAAW,CAAC;MACxBV,eAAe,CAAC,IAAI,CAAC;KACtB,MAAM;MACLA,eAAe,CAAC,KAAK,CAAC;;GAEzB,EAAE,CAAEL,KAAK,EAAErF,IAAI,EAAE8F,mBAAmB,CAAE,CAAC;;;EAGxCxJ,SAAS,CAAC,MAAM;IAEd,IAAIgJ,UAAU,IAAItF,IAAI,IAAI,CAACyF,YAAY,EAAE;MACvCD,WAAW,CAACO,cAAc,CAACC,SAAS,CAACX,KAAK,CAAC,CAAC,CAAC;;GAEhD,EAAE,CAAErF,IAAI,EAAEsF,UAAU,CAAE,CAAC;;;EAGxBhJ,SAAS,CAAC,MAAM;IACd,IAAIwJ,mBAAmB,IAAIH,SAAS,IAAIN,KAAK,CAACY,MAAM,GAAGN,SAAS,CAACM,MAAM,EAAE;MACvE,IAAIM,IAAI,GAAG,EAAE;MAEbhB,QAAQ,CAACrG,OAAO,CAACsH,CAAC,IAAI;QACpB,IAAIC,OAAO,CAACpB,KAAK,EAAEmB,CAAC,CAAC,EAAE;UACrBD,IAAI,CAACJ,IAAI,CAACK,CAAC,CAAC;;OAEf,CAAC;MAEFhB,WAAW,CAACe,IAAI,CAAC;;GAEpB,EAAE,CAAElB,KAAK,EAAES,mBAAmB,CAAE,CAAC;;;EAGlCrH,6BAA6B,CAACsB,QAAQ,EAAE,2CAA2C,EAAEpB,SAAS,CAAC;EAE/F,MAAMuB,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAI,CAAC;EAEvC,MAAM0G,QAAQ,GAAG,CAAC,CAACrB,KAAK,CAACY,MAAM;EAE/B,MAAMtF,sBAAsB,GAAG;IAC7B,GAAG/E,UAAU,CAACuC,aAAsB,CAAC;IACrCD;GACD;EAED,OAAOvD;IAAK,KAAK,EAAC,4BAA4B;IAAC,iBAAgB,QAAQ,GAAGgB,EAAI;IAAC,GAAG,EAAGoE,QAAU;IAAA,WAC7FpF;MACE,KAAK,EAAGiG,UAAU,CAChB,mCAAmC,EACnC8F,QAAQ,GAAG,EAAE,GAAG,OAAO,EACtBA,QAAQ,IAAI1G,IAAI,GAAI,MAAM,GAAG,EAAE,EAC/BK,MAAM,IAAIL,IAAI,GAAI,QAAQ,GAAG,EAAE,CAC/B;MACH,OAAO,EAAG0G,QAAQ,GAAGxG,UAAU,GAAGgF,MAAM;MAAA,WACxCtK;QACE,KAAK,EAAGL,KAAO;QACf,KAAK,EAAC,yCAAyC;QAAA,UAE7CA;QACE,EACNI;QAAK,KAAK,EAAC,2CAA2C;QAAA,WAElDyK,GAAG,GAECzK;UACE,KAAK,EAAC,sBAAsB;UAC5B,KAAK,EAAC,yEAAyE;UAC/E,OAAO,EAAGyK,GAAK;UAAA,WAEfxK,IAAC,UAAU,KAAG,EAEZ,CAAC8L,QAAQ,GACP9L;YAAM,KAAK,EAAC,sCAAsC;YAAA;YAAc,GAE9D,IAAI;UAEH,GAET,IAAI,EAGR8L,QAAQ,GAEJ9L;UACE,KAAK,EAAI,iBAAgByK,KAAK,CAACY,MAAO,QAAOZ,KAAK,CAACY,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,EAAG,EAAG;UAC7E,KAAK,EAAC,iCAAiC;UAAA,UAErCZ,KAAK,CAACY;UACJ,GAEN,IAAI,EAGRS,QAAQ,GAEJ9L;UACE,KAAK,EAAC,gBAAgB;UACtB,KAAK,EAAC,qEAAqE;UAAA,UAE3EA,IAAC,SAAS;YAAC,KAAK,EAAGoF,IAAI,GAAG,iCAAiC,GAAG;;UACvD,GAET,IAAI;QAEN;MACF,EACNpF;MAAK,KAAK,EAAGgG,UAAU,CACrB,2BAA2B,EAC3BZ,IAAI,IAAI0G,QAAQ,GAAG,MAAM,GAAG,EAAE,CAC7B;MAAA,UACD9L,IAACuD,aAAsB,CAAC,QAAQ;QAAC,KAAK,EAAGwC,sBAAwB;QAAA,UAG7D4E,QAAQ,CAAC5I,GAAG,CAAC,CAAC6J,CAAC,EAAE3C,KAAK,KAAK;UACzB,MAAMD,IAAI,GAAG6C,OAAO,CAACpB,KAAK,EAAEmB,CAAC,CAAC;UAE9B,IAAI,CAAC5C,IAAI,EAAE;YACT;;UAGF,MAAM;YAAEjI;WAAI,GAAGiI,IAAI;;;UAGnB,MAAMoB,QAAQ,GAAGS,YAAY,KAAKH,UAAU,GAAGzB,KAAK,KAAK,CAAC,GAAGA,KAAK,KAAK0B,QAAQ,CAACU,MAAM,GAAG,CAAC,CAAC;UAE3F,OACElF,cAAC,QAAQ;YAAA,GACF6C,IAAI;YACT,QAAQ,EAAGoB,QAAU;YACrB,OAAO,EAAG/K,OAAS;YACnB,KAAK,EAAG4J,KAAO;YACf,GAAG,EAAGlI;YAAO;SAElB;;MAGD;IACF;AACR;;AAGA;;AAEA;AACA;AACA;AACA,SAASqK,SAAS,CAACX,KAAK,EAAE;EACxB,OAAOsB,MAAM,CAACtB,KAAK,EAAEuB,CAAC,IAAIA,CAAC,CAACrM,KAAK,CAACsM,WAAW,EAAE,CAAC;AAClD;AAEA,SAASJ,OAAO,CAACpB,KAAK,EAAE1J,EAAE,EAAE;EAC1B,OAAO4E,IAAI,CAAC8E,KAAK,EAAEuB,CAAC,IAAIA,CAAC,CAACjL,EAAE,KAAKA,EAAE,CAAC;AACtC;AAEA,SAASoK,cAAc,CAACV,KAAK,EAAE;EAC7B,OAAOA,KAAK,CAAC1I,GAAG,CAACiK,CAAC,IAAIA,CAAC,CAACjL,EAAE,CAAC;AAC7B;;ACjQe,SAASmL,WAAW,CAAC9M,KAAK,EAAE;EACzC,MAAM;IACJC,OAAO;IACP8M,KAAK;IACLpJ;GACD,GAAG3D,KAAK;EAET,MAAMgN,kBAAkB,GAAGtL,qBAAqB,CAACqL,KAAK,EAAE9M,OAAO,CAAC;EAEhE,MAAMc,WAAW,GAAG4C,KAAK,IAAIqJ,kBAAkB;EAE/C,IAAIjM,WAAW,EAAE;IACf,OACEH;MAAK,KAAK,EAAC,kCAAkC;MAAA,UACzCG;MACE;;AAGZ;;AChBA,SAASkM,QAAQ,CAACjN,KAAK,EAAE;EACvB,MAAM;IACJ2B,EAAE;IACFpB,KAAK;IACL2M,QAAQ;IACRC,QAAQ;IACRxJ,KAAK,GAAG,KAAK;IACbyJ,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM,CAAEsN,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,CAAC;EAErD,MAAM6J,oBAAoB,GAAG,CAAC;IAAEjE;GAAQ,KAAK;IAC3C2D,QAAQ,CAAC3D,MAAM,CAACkE,OAAO,CAAC;GACzB;EAED,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxBH,oBAAoB,CAACG,CAAC,CAAC;IACvBJ,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEb,MAAMK,GAAG,GAAGC,iBAAiB,CAACtC,EAAE,CAAC;EAEjC,OACEhB;IAAK,KAAK,EAAC,+BAA+B;IAAA,WACxCC;MACE,GAAG,EAAGoD,GAAK;MACX,EAAE,EAAG4J,UAAQ,CAACjM,EAAE,CAAG;MACnB,IAAI,EAAGA,EAAI;MACX,OAAO,EAAGyL,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,IAAI,EAAC,UAAU;MACf,KAAK,EAAC,4BAA4B;MAClC,QAAQ,EAAGK,YAAc;MACzB,OAAO,EAAGJ,UAAY;MACtB,QAAQ,EAAGH;MAAa,EAC1BvM;MAAO,GAAG,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MAAC,KAAK,EAAC,4BAA4B;MAAA,UAAGpB;MAAe;IAC5E;AAEV;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASsN,aAAa,CAAC7N,KAAK,EAAE;EAC3C,MAAM;IACJC,OAAO;IACP0B,EAAE;IACFZ,WAAW;IACXR,KAAK;IACLuN,QAAQ;IACRC,QAAQ;IACRZ,QAAQ;IACRC,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM2D,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAE/B,MAAM+N,KAAK,GAAGnM,QAAQ,CAACF,EAAE,CAAC;EAE1B,OACEhB;IAAK,KAAK,EAAC,gEAAgE;IAAC,iBAAgBgB,EAAI;IAAA,WAC9Ff,IAAC,QAAQ;MACP,QAAQ,EAAGuM,QAAU;MACrB,EAAE,EAAGxL,EAAI;MAET,KAAK,EAAGpB,KAAO;MACf,QAAQ,EAAGwN,QAAU;MACrB,OAAO,EAAGX,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,KAAK,EAAG1J;OALF1D,OAAO,CAKK,EAClB+N,KAAK,IAAIpN;MAAK,KAAK,EAAC,4BAA4B;MAAA,UAAGoN;MAAa,EAClEpN,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;AAEO,SAASyF,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACR,OAAO;AAC/B;;AAGA;;AAEA,SAASG,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;AC3GA,MAAMuM,gBAAgB,GAAG,UAASC,MAAM,EAAEnK,GAAG,EAAE;EAE7C,MAAM,CAAEoK,MAAM,EAAEC,SAAS,CAAE,GAAGzK,QAAQ,CAAC0K,SAAS,CAAC;EAEjDtK,GAAG,CAAC5B,OAAO,GAAGQ,OAAO,CAAC,OAAO;IAC3BwB,KAAK,EAAGmK,MAAM,IAAK;MACjB,IAAIJ,MAAM,EAAE;QACVA,MAAM,CAAC/J,KAAK,CAACmK,MAAM,CAAC;OACrB,MAAM;QACL,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;UACjCA,MAAM,GAAGC,QAAQ;;QAEnBH,SAAS,CAACE,MAAM,CAAC;;;GAGtB,CAAC,EAAE,CAAEJ,MAAM,CAAE,CAAC;EAEf7L,SAAS,CAAC,MAAM;IACd,IAAI,OAAO8L,MAAM,KAAK,WAAW,IAAID,MAAM,EAAE;MAC3CA,MAAM,CAAC/J,KAAK,CAACgK,MAAM,CAAC;MACpBC,SAAS,CAAC,KAAK,CAAC;;GAEnB,EAAE,CAAEF,MAAM,EAAEC,MAAM,CAAE,CAAC;AACxB,CAAC;AAED,MAAMK,UAAU,GAAGC,UAAU,CAAC,CAAC1O,KAAK,EAAEgE,GAAG,KAAK;EAE5C,MAAM;IACJL,KAAK;IACLgL,OAAO;IACPC,YAAY;IACZC,MAAM,GAAG,MAAM,EAAE;IACjB1B,QAAQ;IACR2B,gBAAgB;IAChBC;GACD,GAAG/O,KAAK;EAET,MAAMgP,QAAQ,GAAG7M,MAAM,EAAE;EACzB,MAAM,CAAEgM,MAAM,EAAEc,SAAS,CAAE,GAAGrL,QAAQ,EAAE;EACxC,MAAM,CAAE0J,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,IAAI,EAAE,CAAC;EAE3DuK,gBAAgB,CAACC,MAAM,EAAEnK,GAAG,CAAC;EAE7B,MAAMkL,WAAW,GAAGxJ,iBAAiB,CAAC5B,QAAQ,IAAI;IAChD6K,OAAO,CAAC7K,QAAQ,CAAC;IACjByJ,aAAa,CAACzJ,QAAQ,CAAC;GACxB,CAAC;EAEFxB,SAAS,CAAC,MAAM;IAEd,IAAI6L,MAAM;;;AAGd;AACA;AACA;AACA;IACI,MAAMgB,SAAS,GAAGxB,CAAC,IAAI;MACrB,IAAIA,CAAC,CAAC3K,GAAG,KAAK,WAAW,IAAI,CAACmL,MAAM,EAAE;QACpC;;MAGF,MAAMiB,SAAS,GAAGjB,MAAM,CAACkB,YAAY,EAAE;MACvC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAM,CAACH,SAAS,CAACI,SAAS,CAAC;MAEnD,IAAIF,KAAK,CAACG,IAAI,KAAK,CAAC,IAAIH,KAAK,CAACI,EAAE,KAAK,CAAC,EAAE;QACtCd,YAAY,EAAE;;KAEjB;IAEDT,MAAM,GAAG,IAAIwB,UAAU,CAAC;MACtBC,SAAS,EAAEZ,QAAQ,CAAC5M,OAAO;MAC3B8K,QAAQ,EAAEgC,WAAW;MACrBC,SAAS,EAAEA,SAAS;MACpBN,MAAM,EAAEA,MAAM;MACdC,gBAAgB,EAAEA,gBAAgB;MAClCnL,KAAK,EAAE2J,UAAU;MACjByB,SAAS,EAAEA;KACZ,CAAC;IAEFE,SAAS,CACPd,MAAM,CACP;IAED,OAAO,MAAM;MACXU,MAAM,CAAC,EAAE,CAAC;MACVG,QAAQ,CAAC5M,OAAO,CAACyN,SAAS,GAAG,EAAE;MAC/BZ,SAAS,CAAC,IAAI,CAAC;KAChB;GACF,EAAE,EAAE,CAAC;EAEN3M,SAAS,CAAC,MAAM;IACd,IAAI,CAAC6L,MAAM,EAAE;MACX;;IAGF,IAAIxK,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFa,MAAM,CAACJ,QAAQ,CAACpK,KAAK,CAAC;IACtB4J,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEbrB,SAAS,CAAC,MAAM;IACd,IAAI,CAAC6L,MAAM,EAAE;MACX;;IAGFA,MAAM,CAAC2B,YAAY,CAACf,SAAS,CAAC;GAC/B,EAAE,CAAEA,SAAS,CAAE,CAAC;EAEjB,MAAMgB,WAAW,GAAG,MAAM;IACxB/L,GAAG,CAAC5B,OAAO,CAACgC,KAAK,EAAE;GACpB;EAED,OAAOxD;IAAK,KAAK,EAAGoP,UAAU,CAAC,4CAA4C,EAAE7C,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAG;IAAA,UAC1GvM;MACE,IAAI,EAAGZ,KAAK,CAACiQ,IAAM;MACnB,KAAK,EAAGD,UAAU,CAAC,4BAA4B,EAAE1C,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAG;MAChF,GAAG,EAAG0B,QAAU;MAChB,OAAO,EAAGe;;IAER;AACR,CAAC,CAAC;;ACvIK,SAASG,aAAa,CAAClQ,KAAK,EAAE;EACnC,MAAM;IACJmQ;GACD,GAAGnQ,KAAK;EAET,IAAI,CAACmQ,MAAM,EAAE;IACX,OAAO,IAAI;;EAGb,OAAOvP;IAAM,KAAK,EAAC,qCAAqC;IAAA;IAEjD;AACT;;ACTA,MAAMsK,MAAI,GAAG,MAAM,EAAE;;AAErB;AACA;AACA;AACA;AACA;AACe,SAASkF,QAAQ,CAACpQ,KAAK,EAAE;EAEtC,MAAM;IACJO,KAAK;IACL8P,IAAI,GAAG,KAAK;IACZF,MAAM;IACNhD,QAAQ,GAAG,KAAK;IAChBpD,OAAO,GAAGmB;GACX,GAAGlL,KAAK;EAET,MAAMsQ,iBAAiB,GAAG,4BAA4B;EACtD,MAAMC,iBAAiB,GAAG,sCAAsC;EAEhE,MAAMR,WAAW,GAAGpC,CAAC,IAAI;IACvB5D,OAAO,CAAC4D,CAAC,CAAC;;;IAGV,IAAI,CAACA,CAAC,CAAC6C,WAAW,EAAE;MAClB7C,CAAC,CAACnE,eAAe,EAAE;;GAEtB;EAED,OACE5I;IACE,KAAK,EAAGoP,UAAU,CAAC,gCAAgC,EACjDG,MAAM,GAAG,QAAQ,GAAG,IAAI,EACxBE,IAAI,KAAK,UAAU,GAAG,UAAU,GAAG,UAAU,CAAG;IAClD,OAAO,EAAGN,WAAa;IACvB,QAAQ,EAAGM,IAAI,KAAK,UAAU,IAAIlD,QAAU;IAC5C,KAAK,EACH5M,KAAK,IACH8P,IAAI,KAAK,UAAU,GAAGC,iBAAiB,GAAGC,iBAAiB,CAE9D;IAAA,UAEAF,IAAI,KAAK,UAAU,GAAGzP,IAAC,gBAAgB,KAAG,GAAGA,IAAC,gBAAgB;IACxD;AAEb;;ACrBA,MAAMsK,IAAI,GAAG,MAAM,EAAG;AAEtB,SAASuF,aAAa,CAACzQ,KAAK,EAAE;EAC5B,MAAM;IACJ0Q,QAAQ;IACR/O,EAAE;IACFpB,KAAK;IACLoO,OAAO;IACPgC,OAAO;IACPN,IAAI;IACJ1M,KAAK,GAAG,EAAE;IACVwJ,QAAQ,GAAG,KAAK;IAChB4B,SAAS;IACTD,gBAAgB;IAChB8B,iBAAiB,GAAGC;GACrB,GAAG7Q,KAAK;EAET,MAAM,CAAEsN,UAAU,EAAEwD,cAAc,CAAE,GAAGlN,QAAQ,CAACD,KAAK,CAAC;EAEtD,MAAMoN,SAAS,GAAG9M,iBAAiB,CAACtC,EAAE,CAAC;EACvC,MAAMqP,YAAY,GAAG7O,MAAM,EAAE;EAE7B,MAAM8O,UAAU,GAAG3D,UAAU,CAAC4D,UAAU,CAAC,GAAG,CAAC,IAAIb,IAAI,KAAK,UAAU;EACpE,MAAMc,aAAa,GAAG7D,UAAU,CAAC4D,UAAU,CAAC,GAAG,CAAC,GAAG5D,UAAU,CAAC8D,SAAS,CAAC,CAAC,CAAC,GAAG9D,UAAU;EAEvF,MAAM,CAAElJ,KAAK,EAAEiN,SAAS,CAAE,GAAGzN,QAAQ,CAAC0K,SAAS,CAAC;EAEhD,MAAMgD,QAAQ,GAAG,CAAC/C,MAAM,GAAG,CAAC,KAAK;IAC/B,MAAMgD,QAAQ,GAAGP,YAAY,CAAC5O,OAAO,CAACkH,QAAQ,CAACc,QAAQ,CAACoH,aAAa,CAAC;;;IAGtE,MAAMC,QAAQ,GAAGF,QAAQ,GAAGnH,QAAQ,CAACoH,aAAa,CAACE,cAAc,GAAGlD,QAAQ;IAE5E6C,SAAS,CAACI,QAAQ,GAAGlD,MAAM,CAAC;GAC7B;EAED,MAAMoD,mBAAmB,GAAG/O,OAAO,CAAC,MAAM;IACxC,OAAO8N,QAAQ,CAAE5M,QAAQ,IAAK;MAC5B6K,OAAO,CAAC7K,QAAQ,CAAC;KAClB,CAAC;GACH,EAAE,CAAE6K,OAAO,EAAE+B,QAAQ,CAAE,CAAC;EAEzB,MAAMnD,aAAa,GAAGzJ,QAAQ,IAAI;IAChCgN,cAAc,CAAChN,QAAQ,CAAC;IAExB,IAAI,CAACA,QAAQ,IAAIA,QAAQ,KAAK,GAAG,EAAE;MACjC6N,mBAAmB,CAACrD,SAAS,CAAC;KAC/B,MAAM;MACLqD,mBAAmB,CAAC7N,QAAQ,CAAC;;GAGhC;EAED,MAAM8N,gBAAgB,GAAGlM,iBAAiB,CAAC,MAAM;IAC/C,IAAI2K,IAAI,KAAK,UAAU,EAAE;MACvB;;IAGF,IAAI,CAACY,UAAU,EAAE;MACf1D,aAAa,CAAC,GAAG,GAAGD,UAAU,CAAC;KAChC,MAAM;MACLC,aAAa,CAAC4D,aAAa,CAAC;;GAE/B,CAAC;EAEF,MAAMU,gBAAgB,GAAI/N,QAAQ,IAAK;IACrC,IAAImN,UAAU,EAAE;MACdnN,QAAQ,GAAG,GAAG,GAAGA,QAAQ;;IAG3B,IAAIA,QAAQ,KAAKwJ,UAAU,EAAE;MAC3B;;IAGFC,aAAa,CAACzJ,QAAQ,CAAC;IAEvB,IAAI,CAACmN,UAAU,IAAInN,QAAQ,CAACoN,UAAU,CAAC,GAAG,CAAC,EAAE;;MAG3CI,QAAQ,CAAC,CAAC,CAAC,CAAC;;GAEf;EAED,MAAMQ,UAAU,GAAGpM,iBAAiB,CAACqM,IAAI,IAAI;IAE3C,IAAI,EAAEA,IAAI,IAAIA,IAAI,CAAC9F,MAAM,CAAC,EAAE;MAC1B0E,OAAO,CAACrC,SAAS,CAAC;MAClB;;IAEF,MAAMN,KAAK,GAAG+D,IAAI,CAAC,CAAC,CAAC;IACrB,MAAMC,OAAO,GAAI,GAAEhE,KAAK,CAACiE,MAAO,KAAIjE,KAAK,CAACgE,OAAQ,EAAC;IAEnDrB,OAAO,CAACqB,OAAO,CAAC;GACjB,CAAC;EAEF1P,SAAS,CAAC,MAAM;IACd,IAAI,OAAO8B,KAAK,KAAK,WAAW,EAAE;MAChC2M,SAAS,CAAC3O,OAAO,CAACgC,KAAK,CAACA,KAAK,CAAC;MAC9BiN,SAAS,CAAC/C,SAAS,CAAC;;GAEvB,EAAE,CAAElK,KAAK,CAAE,CAAC;EAEb9B,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;;;IAIF,IAAI,CAAC3J,KAAK,EAAE;MACV4J,aAAa,CAAC0D,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC;MACpC;;IAGF1D,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;;;EAIbrB,SAAS,CAAC,MAAM;IACd,MAAM4P,WAAW,GAAGnQ,KAAK,IAAI;MAC3B,IAAI,CAACkP,UAAU,EAAE;QACf;;MAEFlP,KAAK,CAACoQ,aAAa,CAACC,OAAO,CAAC,kBAAkB,EAAErQ,KAAK,CAACoQ,aAAa,CAACE,OAAO,CAAC,MAAM,CAAC,CAAC;KACrF;IAED,MAAMC,YAAY,GAAGvQ,KAAK,IAAI;MAC5B,IAAIkP,UAAU,EAAE;QACd;;MAGF,MAAMsB,IAAI,GAAGxQ,KAAK,CAACoQ,aAAa,CAACE,OAAO,CAAC,kBAAkB,CAAC;MAE5D,IAAIE,IAAI,EAAE;QACRC,UAAU,CAAC,MAAM;UACfZ,gBAAgB,EAAE;UAClBN,QAAQ,EAAE;SACX,CAAC;;KAEL;IACDN,YAAY,CAAC5O,OAAO,CAACiI,gBAAgB,CAAC,MAAM,EAAE6H,WAAW,CAAC;IAC1DlB,YAAY,CAAC5O,OAAO,CAACiI,gBAAgB,CAAC,KAAK,EAAE6H,WAAW,CAAC;IACzDlB,YAAY,CAAC5O,OAAO,CAACiI,gBAAgB,CAAC,OAAO,EAAEiI,YAAY,CAAC;IAE5D,OAAO,MAAM;MACXtB,YAAY,CAAC5O,OAAO,CAACmI,mBAAmB,CAAC,MAAM,EAAE2H,WAAW,CAAC;MAC7DlB,YAAY,CAAC5O,OAAO,CAACmI,mBAAmB,CAAC,KAAK,EAAE2H,WAAW,CAAC;MAC5DlB,YAAY,CAAC5O,OAAO,CAACmI,mBAAmB,CAAC,OAAO,EAAE+H,YAAY,CAAC;KAChE;GACF,EAAE,CAAEtB,YAAY,EAAEC,UAAU,EAAEW,gBAAgB,EAAEN,QAAQ,CAAE,CAAC;EAE5D,OACE3Q;IAAK,KAAK,EAAC,iCAAiC;IAAA,WAC1CA;MAAO,GAAG,EAAGiN,UAAQ,CAACjM,EAAE,CAAG;MAAC,KAAK,EAAC,4BAA4B;MAAC,OAAO,EAAG,MAAM2P,QAAQ,EAAI;MAAA,WACxF/Q,KAAK,EACNK,IAAC,QAAQ;QACP,KAAK,EAAGL,KAAO;QACf,IAAI,EAAG8P,IAAM;QACb,OAAO,EAAGuB,gBAAkB;QAC5B,MAAM,EAAGX;QAAwB;MAC7B,EAERtQ;MAAK,KAAK,EAAC,qCAAqC;MAAC,GAAG,EAAGqQ,YAAc;MAAA,WACnEpQ,IAAC,aAAa;QACZ,MAAM,EAAGqQ,UAAY;QACrB,QAAQ,EAAGZ,IAAI,KAAK,UAAU,IAAIlD,QAAU;QAC5C,OAAO,EAAGyE;QACV,EACDX,UAAU,GACTrQ,IAAC,UAAU;QACT,EAAE,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;QACnB,IAAI,EAAGA,EAAI;QACX,OAAO,EAAGkQ,gBAAkB;QAC5B,QAAQ,EAAG1E,QAAU;QACrB,YAAY,EAAG,MAAM;UAAEyE,gBAAgB,EAAE;UAAEN,QAAQ,CAAC,IAAI,CAAC;SAAK;QAC9D,MAAM,EAAGQ,UAAY;QACrB,KAAK,EAAGX,aAAe;QACvB,SAAS,EAAGpC,SAAW;QACvB,GAAG,EAAGgC,SAAW;QACjB,gBAAgB,EAAGjC;QACnB,GACFlO,IAAC,iBAAiB;QAAA,GACXZ,KAAK;QACV,OAAO,EAAG6R,gBAAkB;QAC5B,KAAK,EAAGvE,UAAY;QACpB,GAAG,EAAGyD;QACN;MAEA;IACF;AAEV;AAEA,MAAMF,iBAAiB,GAAGnC,UAAU,CAAC,CAAC1O,KAAK,EAAEgE,GAAG,KAAK;EACnD,MAAM;IACJrC,EAAE;IACFwL,QAAQ;IACRwB,OAAO;IACPhL,KAAK;IACLyJ,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAMgP,QAAQ,GAAG7M,MAAM,EAAE;;;;EAIzB6B,GAAG,CAAC5B,OAAO,GAAG;IACZgC,KAAK,EAAGqN,QAAQ,IAAK;MACnB,MAAMgB,KAAK,GAAGzD,QAAQ,CAAC5M,OAAO;MAC9B,IAAI,CAACqQ,KAAK,EAAE;QACV;;MAGFA,KAAK,CAACrO,KAAK,EAAE;MACb,IAAI,OAAOqN,QAAQ,KAAK,QAAQ,EAAE;QAChC,IAAIA,QAAQ,GAAG9N,KAAK,CAACsI,MAAM,EAAE;UAC3BwF,QAAQ,GAAG9N,KAAK,CAACsI,MAAM;;QAEzBwG,KAAK,CAACC,iBAAiB,CAACjB,QAAQ,EAAEA,QAAQ,CAAC;;;GAIhD;EAED,OAAO7Q;IACL,EAAE,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;IACnB,IAAI,EAAC,MAAM;IACX,GAAG,EAAGqN,QAAU;IAChB,IAAI,EAAGrN,EAAI;IACX,UAAU,EAAC,OAAO;IAClB,YAAY,EAAC,KAAK;IAClB,QAAQ,EAAGwL,QAAU;IACrB,KAAK,EAAC,4BAA4B;IAClC,OAAO,EAAGQ,CAAC,IAAIgB,OAAO,CAAChB,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAG;IACxC,OAAO,EAAGyJ,OAAS;IACnB,MAAM,EAAGC,MAAQ;IACjB,KAAK,EAAG1J,KAAK,IAAI;IAAO;AAC5B,CAAC,CAAC;AAGF,MAAMgP,oBAAoB,GAAGjE,UAAU,CAAC,CAAC1O,KAAK,EAAEgE,GAAG,KAAK;EACtD,MAAM;IACJrC,EAAE;IACFwL,QAAQ;IACRwB,OAAO;IACPhL,KAAK;IACLyJ,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAMgP,QAAQ,GAAG7M,MAAM,EAAE;;;;EAIzB6B,GAAG,CAAC5B,OAAO,GAAG;IACZgC,KAAK,EAAE,MAAM;MACX,MAAMqO,KAAK,GAAGzD,QAAQ,CAAC5M,OAAO;MAC9B,IAAI,CAACqQ,KAAK,EAAE;QACV;;MAGFA,KAAK,CAACrO,KAAK,EAAE;MACbqO,KAAK,CAACC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;;GAEhC;EAED,OAAO9R;IACL,EAAE,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;IACnB,IAAI,EAAC,MAAM;IACX,GAAG,EAAGqN,QAAU;IAChB,IAAI,EAAGrN,EAAI;IACX,UAAU,EAAC,OAAO;IAClB,YAAY,EAAC,KAAK;IAClB,QAAQ,EAAGwL,QAAU;IACrB,KAAK,EAAC,4BAA4B;IAClC,OAAO,EAAGQ,CAAC,IAAIgB,OAAO,CAAChB,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAG;IACxC,OAAO,EAAGyJ,OAAS;IACnB,MAAM,EAAGC,MAAQ;IACjB,KAAK,EAAG1J,KAAK,IAAI,EAAI;IACrB,cAAW;IACX;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASiP,SAAS,CAAC5S,KAAK,EAAE;EACvC,MAAM;IACJC,OAAO;IACP0B,EAAE;IACFZ,WAAW;IACX2P,QAAQ;IACRvD,QAAQ;IACRkD,IAAI;IACJ9P,KAAK;IACLuN,QAAQ;IACRC,QAAQ;IACRe,gBAAgB;IAChB+D,QAAQ;IACRC,IAAI,GAAG5H,IAAI;IACX6H,OAAO;IACPhE,SAAS;IACT3B,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM,CAAEgT,kBAAkB,EAAEC,qBAAqB,CAAE,GAAGrP,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAAEsP,eAAe,EAAEC,kBAAkB,CAAE,GAAGvP,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAEwP,UAAU,EAAEC,aAAa,CAAE,GAAGzP,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAID,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAE7B,MAAMqT,aAAa,GAAGvP,WAAW,CAACJ,KAAK,CAAC;EAExCrB,SAAS,CAAC,MAAM;IACd,IAAIiC,UAAU,CAACsO,QAAQ,CAAC,EAAE;MACxB,MAAMU,kBAAkB,GAAGV,QAAQ,CAAClP,KAAK,CAAC,IAAI,IAAI;MAElDwP,kBAAkB,CAACI,kBAAkB,CAAC;;GAEzC,EAAE,CAAE5P,KAAK,CAAE,CAAC;EAEb,MAAMgL,OAAO,GAAGjJ,iBAAiB,CAAE5B,QAAQ,IAAK;IAC9C,IAAIyP,kBAAkB,GAAG,IAAI;IAE7B,IAAIhP,UAAU,CAACsO,QAAQ,CAAC,EAAE;MACxBU,kBAAkB,GAAGV,QAAQ,CAAC/O,QAAQ,CAAC,IAAI,IAAI;;IAGjD,IAAIyP,kBAAkB,EAAE;MACtBN,qBAAqB,CAACnP,QAAQ,CAAC;KAChC,MAAM;;MAGL,IAAIA,QAAQ,KAAKH,KAAK,EAAE;QACtBoK,QAAQ,CAACjK,QAAQ,CAAC;;;IAItBqP,kBAAkB,CAACI,kBAAkB,CAAC;GACvC,CAAC;EAEF,MAAM5C,OAAO,GAAGrM,WAAW,CAACkP,GAAG,IAAI;IACjCH,aAAa,CAACG,GAAG,CAAC;GACnB,EAAE,EAAE,CAAC;EAEN,IAAIF,aAAa,KAAK3P,KAAK,IAAIuP,eAAe,EAAE;IAC9CvP,KAAK,GAAGqP,kBAAkB;;EAG5B,MAAMS,cAAc,GAAG5R,QAAQ,CAACF,EAAE,CAAC;EAEnC,MAAMqM,KAAK,GAAGoF,UAAU,IAAIK,cAAc,IAAIP,eAAe;EAE7D,OACEvS;IACE,KAAK,EAAGiG,UAAU,CAChB5G,KAAK,CAAC8I,KAAK,EACX,4BAA4B,EAC5BkF,KAAK,GAAG,WAAW,GAAG,EAAE,CACzB;IACD,iBAAgBrM,EAAI;IAAA,WACpBf,IAAC,aAAa;MACZ,QAAQ,EAAG8P,QAAU;MACrB,QAAQ,EAAGvD,QAAU;MACrB,IAAI,EAAGkD,IAAM;MACb,EAAE,EAAG1O,EAAI;MAET,KAAK,EAAGpB,KAAO;MACf,OAAO,EAAGoO,OAAS;MACnB,OAAO,EAAGgC,OAAS;MACnB,OAAO,EAAGvD,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,OAAO,EAAG0F,OAAS;MACnB,IAAI,EAAGD,IAAM;MACb,KAAK,EAAGnP,KAAO;MACf,SAAS,EAAGoL,SAAW;MACvB,gBAAgB,EAAGD,gBAAkB;MACrC,iBAAiB,EAAG9O,KAAK,CAAC4Q;OAXpB3Q,OAAO,CAWmC,EACjD+N,KAAK,IAAIpN;MAAK,KAAK,EAAC,4BAA4B;MAAA,UAAEoN;MAAY,EAC/DpN,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2S,YAAY,CAAC1T,KAAK,EAAE;EAClC,OAAOY,IAAC,SAAS;IAAC,KAAK,EAAC,oCAAoC;IAAC,iBAAiB,EAAG+R,oBAAsB;IAAA,GAAM3S;IAAU;AACzH;AAEO,SAASwG,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,KAAK,CAAC,CAACA,IAAI,CAACtK,KAAK,IAAIsK,IAAI,CAAC0F,SAAS,CAACrK,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACpE;;AAGA;;AAEA,SAASsE,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAuBA,EAAG,EAAC;AACrC;;ACxZe,SAASiS,IAAI,CAAC5T,KAAK,EAAE;EAClC,MAAM;IACJ2B,EAAE;IACF1B,OAAO;IACPoL,KAAK,GAAG,EAAE;IACVxE,SAAS;IACTtG,KAAK,GAAG,SAAS;IACjByF,IAAI,EAAEF,UAAU;IAChB+N,KAAK;IACLC,QAAQ;IACR/I,cAAc;IACdgJ,SAAS;IACT,GAAGC;GACJ,GAAGhU,KAAK;EAET,MAAM,CAAEgG,IAAI,EAAEC,OAAO,CAAE,GAAGrC,QAAQ,CAAC,CAAC,CAACkC,UAAU,CAAC;EAEhD,MAAM4G,QAAQ,GAAG,CAAC,CAACrB,KAAK,CAACY,MAAM;EAC/B,MAAM/F,UAAU,GAAG,MAAMwG,QAAQ,IAAIzG,OAAO,CAAC,CAACD,IAAI,CAAC;EAEnD,MAAMiO,OAAO,GAAG,CAAClQ,WAAW,CAACiC,IAAI,CAAC,IAAIA,IAAI;EAC1C,MAAM6F,cAAc,GAAG9H,WAAW,CAAC9D,OAAO,CAAC,KAAKA,OAAO;EACvD,MAAMiU,WAAW,GAAGD,OAAO,IAAIpI,cAAc;EAC7C,MAAMsI,WAAW,GAAGC,cAAc,CAAC/I,KAAK,EAAE0I,SAAS,EAAEG,WAAW,CAAC;EAEjE,MAAMG,QAAQ,GAAGC,WAAW,CAACjJ,KAAK,EAAEQ,cAAc,CAAC;EAEnDvJ,SAAS,CAAC,MAAM;IACd,IAAI0D,IAAI,IAAI,CAAC0G,QAAQ,EAAE;MACrBzG,OAAO,CAAC,KAAK,CAAC;;GAEjB,EAAE,CAAED,IAAI,EAAE0G,QAAQ,CAAE,CAAC;;;AAGxB;AACA;EACE,SAAS6H,OAAO,CAACxS,KAAK,EAAE;IACtBA,KAAK,CAACyH,eAAe,EAAE;IACvBqK,KAAK,EAAE;IAEP,IAAI,CAAC7N,IAAI,EAAE;MACTC,OAAO,CAAC,IAAI,CAAC;;;EAIjB,OACEtF;IACE,iBAAgBgB,EAAI;IACpB,KAAK,EAAGiF,UAAU,CAChB,4BAA4B,EAC5B,iCAAiC,EACjC8F,QAAQ,GAAG,EAAE,GAAG,OAAO,EACvB1G,IAAI,GAAG,MAAM,GAAG,EAAE,CACjB;IAAA,WACHrF;MAAK,KAAK,EAAC,wCAAwC;MAAC,OAAO,EAAGuF,UAAY;MAAA,WACxEtF;QACE,KAAK,EAAGL,KAAO;QACf,KAAK,EAAGqG,UAAU,CAChB,8CAA8C,EAC9CZ,IAAI,IAAI,MAAM,CACb;QAAA,UACDzF;QACE,EACNI;QACE,KAAK,EAAC,gDAAgD;QAAA,WAEtDA;UACE,KAAK,EAAC,sBAAsB;UAC5B,OAAO,EAAG4T,OAAS;UACnB,KAAK,EAAC,gCAAgC;UAAA,WAEtC3T,IAAC,UAAU,KAAG,EAEZ,CAAC8L,QAAQ,GACP9L;YAAM,KAAK,EAAC,sCAAsC;YAAA;YAAc,GAE9D,IAAI;UAEH,EAEP8L,QAAQ,IACN9L;UACE,KAAK,EAAI,iBAAgByK,KAAK,CAACY,MAAO,QAAOZ,KAAK,CAACY,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,EAAG,EAAG;UAC7E,KAAK,EAAC,iCAAiC;UAAA,UAErCZ,KAAK,CAACY;UAEX,EAGDS,QAAQ,IACN9L;UACE,KAAK,EAAC,kBAAkB;UACxB,KAAK,EAAC,4BAA4B;UAAA,UAElCA,IAAC,SAAS;YAAC,KAAK,EAAGoF,IAAI,GAAG,iCAAiC,GAAG;;UAEjE;QAEC;MACF,EAEJ0G,QAAQ,IACN9L,IAAC,SAAS;MAAA,GACHoT,SAAS;MACd,cAAc,EAAGjJ,cAAgB;MACjC,SAAS,EAAGlE,SAAW;MACvB,OAAO,EAAG5G,OAAS;MACnB,EAAE,EAAG0B,EAAI;MACT,KAAK,EAAGwS,WAAa;MACrB,QAAQ,EAAGE,QAAU;MACrB,QAAQ,EAAGP,QAAU;MACrB,IAAI,EAAG9N;MAEV;IAEC;AAEV;AAEA,SAASwO,SAAS,CAACxU,KAAK,EAAE;EACxB,MAAM;IACJ+K,cAAc;IACdlE,SAAS,EAAEC,SAAS;IACpB7G,OAAO;IACP0B,EAAE;IACF0J,KAAK;IACLgJ,QAAQ;IACRP,QAAQ;IACR9N,IAAI;IACJ,GAAGgO;GACJ,GAAGhU,KAAK;EAET,MAAM8C,MAAM,GAAGL,aAAa,EAAE;EAE9B,MAAMgS,OAAO,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAE3B/R,SAAS,CAAC,MAAM;IACd,IAAImS,OAAO,IAAI1J,cAAc,EAAE;;MAG7B,MAAM5F,KAAK,GAAGH,KAAQ,CAAE,mBAAkBrD,EAAG,IAAG,CAAC;;;MAGjD,MAAM+S,QAAQ,GAAG,OAAO3J,cAAe,KAAK,SAAS,GACnD,6BAA6B,GAC7BA,cAAc;MAChB,MAAME,cAAc,GAAGjG,KAAQ,CAAC0P,QAAQ,EAAEvP,KAAK,CAAC;;;MAGhD,IAAI8F,cAAc,EAAE;QAElB,IAAI1G,UAAU,CAAC0G,cAAc,CAACzG,MAAM,CAAC,EAAE;UACrCyG,cAAc,CAACzG,MAAM,EAAE;SACxB,MAAM,IAAID,UAAU,CAAC0G,cAAc,CAAC7G,KAAK,CAAC,EAAE;UAC3C6G,cAAc,CAAC7G,KAAK,EAAE;;;;GAK7B,EAAE,CAAEqQ,OAAO,EAAE1J,cAAc,EAAEpJ,EAAE,CAAE,CAAC;EAEnC,OAAOf;IAAI,KAAK,EAAGgG,UAAU,CAC3B,uCAAuC,EACvCZ,IAAI,GAAG,MAAM,GAAG,EAAE,CACjB;IAAA,UAECqF,KAAK,CAAC1I,GAAG,CAAC,CAACiH,IAAI,EAAEC,KAAK,KAAK;MACzB,MAAM7G,GAAG,GAAGF,MAAM,CAAC8G,IAAI,CAAC;MAExB,OAAQjJ;QAAI,KAAK,EAAC,sCAAsC;QAAA,WACtDC,IAAC,SAAS;UAAA,GACHoT,SAAS;UACd,OAAO,EAAG/T,OAAS;UACnB,EAAE,EAAG0B,EAAI;UACT,KAAK,EAAGkI,KAAO;UACf,IAAI,EAAGD,IAAM;UACb,IAAI,EAAGA,IAAI,KAAK6K;UAAY,EAE5BX,QAAQ,IACNlT;UACE,IAAI,EAAC,QAAQ;UACb,KAAK,EAAC,aAAa;UACnB,KAAK,EAAC,0EAA0E;UAChF,OAAO,EAAG,MAAMkT,QAAQ,IAAIA,QAAQ,CAAClK,IAAI,CAAG;UAAA,UAC7ChJ,IAAC,UAAU;UACb;SAhB0DoC,GAAG,CAkB7D;KACN;IAEA;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoR,cAAc,CAACO,YAAY,EAAEZ,SAAS,EAAEG,WAAW,GAAG,KAAK,EAAE;EACpE,MAAMU,QAAQ,GAAGzS,MAAM,CAACwS,YAAY,CAACtR,KAAK,EAAE,CAAC;;;EAG7C,IAAI6Q,WAAW,EAAE;IACfU,QAAQ,CAACxS,OAAO,GAAGuS,YAAY,CAACtR,KAAK,EAAE;IAEvC,IAAI0Q,SAAS,EAAE;MACba,QAAQ,CAACxS,OAAO,CAACyS,IAAI,CAACd,SAAS,CAAC;;GAEnC,MAAM;IACL,MAAM1I,KAAK,GAAGuJ,QAAQ,CAACxS,OAAO;;;IAG9B,KAAK,MAAMwH,IAAI,IAAI+K,YAAY,EAAE;MAC/B,IAAI,CAACtJ,KAAK,CAACa,QAAQ,CAACtC,IAAI,CAAC,EAAE;;QAGzBmK,SAAS,GAAG1I,KAAK,CAACiB,OAAO,CAAC1C,IAAI,CAAC,GAAGyB,KAAK,CAACc,IAAI,CAACvC,IAAI,CAAC;;;;;IAKtDgL,QAAQ,CAACxS,OAAO,GAAGiJ,KAAK,CAACgB,MAAM,CAACzC,IAAI,IAAI+K,YAAY,CAACzI,QAAQ,CAACtC,IAAI,CAAC,CAAC;;EAGtE,OAAOgL,QAAQ,CAACxS,OAAO;AACzB;AAEA,SAASkS,WAAW,CAACjJ,KAAK,GAAG,EAAE,EAAE6I,WAAW,EAAE;EAC5C,MAAMY,aAAa,GAAG/Q,WAAW,CAACsH,KAAK,CAAChI,KAAK,EAAE,CAAC,IAAI,EAAE;EAEtD,IAAI6Q,WAAW,EAAE;IACf,OAAO,EAAE;;EAGX,OAAOY,aAAa,GAAGzJ,KAAK,CAACgB,MAAM,CAACzC,IAAI,IAAI,CAACkL,aAAa,CAAC5I,QAAQ,CAACtC,IAAI,CAAC,CAAC,GAAG,EAAE;AACjF;;ACzQA,SAASmL,WAAW,CAAC/U,KAAK,EAAE;EAE1B,MAAM;IACJ0Q,QAAQ;IACRvD,QAAQ;IACRxL,EAAE;IACFpB,KAAK;IACLyU,GAAG;IACHC,GAAG;IACHtG,OAAO;IACPuG,IAAI;IACJvR,KAAK,GAAG,EAAE;IACVyJ,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM,CAAEsN,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,CAAC;EAErD,MAAMgO,mBAAmB,GAAG/O,OAAO,CAAC,MAAM;IACxC,OAAO8N,QAAQ,CAAC3O,KAAK,IAAI;MAEvB,MAAM;QACJoT,QAAQ;QACRxR;OACD,GAAG5B,KAAK,CAACwH,MAAM;MAEhB,IAAI4L,QAAQ,CAACC,KAAK,EAAE;QAClBzG,OAAO,CAAChL,KAAK,GAAG0R,UAAU,CAAC1R,KAAK,CAAC,GAAG2K,SAAS,CAAC;;KAEjD,CAAC;GACH,EAAE,CAAEK,OAAO,EAAE+B,QAAQ,CAAE,CAAC;EAEzB,MAAMxB,WAAW,GAAGvB,CAAC,IAAI;IACvBgE,mBAAmB,CAAChE,CAAC,CAAC;IACtBJ,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEb,OACEhD;IAAK,KAAK,EAAC,kCAAkC;IAAA,WAC3CC;MAAO,GAAG,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MAAC,KAAK,EAAC,4BAA4B;MAAA,UAAGpB;MAAe,EAChFK;MACE,EAAE,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MACnB,IAAI,EAAC,QAAQ;MACb,IAAI,EAAGA,EAAI;MACX,UAAU,EAAC,OAAO;MAClB,YAAY,EAAC,KAAK;MAClB,QAAQ,EAAGwL,QAAU;MACrB,KAAK,EAAC,4BAA4B;MAClC,GAAG,EAAG6H,GAAK;MACX,GAAG,EAAGC,GAAK;MACX,OAAO,EAAG/F,WAAa;MACvB,OAAO,EAAG9B,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,IAAI,EAAG6H,IAAM;MACb,KAAK,EAAG5H;MAAe;IACrB;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASgI,gBAAgB,CAACtV,KAAK,EAAE;EAC9C,MAAM;IACJ0Q,QAAQ;IACR3P,WAAW;IACXoM,QAAQ;IACRlN,OAAO;IACP6N,QAAQ;IACRnM,EAAE;IACFpB,KAAK;IACLyU,GAAG;IACHC,GAAG;IACHlH,QAAQ;IACRmH,IAAI;IACJ9H,OAAO;IACPC,MAAM;IACNwF;GACD,GAAG7S,KAAK;EAET,MAAM,CAAEgT,kBAAkB,EAAEC,qBAAqB,CAAE,GAAGrP,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM2R,WAAW,GAAG1T,QAAQ,CAACF,EAAE,CAAC;EAChC,MAAM,CAAEyR,UAAU,EAAEC,aAAa,CAAE,GAAGzP,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAID,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAE7B,MAAMqT,aAAa,GAAGvP,WAAW,CAACJ,KAAK,CAAC;EAExCrB,SAAS,CAAC,MAAM;IACd,IAAIiC,UAAU,CAACsO,QAAQ,CAAC,EAAE;MACxB,MAAMU,kBAAkB,GAAGV,QAAQ,CAAClP,KAAK,CAAC,IAAI,IAAI;MAElD0P,aAAa,CAACE,kBAAkB,CAAC;;GAEpC,EAAE,CAAE5P,KAAK,CAAE,CAAC;EAEb,MAAMgL,OAAO,GAAI7K,QAAQ,IAAK;IAC5B,IAAIyP,kBAAkB,GAAG,IAAI;IAE7B,IAAIhP,UAAU,CAACsO,QAAQ,CAAC,EAAE;MACxBU,kBAAkB,GAAGV,QAAQ,CAAC/O,QAAQ,CAAC,IAAI,IAAI;;IAGjD,IAAIyP,kBAAkB,EAAE;MACtBN,qBAAqB,CAACnP,QAAQ,CAAC;KAChC,MAAM;MACLiK,QAAQ,CAACjK,QAAQ,CAAC;;IAGpBuP,aAAa,CAACE,kBAAkB,CAAC;GAClC;EAED,IAAID,aAAa,KAAK3P,KAAK,IAAIyP,UAAU,EAAE;IACzCzP,KAAK,GAAGqP,kBAAkB;;EAG5B,MAAMhF,KAAK,GAAGuH,WAAW,IAAInC,UAAU;EAEvC,OACEzS;IAAK,KAAK,EAAGiG,UAAU,CACrB,4BAA4B,EAC5BoH,KAAK,GAAG,WAAW,GAAG,EAAE,CAAG;IAAC,iBAAgBrM,EAAI;IAAA,WAChDf,IAAC,WAAW;MACV,QAAQ,EAAG8P,QAAU;MACrB,QAAQ,EAAGvD,QAAU;MACrB,EAAE,EAAGxL,EAAI;MAET,KAAK,EAAGpB,KAAO;MACf,OAAO,EAAG6M,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,OAAO,EAAGsB,OAAS;MACnB,GAAG,EAAGqG,GAAK;MACX,GAAG,EAAGC,GAAK;MACX,IAAI,EAAGC,IAAM;MACb,KAAK,EAAGvR;OARF1D,OAAO,CAQK,EAClB+N,KAAK,IAAIpN;MAAK,KAAK,EAAC,4BAA4B;MAAA,UAAGoN;MAAa,EAClEpN,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;AAEO,SAASyF,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACtK,KAAK;AAC7B;;AAGA;;AAEA,SAASiK,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;AC7JA,SAAS6T,MAAM,CAACxV,KAAK,EAAE;EACrB,MAAM;IACJ2B,EAAE;IACFpB,KAAK;IACL2M,QAAQ;IACRuI,OAAO,GAAG,EAAE;IACZ9R,KAAK,GAAG,EAAE;IACVwJ,QAAQ;IACRC,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAMgE,GAAG,GAAGC,iBAAiB,CAACtC,EAAE,CAAC;EAEjC,MAAM,CAAE2L,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,CAAC;EAErD,MAAM6J,oBAAoB,GAAG,CAAC;IAAEjE;GAAQ,KAAK;IAC3C2D,QAAQ,CAAC3D,MAAM,CAAC5F,KAAK,CAAC;GACvB;EAED,MAAM+J,YAAY,GAAGC,CAAC,IAAI;IACxBH,oBAAoB,CAACG,CAAC,CAAC;IACvBJ,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEb,OACEhD;IAAK,KAAK,EAAC,6BAA6B;IAAA,WACtCC;MAAO,GAAG,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MAAC,KAAK,EAAC,4BAA4B;MAAA,UAAGpB;MAAe,EAChFK;MACE,GAAG,EAAGoD,GAAK;MACX,EAAE,EAAG4J,UAAQ,CAACjM,EAAE,CAAG;MACnB,IAAI,EAAGA,EAAI;MACX,KAAK,EAAC,4BAA4B;MAClC,OAAO,EAAG+L,YAAc;MACxB,OAAO,EAAGN,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,KAAK,EAAGC,UAAY;MACpB,QAAQ,EAAGH,QAAU;MAAA,UAGnBsI,OAAO,CAAC9S,GAAG,CAAC,CAAC+S,MAAM,EAAEC,GAAG,KAAK;QAC3B,OACE/U;UAEE,KAAK,EAAG8U,MAAM,CAAC/R,KAAO;UACtB,QAAQ,EAAG+R,MAAM,CAACvI,QAAU;UAAA,UAC1BuI,MAAM,CAACnV;WAHHoV,GAAG,CAIF;OAEZ;MAEI;IACL;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,WAAW,CAAC5V,KAAK,EAAE;EACzC,MAAM;IACJC,OAAO;IACP0B,EAAE;IACFZ,WAAW;IACXR,KAAK;IACLuN,QAAQ;IACRC,QAAQ;IACR8H,UAAU;IACV1I,QAAQ;IACRC,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM2D,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAC/B,MAAMwV,OAAO,GAAGI,UAAU,CAAC5V,OAAO,CAAC;EAEnC,MAAM+N,KAAK,GAAGnM,QAAQ,CAACF,EAAE,CAAC;EAE1B,OACEhB;IACE,KAAK,EAAGqP,UAAU,CAChB,4BAA4B,EAC5BhC,KAAK,GAAG,WAAW,GAAG,EAAE,CACzB;IACD,iBAAgBrM,EAAI;IAAA,WACpBf,IAAC,MAAM;MACL,EAAE,EAAGe,EAAI;MAET,KAAK,EAAGpB,KAAO;MACf,KAAK,EAAGoD,KAAO;MACf,QAAQ,EAAGoK,QAAU;MACrB,OAAO,EAAGX,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,OAAO,EAAGoI,OAAS;MACnB,QAAQ,EAAGtI;OAPLlN,OAAO,CAOW,EACxB+N,KAAK,IAAIpN;MAAK,KAAK,EAAC,4BAA4B;MAAA,UAAGoN;MAAa,EAClEpN,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;AAEO,SAASyF,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACtK,KAAK;AAC7B;;AAEA;;AAEA,SAASiK,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;AC9Ie,SAASmU,MAAM,CAAC9V,KAAK,EAAE;EACpC,MAAM;IACJ0Q,QAAQ;IACRvD,QAAQ;IACRlN,OAAO;IACP6N,QAAQ;IACRnM,EAAE;IACF0L,MAAM;IACND,OAAO;IACPW;GACD,GAAG/N,KAAK;EAET,MAAM2D,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAE/B,MAAM,CAAEqN,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,CAAC;EAErD,MAAMgO,mBAAmB,GAAG/O,OAAO,CAAC,MAAM;IACxC,OAAO8N,QAAQ,CAAC,CAAC;MAAEnH;KAAQ,KAAKwE,QAAQ,CAACxE,MAAM,CAAC5F,KAAK,CAACsI,MAAM,GAAG1C,MAAM,CAAC5F,KAAK,GAAG2K,SAAS,CAAC,CAAC;GAC1F,EAAE,CAAEP,QAAQ,EAAE2C,QAAQ,CAAE,CAAC;EAE1B,MAAMxB,WAAW,GAAGvB,CAAC,IAAI;IACvBgE,mBAAmB,CAAChE,CAAC,CAAC;IACtBJ,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAGb,OACE/C;IAAK,KAAK,EAAC,6BAA6B;IAAA,UACtCA;MACE,EAAE,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MAEnB,IAAI,EAAC,MAAM;MACX,IAAI,EAAGA,EAAI;MACX,UAAU,EAAC,OAAO;MAClB,YAAY,EAAC,KAAK;MAClB,QAAQ,EAAGwL,QAAU;MACrB,KAAK,EAAC,4BAA4B;MAClC,OAAO,EAAG+B,WAAa;MACvB,cAAa5B,UAAU,IAAI,SAAW;MACtC,OAAO,EAAGF,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,KAAK,EAAGC;OAXFrN,OAAO;IAYX;AAEV;AAEO,SAASuG,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACtK,KAAK;AAC7B;;AAGA;;AAEA,SAASiK,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;AChEA,SAASoU,gBAAgB,CAAC9V,OAAO,EAAE;EACjCA,OAAO,CAAC+V,KAAK,CAACC,MAAM,GAAG,MAAM;EAC7BhW,OAAO,CAAC+V,KAAK,CAACC,MAAM,GAAG/S,IAAI,CAAC+R,GAAG,CAAChV,OAAO,CAACiW,YAAY,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI;AACvE;AAEA,SAASC,QAAQ,CAACnW,KAAK,EAAE;EAEvB,MAAM;IACJ2B,EAAE;IACFpB,KAAK;IACL6V,IAAI,GAAG,CAAC;IACR1F,QAAQ;IACR/B,OAAO;IACPhL,KAAK,GAAG,EAAE;IACVwJ,QAAQ;IACRkJ,SAAS;IACTjJ,OAAO;IACPC,MAAM;IACNiJ;GACD,GAAGtW,KAAK;EAET,MAAM,CAAEsN,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,CAAC;EAErD,MAAMK,GAAG,GAAGC,iBAAiB,CAACtC,EAAE,CAAC;EAEjC,MAAMgQ,mBAAmB,GAAG/O,OAAO,CAAC,MAAM;IACxC,OAAO8N,QAAQ,CAAC,CAAC;MAAEnH;KAAQ,KAAKoF,OAAO,CAACpF,MAAM,CAAC5F,KAAK,CAACsI,MAAM,GAAG1C,MAAM,CAAC5F,KAAK,GAAG2K,SAAS,CAAC,CAAC;GACzF,EAAE,CAAEK,OAAO,EAAE+B,QAAQ,CAAE,CAAC;EAEzB,MAAMxB,WAAW,GAAGvB,CAAC,IAAI;IACvBgE,mBAAmB,CAAChE,CAAC,CAAC;IAEtB2I,UAAU,IAAIP,gBAAgB,CAACpI,CAAC,CAACpE,MAAM,CAAC;IAExCgE,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAED4S,eAAe,CAAC,MAAM;IACpBD,UAAU,IAAIP,gBAAgB,CAAC/R,GAAG,CAAC5B,OAAO,CAAC;GAC5C,EAAE,EAAE,CAAC;EAENE,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEb,OACEhD;IAAK,KAAK,EAAC,+BAA+B;IAAA,WACxCC;MAAO,GAAG,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MAAC,KAAK,EAAC,4BAA4B;MAAA,UAC1DpB;MACI,EACRK;MACE,GAAG,EAAGoD,GAAK;MACX,EAAE,EAAG4J,UAAQ,CAACjM,EAAE,CAAG;MACnB,IAAI,EAAGA,EAAI;MACX,UAAU,EAAC,OAAO;MAClB,KAAK,EAAGiF,UAAU,CAChB,4BAA4B,EAC5ByP,SAAS,GAAG,sCAAsC,GAAG,EAAE,EACvDC,UAAU,GAAG,aAAa,GAAG,EAAE,CAChC;MACD,OAAO,EAAGpH,WAAa;MACvB,OAAO,EAAG9B,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,IAAI,EAAG+I,IAAM;MACb,KAAK,EAAG9I,UAAY;MACpB,QAAQ,EAAGH,QAAU;MACrB,cAAW;MACX;IACE;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASqJ,aAAa,CAACxW,KAAK,EAAE;EAC3C,MAAM;IACJC,OAAO;IACP0B,EAAE;IACFZ,WAAW;IACX2P,QAAQ;IACRnQ,KAAK;IACLuN,QAAQ;IACRC,QAAQ;IACRqI,IAAI;IACJC,SAAS;IACTlJ,QAAQ;IACRC,OAAO;IACPC,MAAM;IACNiJ;GACD,GAAGtW,KAAK;EAET,MAAM2D,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAE/B,MAAM+N,KAAK,GAAGnM,QAAQ,CAACF,EAAE,CAAC;EAE1B,OACEhB;IACE,KAAK,EAAGiG,UAAU,CAChB,4BAA4B,EAC5BoH,KAAK,GAAG,WAAW,GAAG,EAAE,CACzB;IACD,iBAAgBrM,EAAI;IAAA,WACpBf,IAAC,QAAQ;MACP,EAAE,EAAGe,EAAI;MAET,KAAK,EAAGpB,KAAO;MACf,KAAK,EAAGoD,KAAO;MACf,OAAO,EAAGoK,QAAU;MACpB,OAAO,EAAGX,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,IAAI,EAAG+I,IAAM;MACb,QAAQ,EAAG1F,QAAU;MACrB,SAAS,EAAG2F,SAAW;MACvB,QAAQ,EAAGlJ,QAAU;MACrB,UAAU,EAAGmJ;OAVPrW,OAAO,CAUe,EAC5B+N,KAAK,IAAIpN;MAAK,KAAK,EAAC,4BAA4B;MAAA,UAAGoN;MAAa,EAClEpN,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;AAEO,SAASyF,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACtK,KAAK;AAC7B;;AAGA;;AAEA,SAASiK,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;ACjJA,SAAS8U,SAAS,CAACzW,KAAK,EAAE;EAExB,MAAM;IACJ0Q,QAAQ;IACRvD,QAAQ,GAAG,KAAK;IAChBxL,EAAE;IACFpB,KAAK;IACLoO,OAAO;IACPvB,OAAO;IACPC,MAAM;IACN1J,KAAK,GAAG;GACT,GAAG3D,KAAK;EAET,MAAM,CAAEsN,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,IAAI,EAAE,CAAC;EAE3D,MAAMK,GAAG,GAAGC,iBAAiB,CAACtC,EAAE,CAAC;EAEjC,MAAMgQ,mBAAmB,GAAG/O,OAAO,CAAC,MAAM;IACxC,OAAO8N,QAAQ,CAAC,CAAC;MAAEnH;KAAQ,KAAKoF,OAAO,CAACpF,MAAM,CAAC5F,KAAK,CAACsI,MAAM,GAAG1C,MAAM,CAAC5F,KAAK,GAAG2K,SAAS,CAAC,CAAC;GACzF,EAAE,CAAEK,OAAO,EAAE+B,QAAQ,CAAE,CAAC;EAEzB,MAAMxB,WAAW,GAAGvB,CAAC,IAAI;IACvBgE,mBAAmB,CAAChE,CAAC,CAAC;IACtBJ,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEb,OACEhD;IAAK,KAAK,EAAC,gCAAgC;IAAA,WACzCC;MAAO,GAAG,EAAGgN,UAAQ,CAACjM,EAAE,CAAG;MAAC,KAAK,EAAC,4BAA4B;MAAA,UAC1DpB;MACI,EACRK;MACE,GAAG,EAAGoD,GAAK;MACX,EAAE,EAAG4J,UAAQ,CAACjM,EAAE,CAAG;MACnB,IAAI,EAAC,MAAM;MACX,IAAI,EAAGA,EAAI;MACX,UAAU,EAAC,OAAO;MAClB,YAAY,EAAC,KAAK;MAClB,QAAQ,EAAGwL,QAAU;MACrB,KAAK,EAAC,4BAA4B;MAClC,OAAO,EAAG+B,WAAa;MACvB,OAAO,EAAG9B,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,KAAK,EAAGC;MAAe;IACrB;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASoJ,cAAc,CAAC1W,KAAK,EAAE;EAC5C,MAAM;IACJC,OAAO;IACP0B,EAAE;IACFZ,WAAW;IACX2P,QAAQ;IACRvD,QAAQ;IACR5M,KAAK;IACLuN,QAAQ;IACRC,QAAQ;IACR8E,QAAQ;IACRzF,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM,CAAEgT,kBAAkB,EAAEC,qBAAqB,CAAE,GAAGrP,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM2R,WAAW,GAAG1T,QAAQ,CAACF,EAAE,CAAC;EAChC,MAAM,CAAEyR,UAAU,EAAEC,aAAa,CAAE,GAAGzP,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAID,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAE7B,MAAMqT,aAAa,GAAGvP,WAAW,CAACJ,KAAK,CAAC;EAExCrB,SAAS,CAAC,MAAM;IACd,IAAIiC,UAAU,CAACsO,QAAQ,CAAC,EAAE;MACxB,MAAMU,kBAAkB,GAAGV,QAAQ,CAAClP,KAAK,CAAC,IAAI,IAAI;MAElD0P,aAAa,CAACE,kBAAkB,CAAC;;GAEpC,EAAE,CAAE5P,KAAK,CAAE,CAAC;EAEb,MAAMgL,OAAO,GAAI7K,QAAQ,IAAK;IAC5B,IAAIyP,kBAAkB,GAAG,IAAI;IAE7B,IAAIhP,UAAU,CAACsO,QAAQ,CAAC,EAAE;MACxBU,kBAAkB,GAAGV,QAAQ,CAAC/O,QAAQ,CAAC,IAAI,IAAI;;IAGjD,IAAIyP,kBAAkB,EAAE;MACtBN,qBAAqB,CAACnP,QAAQ,CAAC;KAChC,MAAM;MACLiK,QAAQ,CAACjK,QAAQ,CAAC;;IAGpBuP,aAAa,CAACE,kBAAkB,CAAC;GAClC;EAED,IAAID,aAAa,KAAK3P,KAAK,IAAIyP,UAAU,EAAE;IACzCzP,KAAK,GAAGqP,kBAAkB;;EAG5B,MAAMhF,KAAK,GAAGuH,WAAW,IAAInC,UAAU;EAEvC,OACEzS;IACE,KAAK,EAAGiG,UAAU,CAChB,4BAA4B,EAC5BoH,KAAK,GAAG,WAAW,GAAG,EAAE,CACzB;IACD,iBAAgBrM,EAAI;IAAA,WACpBf,IAAC,SAAS;MACR,QAAQ,EAAG8P,QAAU;MACrB,QAAQ,EAAGvD,QAAU;MACrB,EAAE,EAAGxL,EAAI;MAET,KAAK,EAAGpB,KAAO;MACf,OAAO,EAAGoO,OAAS;MACnB,OAAO,EAAGvB,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,KAAK,EAAG1J;OALF1D,OAAO,CAKK,EAClB+N,KAAK,IAAIpN;MAAK,KAAK,EAAC,4BAA4B;MAAA,UAAGoN;MAAa,EAClEpN,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;AAEO,SAASyF,UAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACtK,KAAK;AAC7B;;AAGA;;AAEA,SAASiK,UAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;ACtKA,SAASgV,YAAY,CAAC3W,KAAK,EAAE;EAC3B,MAAM;IACJ2B,EAAE;IACFpB,KAAK;IACLoO,OAAO;IACPhL,KAAK;IACLiT,aAAa;IACbxJ,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM,CAAEsN,UAAU,EAAEC,aAAa,CAAE,GAAG3J,QAAQ,CAACD,KAAK,CAAC;EAErD,MAAMgO,mBAAmB,GAAG,YAAY;IACtChD,OAAO,CAAC,CAAChL,KAAK,CAAC;GAChB;EAED,MAAMuL,WAAW,GAAGvB,CAAC,IAAI;IACvBgE,mBAAmB,CAAE,CAAC;IACtBpE,aAAa,CAACI,CAAC,CAACpE,MAAM,CAAC5F,KAAK,CAAC;GAC9B;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,KAAK2J,UAAU,EAAE;MACxB;;IAGFC,aAAa,CAAC5J,KAAK,CAAC;GACrB,EAAE,CAAEA,KAAK,CAAE,CAAC;EAEb,OACEhD;IAAK,KAAK,EAAC,oCAAoC;IAAA,WAC7CC;MAAO,KAAK,EAAC,4BAA4B;MACvC,GAAG,EAAGgN,QAAQ,CAACjM,EAAE,CAAG;MAAA,UAClBpB;MACI,EACRI;MAAK,KAAK,EAAC,oCAAoC;MAAA,WAC7CA;QAAO,KAAK,EAAC,8CAA8C;QAAA,WACzDC;UACE,EAAE,EAAGgN,QAAQ,CAACjM,EAAE,CAAG;UACnB,KAAK,EAAC,4BAA4B;UAClC,IAAI,EAAC,UAAU;UACf,OAAO,EAAGyL,OAAS;UACnB,MAAM,EAAGC,MAAQ;UACjB,IAAI,EAAG1L,EAAI;UACX,OAAO,EAAGuN,WAAa;UACvB,OAAO,EAAG,CAAC,CAAC5B;UAAe,EAC7B1M;UAAM,KAAK,EAAC;UAA+C;QACrD,EACRA;QAAG,KAAK,EAAC,2CAA2C;QAAA,UAAGgW;QAAmB;MACtE;IACF;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,iBAAiB,CAAC7W,KAAK,EAAE;EAC/C,MAAM;IACJC,OAAO;IACP0B,EAAE;IACFZ,WAAW;IACXR,KAAK;IACLqW,aAAa;IACb9I,QAAQ;IACRC,QAAQ;IACRX,OAAO;IACPC;GACD,GAAGrN,KAAK;EAET,MAAM2D,KAAK,GAAGmK,QAAQ,CAAC7N,OAAO,CAAC;EAC/B,OACEU;IAAK,KAAK,EAAC,qEAAqE;IAAC,iBAAgBgB,EAAI;IAAA,WACnGf,IAAC,YAAY;MACX,EAAE,EAAGe,EAAI;MACT,KAAK,EAAGpB,KAAO;MACf,KAAK,EAAGoD,KAAO;MACf,OAAO,EAAGoK,QAAU;MACpB,OAAO,EAAGX,OAAS;MACnB,MAAM,EAAGC,MAAQ;MACjB,aAAa,EAAGuJ;MAAkB,EACpChW,IAAC,WAAW;MAAC,KAAK,EAAGe,EAAI;MAAC,OAAO,EAAG1B,OAAS;MAAC,KAAK,EAAGc;MAAgB;IAClE;AAEV;AAEO,SAASyF,QAAQ,CAACyH,IAAI,EAAE;EAC7B,OAAOA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACR,OAAO;AAC/B;;AAGA;;AAEA,SAASG,QAAQ,CAACjM,EAAE,EAAE;EACpB,OAAQ,wBAAwBA,EAAI,EAAC;AACvC;;AC3GA,MAAMmV,qBAAqB,GAAG,GAAG;AAElB,SAASC,aAAa,CAACC,aAAa,EAAE;EACnD,OAAO,SAASC,cAAc,CAACC,EAAE,EAAE;IACjC,IAAIF,aAAa,KAAK,KAAK,EAAE;MAE3B,IAAIG,YAAY,GACdC,QAAQ,CAACJ,aAAa,CAAC,GACrBA,aAAa,GACbF,qBAAqB;MAEzB,OAAOpG,QAAQ,CAACwG,EAAE,EAAEC,YAAY,CAAC;KAClC,MAAM;MACL,OAAOD,EAAE;;GAEZ;AACH;AAEAH,aAAa,CAACM,OAAO,GAAG,CAAE,sBAAsB,CAAE;;ACrBlD,YAAe;EACbN,aAAa,EAAE,CAAE,SAAS,EAAEA,aAAa;AAC3C,CAAC;;;;"}