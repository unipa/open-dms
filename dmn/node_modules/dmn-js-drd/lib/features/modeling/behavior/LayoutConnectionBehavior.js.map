{"version":3,"file":"LayoutConnectionBehavior.js","names":["inherits","CommandInterceptor","is","isAny","asTRBL","getMid","getOrientation","assign","forEach","LOW_PRIORITY","LayoutConnectionBehavior","injector","layouter","modeling","rules","invoke","preExecute","context","connection","source","newSource","target","newTarget","allowed","orientation","hints","getConnectionHints","updateInformationRequirements","informationRequirements","incoming","filter","incomingInformationRequirementsByOrientation","getInformationRequirementsByOrientation","sortInformationRequirements","connectionStartEnd","getConnectionsStartEnd","informationRequirement","index","connectionStart","start","connectionEnd","end","waypoints","layoutConnection","updateWaypoints","postExecuted","incomingOrientation","isSameOrientation","length","shapes","closure","enclosedConnections","shape","incomingInformationRequirements","id","outgoing","$inject","includes","y","height","x","width","map","sourceMid","sourceTrbl","targetTrbl","top","left","bottom","right","split","shift","push","orientationA","orientationB","axis","sort","a","b"],"sources":["../../../../src/features/modeling/behavior/LayoutConnectionBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  is,\r\n  isAny\r\n} from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nimport {\r\n  asTRBL,\r\n  getMid,\r\n  getOrientation\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\nexport default function LayoutConnectionBehavior(injector, layouter, modeling, rules) {\r\n  injector.invoke(CommandInterceptor, this);\r\n\r\n  // specify connection start and end on connection create\r\n  this.preExecute([\r\n    'connection.create',\r\n    'connection.reconnect'\r\n  ], function(context) {\r\n    var connection = context.connection,\r\n        source = context.newSource || context.source,\r\n        target = context.newTarget || context.target;\r\n\r\n    if (is(connection, 'dmn:InformationRequirement')\r\n      && !rules.allowed('connection.connect', {\r\n        connection: connection,\r\n        source: source,\r\n        target: target\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (!is(connection, 'dmn:InformationRequirement')) {\r\n      return;\r\n    }\r\n\r\n    var orientation = getOrientation(source, target);\r\n\r\n    if (!context.hints) {\r\n      context.hints = {};\r\n    }\r\n\r\n    assign(context.hints, getConnectionHints(source, target, orientation));\r\n  }, true);\r\n\r\n  /**\r\n   * Update incoming information requirements.\r\n   *\r\n   * @param {djs.model.Shape} target\r\n   * @param {Array<djs.model.Connection>} [informationRequirements]\r\n   * @param {string} [orientation]\r\n   */\r\n  function updateInformationRequirements(target, informationRequirements, orientation) {\r\n\r\n    // (1) get information requirements\r\n    if (!informationRequirements) {\r\n      informationRequirements = target.incoming.filter(function(incoming) {\r\n        return is(incoming, 'dmn:InformationRequirement');\r\n      });\r\n    }\r\n\r\n    var incomingInformationRequirementsByOrientation = {};\r\n\r\n    // (2) get information requirements per orientation\r\n    if (orientation) {\r\n      incomingInformationRequirementsByOrientation[ orientation ] =\r\n        informationRequirements;\r\n    } else {\r\n      incomingInformationRequirementsByOrientation =\r\n        getInformationRequirementsByOrientation(target, informationRequirements);\r\n    }\r\n\r\n    // (3) update information requirements per orientation\r\n    forEach(incomingInformationRequirementsByOrientation,\r\n      function(informationRequirements, orientation) {\r\n\r\n        // (3.1) sort information requirements\r\n        informationRequirements = sortInformationRequirements(\r\n          informationRequirements,\r\n          orientation\r\n        );\r\n\r\n        // (3.2) get new connection start and end\r\n        var connectionStartEnd =\r\n          getConnectionsStartEnd(informationRequirements, target, orientation);\r\n\r\n        // (3.3) update information requirements\r\n        informationRequirements.forEach((informationRequirement, index) => {\r\n          var connectionStart = connectionStartEnd[ index ].start,\r\n              connectionEnd = connectionStartEnd[ index ].end;\r\n\r\n          var waypoints = layouter.layoutConnection(informationRequirement, {\r\n            connectionStart: connectionStart,\r\n            connectionEnd: connectionEnd\r\n          });\r\n\r\n          modeling.updateWaypoints(informationRequirement, waypoints);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  // update information requirements on connection create and delete\r\n  // update information requirements of new target on connection reconnect\r\n  this.postExecuted([\r\n    'connection.create',\r\n    'connection.delete',\r\n    'connection.reconnect'\r\n  ], function(context) {\r\n    var connection = context.connection,\r\n        source = connection.source || context.source,\r\n        target = connection.target || context.target;\r\n\r\n    if (!is(connection, 'dmn:InformationRequirement')) {\r\n      return;\r\n    }\r\n\r\n    var orientation = getOrientation(source, target);\r\n\r\n    // update all information requirements with same orientation\r\n    var informationRequirements = target.incoming.filter(incoming => {\r\n      var incomingOrientation = getOrientation(incoming.source, incoming.target);\r\n\r\n      return is(incoming, 'dmn:InformationRequirement')\r\n        && isSameOrientation(incomingOrientation, orientation);\r\n    });\r\n\r\n    if (!informationRequirements.length) {\r\n      return;\r\n    }\r\n\r\n    updateInformationRequirements(target, informationRequirements, orientation);\r\n  }, true);\r\n\r\n  // update information requirements of old target on connection reconnect\r\n  this.preExecute('connection.reconnect', function(context) {\r\n    var connection = context.connection,\r\n        source = connection.source,\r\n        target = connection.target;\r\n\r\n    if (!is(connection, 'dmn:InformationRequirement')) {\r\n      return;\r\n    }\r\n\r\n    var orientation = getOrientation(source, target);\r\n\r\n    // update all information requirements with same orientation except reconnected\r\n    var informationRequirements = target.incoming.filter(incoming => {\r\n      var incomingOrientation = getOrientation(incoming.source, incoming.target);\r\n\r\n      return incoming !== connection\r\n        && is(incoming, 'dmn:InformationRequirement')\r\n        && isSameOrientation(incomingOrientation, orientation);\r\n    });\r\n\r\n    if (!informationRequirements.length) {\r\n      return;\r\n    }\r\n\r\n    updateInformationRequirements(target, informationRequirements, orientation);\r\n  }, true);\r\n\r\n  // update information requirements on elements move\r\n  this.postExecuted('elements.move', LOW_PRIORITY, function(context) {\r\n    var shapes = context.shapes,\r\n        closure = context.closure,\r\n        enclosedConnections = closure.enclosedConnections;\r\n\r\n    shapes.forEach(function(shape) {\r\n      if (!isAny(shape, [ 'dmn:Decision', 'dmn:InputData' ])) {\r\n        return;\r\n      }\r\n\r\n      // (1) update incoming information requirements\r\n      var incomingInformationRequirements = shape.incoming.filter(function(incoming) {\r\n        return is(incoming, 'dmn:InformationRequirement')\r\n          && !enclosedConnections[ incoming.id ];\r\n      });\r\n\r\n      if (incomingInformationRequirements.length) {\r\n        updateInformationRequirements(shape, incomingInformationRequirements);\r\n      }\r\n\r\n      // (2) update outgoing information requirements\r\n      shape.outgoing.forEach(function(outgoing) {\r\n        if (!is(outgoing, 'dmn:InformationRequirement')\r\n          || enclosedConnections[ outgoing.id ]) {\r\n          return;\r\n        }\r\n\r\n        updateInformationRequirements(outgoing.target);\r\n      });\r\n    });\r\n  }, true);\r\n}\r\n\r\nLayoutConnectionBehavior.$inject = [\r\n  'injector',\r\n  'layouter',\r\n  'modeling',\r\n  'rules'\r\n];\r\n\r\ninherits(LayoutConnectionBehavior, CommandInterceptor);\r\n\r\n// helpers //////////\r\n\r\nfunction getConnectionHints(source, target, orientation) {\r\n  var connectionStart = getMid(source),\r\n      connectionEnd = getMid(target);\r\n\r\n  if (orientation.includes('bottom')) {\r\n    connectionStart.y = source.y;\r\n    connectionEnd.y = target.y + target.height;\r\n  } else if (orientation.includes('top')) {\r\n    connectionStart.y = source.y + source.height;\r\n    connectionEnd.y = target.y;\r\n  } else if (orientation.includes('right')) {\r\n    connectionStart.x = source.x;\r\n    connectionEnd.x = target.x + target.width;\r\n  } else {\r\n    connectionStart.x = source.x + source.width;\r\n    connectionEnd.x = target.x;\r\n  }\r\n\r\n  return {\r\n    connectionStart: connectionStart,\r\n    connectionEnd: connectionEnd\r\n  };\r\n}\r\n\r\n/**\r\n * Get connections start and end based on number of information requirements and\r\n * orientation.\r\n *\r\n * @param {Array<djs.model.Connection>} informationRequirements\r\n * @param {djs.model.Shape} target\r\n * @param {string} orientation\r\n *\r\n * @returns {Array<Object>}\r\n */\r\nfunction getConnectionsStartEnd(informationRequirements, target, orientation) {\r\n  return informationRequirements.map(\r\n    function(informationRequirement, index) {\r\n      var source = informationRequirement.source,\r\n          sourceMid = getMid(source),\r\n          sourceTrbl = asTRBL(source),\r\n          targetTrbl = asTRBL(target);\r\n\r\n      var length = informationRequirements.length;\r\n\r\n      if (orientation.includes('bottom')) {\r\n        return {\r\n          start: {\r\n            x: sourceMid.x,\r\n            y: sourceTrbl.top\r\n          },\r\n          end: {\r\n            x: targetTrbl.left + target.width / (length + 1) * (index + 1),\r\n            y: targetTrbl.bottom\r\n          }\r\n        };\r\n      } else if (orientation.includes('top')) {\r\n        return {\r\n          start: {\r\n            x: sourceMid.x,\r\n            y: sourceTrbl.bottom\r\n          },\r\n          end: {\r\n            x: targetTrbl.left + target.width / (length + 1) * (index + 1),\r\n            y: targetTrbl.top\r\n          }\r\n        };\r\n      } else if (orientation.includes('right')) {\r\n        return {\r\n          start: {\r\n            x: sourceTrbl.left,\r\n            y: sourceMid.y\r\n          },\r\n          end: {\r\n            x: targetTrbl.right,\r\n            y: targetTrbl.top + target.height / (length + 1) * (index + 1)\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          start: {\r\n            x: sourceTrbl.right,\r\n            y: sourceMid.y\r\n          },\r\n          end: {\r\n            x: targetTrbl.left,\r\n            y: targetTrbl.top + target.height / (length + 1) * (index + 1)\r\n          }\r\n        };\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Get information requirements by orientation.\r\n *\r\n * @param {djs.model.shape} target\r\n * @param {Array<djs.model.Connection>} informationRequirements\r\n *\r\n * @returns {Object}\r\n */\r\nfunction getInformationRequirementsByOrientation(target, informationRequirements) {\r\n  var incomingInformationRequirementsByOrientation = {};\r\n\r\n  informationRequirements.forEach(function(incoming) {\r\n    var orientation = getOrientation(incoming.source, target).split('-').shift();\r\n\r\n    if (!incomingInformationRequirementsByOrientation[ orientation ]) {\r\n      incomingInformationRequirementsByOrientation[ orientation ] = [];\r\n    }\r\n\r\n    incomingInformationRequirementsByOrientation[ orientation ].push(incoming);\r\n  });\r\n\r\n  return incomingInformationRequirementsByOrientation;\r\n}\r\n\r\nfunction isSameOrientation(orientationA, orientationB) {\r\n  return orientationA\r\n    && orientationB\r\n    && orientationA.split('-').shift() === orientationB.split('-').shift();\r\n}\r\n\r\nfunction sortInformationRequirements(informationRequirements, orientation) {\r\n  var axis;\r\n\r\n  if (orientation.includes('top') || orientation.includes('bottom')) {\r\n    axis = 'x';\r\n  } else {\r\n    axis = 'y';\r\n  }\r\n\r\n  return informationRequirements.sort(function(a, b) {\r\n    return getMid(a.source)[ axis ] - getMid(b.source)[ axis ];\r\n  });\r\n}"],"mappings":"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"}