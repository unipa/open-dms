{"version":3,"file":"DrdReplace.js","names":["DrdReplace","drdFactory","replace","selection","modeling","replaceElement","element","target","hints","type","oldBusinessObject","businessObject","newBusinessObject","create","newElement","width","height","name","table","decisionLogic","$parent","output","typeRef","input","inputExpression","expression","variable","$inject"],"sources":["../../../src/features/replace/DrdReplace.js"],"sourcesContent":["/**\n * This module takes care of replacing DRD elements\n */\nexport default function DrdReplace(drdFactory, replace, selection, modeling) {\n\n  /**\n   * Prepares a new business object for the replacement element\n   * and triggers the replace operation.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {Object} target\n   * @param  {Object} [hints]\n   *\n   * @return {djs.model.Base} the newly created element\n   */\n  function replaceElement(element, target, hints) {\n\n    hints = hints || {};\n\n    var type = target.type,\n        oldBusinessObject = element.businessObject;\n\n    var newBusinessObject = drdFactory.create(type);\n\n    var newElement = {\n      type: type,\n      businessObject: newBusinessObject\n    };\n\n    newElement.width = element.width;\n    newElement.height = element.height;\n\n    newBusinessObject.name = oldBusinessObject.name;\n\n    if (target.table) {\n      var table = drdFactory.create('dmn:DecisionTable');\n      newBusinessObject.decisionLogic = table;\n      table.$parent = newBusinessObject;\n\n      var output = drdFactory.create('dmn:OutputClause');\n      output.typeRef = 'string';\n      output.$parent = table;\n      table.output = [ output ];\n\n      var input = drdFactory.create('dmn:InputClause');\n      input.$parent = table;\n\n      var inputExpression = drdFactory.create('dmn:LiteralExpression', {\n        typeRef: 'string'\n      });\n\n      input.inputExpression = inputExpression;\n      inputExpression.$parent = input;\n\n      table.input = [ input ];\n    }\n\n    if (target.expression) {\n      newBusinessObject.decisionLogic = drdFactory.create('dmn:LiteralExpression');\n      newBusinessObject.variable = drdFactory.create('dmn:InformationItem');\n    }\n\n    return replace.replaceElement(element, newElement, hints);\n  }\n\n  this.replaceElement = replaceElement;\n}\n\nDrdReplace.$inject = [\n  'drdFactory',\n  'replace',\n  'selection',\n  'modeling'\n];\n"],"mappings":"AAAA;AACA;AACA;AACA,eAAe,SAASA,UAAU,CAACC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EAE3E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,cAAc,CAACC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAE;IAE9CA,KAAK,GAAGA,KAAK,IAAI,CAAC,CAAC;IAEnB,IAAIC,IAAI,GAAGF,MAAM,CAACE,IAAI;MAClBC,iBAAiB,GAAGJ,OAAO,CAACK,cAAc;IAE9C,IAAIC,iBAAiB,GAAGX,UAAU,CAACY,MAAM,CAACJ,IAAI,CAAC;IAE/C,IAAIK,UAAU,GAAG;MACfL,IAAI,EAAEA,IAAI;MACVE,cAAc,EAAEC;IAClB,CAAC;IAEDE,UAAU,CAACC,KAAK,GAAGT,OAAO,CAACS,KAAK;IAChCD,UAAU,CAACE,MAAM,GAAGV,OAAO,CAACU,MAAM;IAElCJ,iBAAiB,CAACK,IAAI,GAAGP,iBAAiB,CAACO,IAAI;IAE/C,IAAIV,MAAM,CAACW,KAAK,EAAE;MAChB,IAAIA,KAAK,GAAGjB,UAAU,CAACY,MAAM,CAAC,mBAAmB,CAAC;MAClDD,iBAAiB,CAACO,aAAa,GAAGD,KAAK;MACvCA,KAAK,CAACE,OAAO,GAAGR,iBAAiB;MAEjC,IAAIS,MAAM,GAAGpB,UAAU,CAACY,MAAM,CAAC,kBAAkB,CAAC;MAClDQ,MAAM,CAACC,OAAO,GAAG,QAAQ;MACzBD,MAAM,CAACD,OAAO,GAAGF,KAAK;MACtBA,KAAK,CAACG,MAAM,GAAG,CAAEA,MAAM,CAAE;MAEzB,IAAIE,KAAK,GAAGtB,UAAU,CAACY,MAAM,CAAC,iBAAiB,CAAC;MAChDU,KAAK,CAACH,OAAO,GAAGF,KAAK;MAErB,IAAIM,eAAe,GAAGvB,UAAU,CAACY,MAAM,CAAC,uBAAuB,EAAE;QAC/DS,OAAO,EAAE;MACX,CAAC,CAAC;MAEFC,KAAK,CAACC,eAAe,GAAGA,eAAe;MACvCA,eAAe,CAACJ,OAAO,GAAGG,KAAK;MAE/BL,KAAK,CAACK,KAAK,GAAG,CAAEA,KAAK,CAAE;IACzB;IAEA,IAAIhB,MAAM,CAACkB,UAAU,EAAE;MACrBb,iBAAiB,CAACO,aAAa,GAAGlB,UAAU,CAACY,MAAM,CAAC,uBAAuB,CAAC;MAC5ED,iBAAiB,CAACc,QAAQ,GAAGzB,UAAU,CAACY,MAAM,CAAC,qBAAqB,CAAC;IACvE;IAEA,OAAOX,OAAO,CAACG,cAAc,CAACC,OAAO,EAAEQ,UAAU,EAAEN,KAAK,CAAC;EAC3D;EAEA,IAAI,CAACH,cAAc,GAAGA,cAAc;AACtC;AAEAL,UAAU,CAAC2B,OAAO,GAAG,CACnB,YAAY,EACZ,SAAS,EACT,WAAW,EACX,UAAU,CACX"}