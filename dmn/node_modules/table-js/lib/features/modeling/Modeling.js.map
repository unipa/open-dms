{"version":3,"file":"Modeling.js","names":["forEach","Base","AddRowHandler","RemoveRowHandler","MoveRowHandler","AddColHandler","RemoveColHandler","MoveColHandler","EditCellHandler","Modeling","constructor","eventBus","elementFactory","commandStack","_eventBus","_elementFactory","_commandStack","on","registerHandlers","getHandlers","_getHandlers","_create","type","attrs","create","addRow","index","row","context","execute","removeRow","moveRow","addCol","col","removeCol","moveCol","editCell","cell","changedAttrs","$inject","handlers","handler","id","registerHandler"],"sources":["../../../src/features/modeling/Modeling.js"],"sourcesContent":["import { forEach } from 'min-dash';\n\nimport { Base } from '../../model';\n\nimport AddRowHandler from './cmd/AddRowHandler';\nimport RemoveRowHandler from './cmd/RemoveRowHandler';\nimport MoveRowHandler from './cmd/MoveRowHandler';\nimport AddColHandler from './cmd/AddColHandler';\nimport RemoveColHandler from './cmd/RemoveColHandler';\nimport MoveColHandler from './cmd/MoveColHandler';\nimport EditCellHandler from './cmd/EditCellHandler';\n\n\n/**\n * The basic modeling entry point.\n *\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {CommandStack} commandStack\n */\nexport default class Modeling {\n\n  constructor(eventBus, elementFactory, commandStack) {\n    this._eventBus = eventBus;\n    this._elementFactory = elementFactory;\n    this._commandStack = commandStack;\n\n    eventBus.on('table.init', () => {\n\n      // register modeling handlers\n      registerHandlers(this.getHandlers(), commandStack);\n    });\n  }\n\n\n  getHandlers() {\n    return Modeling._getHandlers();\n  }\n\n\n  static _getHandlers() {\n    return {\n      'row.add': AddRowHandler,\n      'row.remove': RemoveRowHandler,\n      'row.move': MoveRowHandler,\n\n      'col.add': AddColHandler,\n      'col.remove': RemoveColHandler,\n      'col.move': MoveColHandler,\n\n      'cell.edit': EditCellHandler\n    };\n  }\n\n\n  _create(type, attrs) {\n    if (attrs instanceof Base) {\n      return attrs;\n    } else {\n      return this._elementFactory.create(type, attrs);\n    }\n  }\n\n\n  // public API\n\n  addRow(attrs, index) {\n    const row = this._create('row', attrs);\n\n    const context = {\n      row,\n      index\n    };\n\n    this._commandStack.execute('row.add', context);\n\n    return row;\n  }\n\n  removeRow(row) {\n    this._commandStack.execute('row.remove', { row });\n  }\n\n  moveRow(row, index) {\n    const context = {\n      row,\n      index\n    };\n\n    this._commandStack.execute('row.move', context);\n  }\n\n  addCol(attrs, index) {\n    const col = this._create('col', attrs);\n\n    const context = {\n      col,\n      index\n    };\n\n    this._commandStack.execute('col.add', context);\n\n    return col;\n  }\n\n  removeCol(col) {\n    this._commandStack.execute('col.remove', { col });\n  }\n\n  moveCol(col, index) {\n    const context = {\n      col,\n      index\n    };\n\n    this._commandStack.execute('col.move', context);\n  }\n\n  editCell(cell, changedAttrs) {\n    const context = {\n      cell,\n      ...changedAttrs\n    };\n\n    this._commandStack.execute('cell.edit', context);\n  }\n\n}\n\nModeling.$inject = [\n  'eventBus',\n  'elementFactory',\n  'commandStack'\n];\n\n\n// helpers /////////////\n\n\n/**\n * Register handlers with the command stack\n *\n * @param {Object} handlers { id -> Handler } map\n * @param {CommandStack} commandStack\n */\nfunction registerHandlers(handlers, commandStack) {\n  forEach(handlers, function(handler, id) {\n    commandStack.registerHandler(id, handler);\n  });\n}\n"],"mappings":"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"}