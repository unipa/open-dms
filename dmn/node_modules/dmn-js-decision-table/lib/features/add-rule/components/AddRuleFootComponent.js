import { createVNode, createTextVNode } from "inferno";
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import { Component } from 'inferno';
import { inject } from 'table-js/lib/components';
export default class AddRuleFootComponent extends Component {
  constructor(props, context) {
    super(props, context);
    _defineProperty(this, "handleClick", e => {
      e.stopPropagation();
      this.addRule(e.target.dataset.colIndex);
    });
    inject(this);
    this.addRule = this.addRule.bind(this);
  }
  componentWillMount() {
    this._eventBus = this.context.injector.get('eventBus');
  }
  addRule(colIndex) {
    this._eventBus.fire('addRule', {
      colIndex
    });
  }
  render() {
    const cols = this.props.cols;
    const cells = [createVNode(1, "td", "add-rule-add", createVNode(1, "span", "dmn-icon-plus action-icon", null, 1, {
      "title": "Add Rule"
    }), 2)];
    const _this$sheet$getRoot = this.sheet.getRoot(),
      businessObject = _this$sheet$getRoot.businessObject;
    if (!businessObject.input || !businessObject.input.length) {
      cells.push(createVNode(1, "td", "input-cell", createTextVNode("-"), 2));
    }
    for (let i = 0; i < cols.length + 1; i++) {
      let className = 'add-rule';
      const businessObject = cols[i] && cols[i].businessObject;
      let placeholder = '';
      if (businessObject) {
        if (businessObject.$instanceOf('dmn:InputClause')) {
          className += ' input-cell';
          placeholder = '-';
        }
        if (businessObject.$instanceOf('dmn:OutputClause')) {
          className += ' output-cell';
        }
      } else {
        className += ' annotation';
      }
      cells.push(createVNode(1, "td", className, placeholder, 0, {
        "data-col-index": i
      }));
    }
    return createVNode(1, "tfoot", "actionable add-rule", createVNode(1, "tr", null, cells, 0), 2, {
      "onClick": this.handleClick
    });
  }
}
AddRuleFootComponent.$inject = ['sheet'];
//# sourceMappingURL=AddRuleFootComponent.js.map