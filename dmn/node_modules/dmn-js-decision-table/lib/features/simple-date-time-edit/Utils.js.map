{"version":3,"file":"Utils.js","names":["ISO_DATE_REGEX","BETWEEN_DATE_REGEX","BEFORE_AFTER_DATE_REGEX","EXACT_DATE_REGEX","EXACT","BEFORE","AFTER","BETWEEN","validateISOString","string","test","trim","getDateString","type","dates","getSampleDate","date","Date","setUTCHours","toISOString","replace","parseString","matches","match"],"sources":["../../../src/features/simple-date-time-edit/Utils.js"],"sourcesContent":["const ISO_DATE_REGEX = /^\\d{4}(?:-\\d\\d){2}T(?:\\d\\d:){2}\\d\\d(?:Z|(?:[@+-][^\")]+))?$/;\n\n// eslint-disable-next-line\nconst BETWEEN_DATE_REGEX = /^\\[date and time\\(\"([^\"]*)\"\\)..date and time\\(\"([^\"]*)\"\\)\\]$/;\n\n// eslint-disable-next-line\nconst BEFORE_AFTER_DATE_REGEX = /^(<|>)\\s*date and time\\(\"([^\"]*)\"\\)$/;\n\n// eslint-disable-next-line\nconst EXACT_DATE_REGEX = /^date and time\\(\"([^\"]*)\"\\)$/;\n\nconst EXACT = 'exact',\n      BEFORE = 'before',\n      AFTER = 'after',\n      BETWEEN = 'between';\n\nexport function validateISOString(string) {\n  if (!ISO_DATE_REGEX.test(string.trim())) {\n    return 'Date and time must match pattern yyyy-MM-ddTHH:mm:ss[time zone].';\n  }\n}\n\nexport function getDateString(type, dates) {\n  if (type === EXACT) {\n    return `date and time(\"${ dates[0] }\")`;\n  } else if (type === BEFORE) {\n    return `< date and time(\"${ dates[0] }\")`;\n  } else if (type === AFTER) {\n    return `> date and time(\"${ dates[0] }\")`;\n  } else if (type === BETWEEN) {\n    return `[date and time(\"${ dates[0] }\")..date and time(\"${ dates[1] }\")]`;\n  }\n}\n\nexport function getSampleDate() {\n  const date = new Date();\n\n  date.setUTCHours(0, 0, 0, 0);\n\n  return date.toISOString().replace('.000Z', 'Z');\n}\n\nexport function parseString(string) {\n\n  // emtpy\n  if (!string || string.trim() === '') {\n    return {\n      type: 'exact',\n      date: ''\n    };\n  }\n\n  // between\n  let matches = string.match(BETWEEN_DATE_REGEX);\n\n  if (matches) {\n    return {\n      type: 'between',\n      dates: [ matches[1], matches[2] ]\n    };\n  }\n\n  // before or after\n  matches = string.match(BEFORE_AFTER_DATE_REGEX);\n\n  if (matches) {\n    return {\n      type: matches[1] === '<' ? 'before' : 'after',\n      date: matches[2]\n    };\n  }\n\n  // exact\n  matches = string.match(EXACT_DATE_REGEX);\n\n  if (matches) {\n    return {\n      type: 'exact',\n      date: matches[1]\n    };\n  }\n}"],"mappings":"AAAA,MAAMA,cAAc,GAAG,4DAA4D;;AAEnF;AACA,MAAMC,kBAAkB,GAAG,8DAA8D;;AAEzF;AACA,MAAMC,uBAAuB,GAAG,sCAAsC;;AAEtE;AACA,MAAMC,gBAAgB,GAAG,8BAA8B;AAEvD,MAAMC,KAAK,GAAG,OAAO;EACfC,MAAM,GAAG,QAAQ;EACjBC,KAAK,GAAG,OAAO;EACfC,OAAO,GAAG,SAAS;AAEzB,OAAO,SAASC,iBAAiB,CAACC,MAAM,EAAE;EACxC,IAAI,CAACT,cAAc,CAACU,IAAI,CAACD,MAAM,CAACE,IAAI,EAAE,CAAC,EAAE;IACvC,OAAO,kEAAkE;EAC3E;AACF;AAEA,OAAO,SAASC,aAAa,CAACC,IAAI,EAAEC,KAAK,EAAE;EACzC,IAAID,IAAI,KAAKT,KAAK,EAAE;IAClB,iCAA0BU,KAAK,CAAC,CAAC,CAAC;EACpC,CAAC,MAAM,IAAID,IAAI,KAAKR,MAAM,EAAE;IAC1B,mCAA4BS,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC,MAAM,IAAID,IAAI,KAAKP,KAAK,EAAE;IACzB,mCAA4BQ,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC,MAAM,IAAID,IAAI,KAAKN,OAAO,EAAE;IAC3B,kCAA2BO,KAAK,CAAC,CAAC,CAAC,kCAAwBA,KAAK,CAAC,CAAC,CAAC;EACrE;AACF;AAEA,OAAO,SAASC,aAAa,GAAG;EAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EAEvBD,IAAI,CAACE,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5B,OAAOF,IAAI,CAACG,WAAW,EAAE,CAACC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;AACjD;AAEA,OAAO,SAASC,WAAW,CAACZ,MAAM,EAAE;EAElC;EACA,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,OAAO;MACLE,IAAI,EAAE,OAAO;MACbG,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACA,IAAIM,OAAO,GAAGb,MAAM,CAACc,KAAK,CAACtB,kBAAkB,CAAC;EAE9C,IAAIqB,OAAO,EAAE;IACX,OAAO;MACLT,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,CAAEQ,OAAO,CAAC,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;EACH;;EAEA;EACAA,OAAO,GAAGb,MAAM,CAACc,KAAK,CAACrB,uBAAuB,CAAC;EAE/C,IAAIoB,OAAO,EAAE;IACX,OAAO;MACLT,IAAI,EAAES,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;MAC7CN,IAAI,EAAEM,OAAO,CAAC,CAAC;IACjB,CAAC;EACH;;EAEA;EACAA,OAAO,GAAGb,MAAM,CAACc,KAAK,CAACpB,gBAAgB,CAAC;EAExC,IAAImB,OAAO,EAAE;IACX,OAAO;MACLT,IAAI,EAAE,OAAO;MACbG,IAAI,EAAEM,OAAO,CAAC,CAAC;IACjB,CAAC;EACH;AACF"}