{"version":3,"file":"Utils.js","names":["isInput","parseString","string","isEmptyString","trim","type","values","split","result","openString","forEach","value","test","push","matches","match","getInputOrOutputValues","inputOrOutput","inputOrOutputValues","inputValues","outputValues","text","map"],"sources":["../../../src/features/simple-string-edit/Utils.js"],"sourcesContent":["import { isInput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\n/**\r\n * Parse input/output entry string to unary tests and type of unary tests.\r\n *\r\n * Example:\r\n *\r\n * not(\"foo\", \"bar\")\r\n *\r\n * returns\r\n *\r\n * {\r\n *   type: 'negation',\r\n *   values: [ \"foo\", \"bar, baz\" ]\r\n * }\r\n *\r\n * @param {string} string - Input/Output entry as string e.g. \"foo\", \"bar\".\r\n */\r\nexport function parseString(string) {\r\n\r\n  // empty string or no string at all\r\n  if (!string || isEmptyString(string.trim())) {\r\n    return {\r\n      type: 'disjunction',\r\n      values: []\r\n    };\r\n  }\r\n\r\n  // disjunction\r\n  let values = string.split(',');\r\n\r\n  const result = {\r\n    type: 'disjunction',\r\n    values: []\r\n  };\r\n\r\n  let openString = '';\r\n\r\n  values.forEach(value => {\r\n    openString += value;\r\n\r\n    if (/^\"[^\"]*\"$/.test(openString.trim())) {\r\n      result.values.push(openString.trim());\r\n\r\n      openString = '';\r\n    } else {\r\n      openString += ',';\r\n    }\r\n  });\r\n\r\n  if (!openString) {\r\n    return result;\r\n  }\r\n\r\n  // negation\r\n  result.type = 'negation';\r\n  result.values = [];\r\n\r\n  openString = '';\r\n\r\n  const matches = string.match(/^\\s*not\\((.*)\\)\\s*$/);\r\n\r\n  if (matches) {\r\n    values = matches[1].split(',');\r\n\r\n    values.forEach(value => {\r\n      openString += value;\r\n\r\n      if (/^\"[^\"]*\"$/.test(openString.trim())) {\r\n        result.values.push(openString.trim());\r\n\r\n        openString = '';\r\n      } else {\r\n        openString += ',';\r\n      }\r\n    });\r\n\r\n    if (!openString) {\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\n// TODO(philippfromme): seperate when refactoring component\r\nexport function getInputOrOutputValues(inputOrOutput) {\r\n  const inputOrOutputValues =\r\n    isInput(inputOrOutput) ?\r\n      inputOrOutput.inputValues :\r\n      inputOrOutput.outputValues;\r\n\r\n  if (!inputOrOutputValues || isEmptyString(inputOrOutputValues.text)) {\r\n    return [];\r\n  } else {\r\n    return inputOrOutputValues.text.split(',').map(value => value.trim());\r\n  }\r\n}\r\n\r\nfunction isEmptyString(string) {\r\n  return string === '';\r\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kCAAkC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAW,CAACC,MAAM,EAAE;EAElC;EACA,IAAI,CAACA,MAAM,IAAIC,aAAa,CAACD,MAAM,CAACE,IAAI,EAAE,CAAC,EAAE;IAC3C,OAAO;MACLC,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE;IACV,CAAC;EACH;;EAEA;EACA,IAAIA,MAAM,GAAGJ,MAAM,CAACK,KAAK,CAAC,GAAG,CAAC;EAE9B,MAAMC,MAAM,GAAG;IACbH,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE;EACV,CAAC;EAED,IAAIG,UAAU,GAAG,EAAE;EAEnBH,MAAM,CAACI,OAAO,CAACC,KAAK,IAAI;IACtBF,UAAU,IAAIE,KAAK;IAEnB,IAAI,WAAW,CAACC,IAAI,CAACH,UAAU,CAACL,IAAI,EAAE,CAAC,EAAE;MACvCI,MAAM,CAACF,MAAM,CAACO,IAAI,CAACJ,UAAU,CAACL,IAAI,EAAE,CAAC;MAErCK,UAAU,GAAG,EAAE;IACjB,CAAC,MAAM;MACLA,UAAU,IAAI,GAAG;IACnB;EACF,CAAC,CAAC;EAEF,IAAI,CAACA,UAAU,EAAE;IACf,OAAOD,MAAM;EACf;;EAEA;EACAA,MAAM,CAACH,IAAI,GAAG,UAAU;EACxBG,MAAM,CAACF,MAAM,GAAG,EAAE;EAElBG,UAAU,GAAG,EAAE;EAEf,MAAMK,OAAO,GAAGZ,MAAM,CAACa,KAAK,CAAC,qBAAqB,CAAC;EAEnD,IAAID,OAAO,EAAE;IACXR,MAAM,GAAGQ,OAAO,CAAC,CAAC,CAAC,CAACP,KAAK,CAAC,GAAG,CAAC;IAE9BD,MAAM,CAACI,OAAO,CAACC,KAAK,IAAI;MACtBF,UAAU,IAAIE,KAAK;MAEnB,IAAI,WAAW,CAACC,IAAI,CAACH,UAAU,CAACL,IAAI,EAAE,CAAC,EAAE;QACvCI,MAAM,CAACF,MAAM,CAACO,IAAI,CAACJ,UAAU,CAACL,IAAI,EAAE,CAAC;QAErCK,UAAU,GAAG,EAAE;MACjB,CAAC,MAAM;QACLA,UAAU,IAAI,GAAG;MACnB;IACF,CAAC,CAAC;IAEF,IAAI,CAACA,UAAU,EAAE;MACf,OAAOD,MAAM;IACf;EACF;AACF;;AAEA;AACA,OAAO,SAASQ,sBAAsB,CAACC,aAAa,EAAE;EACpD,MAAMC,mBAAmB,GACvBlB,OAAO,CAACiB,aAAa,CAAC,GACpBA,aAAa,CAACE,WAAW,GACzBF,aAAa,CAACG,YAAY;EAE9B,IAAI,CAACF,mBAAmB,IAAIf,aAAa,CAACe,mBAAmB,CAACG,IAAI,CAAC,EAAE;IACnE,OAAO,EAAE;EACX,CAAC,MAAM;IACL,OAAOH,mBAAmB,CAACG,IAAI,CAACd,KAAK,CAAC,GAAG,CAAC,CAACe,GAAG,CAACX,KAAK,IAAIA,KAAK,CAACP,IAAI,EAAE,CAAC;EACvE;AACF;AAEA,SAASD,aAAa,CAACD,MAAM,EAAE;EAC7B,OAAOA,MAAM,KAAK,EAAE;AACtB"}