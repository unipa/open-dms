{"version":3,"file":"Utils.js","names":["keys","COMPARISON_REGULAR_EXPRESSION","RANGE_REGULAR_EXPRESSION","operators","equals","less","lessEquals","greater","greaterEquals","getOperatorName","string","filter","key","parseString","isEmptyString","trim","type","comparisonMatches","match","rangeMatches","isNumber","value","parseFloat","operator","isComparison","values","map","start","end","matches","getComparisonString","comparisonOperator","comparisonValue","getRangeString","rangeStartValue","rangeEndValue","rangeStartType","rangeEndType","rangeStartChar","rangeEndChar"],"sources":["../../../src/features/simple-number-edit/Utils.js"],"sourcesContent":["import { keys } from 'min-dash';\r\n\r\n// eslint-disable-next-line\r\nconst COMPARISON_REGULAR_EXPRESSION = /^(-?(?:[0-9]|\\.[0-9])+)$|^((?:<|>|=){0,2})\\s*(-?(?:[0-9]|\\.[0-9])+)$/;\r\n\r\n// eslint-disable-next-line\r\nconst RANGE_REGULAR_EXPRESSION = /^(\\[|\\]){1}(-?(?:[0-9]|\\.[0-9])+){1,}\\.\\.(-?(?:[0-9]|\\.[0-9])+){1,}(\\[|\\]){1}$/;\r\n\r\nexport const operators = {\r\n  equals: '=',\r\n  less: '<',\r\n  lessEquals: '<=',\r\n  greater: '>',\r\n  greaterEquals: '>='\r\n};\r\n\r\nfunction getOperatorName(string) {\r\n  return keys(operators).filter(key => {\r\n    return string === operators[ key ];\r\n  })[0];\r\n}\r\n\r\nexport function parseString(string) {\r\n  if (!string || isEmptyString(string.trim())) {\r\n    return {\r\n      type: 'comparison'\r\n    };\r\n  }\r\n\r\n  const comparisonMatches = string.match(COMPARISON_REGULAR_EXPRESSION),\r\n        rangeMatches = string.match(RANGE_REGULAR_EXPRESSION);\r\n\r\n  if (comparisonMatches) {\r\n    if (isNumber(comparisonMatches)) {\r\n      return {\r\n        type: 'comparison',\r\n        value: parseFloat(comparisonMatches[1]),\r\n        operator: 'equals'\r\n      };\r\n    } else if (isComparison(comparisonMatches)) {\r\n      return {\r\n        type: 'comparison',\r\n        value: parseFloat(comparisonMatches[3]),\r\n        operator: getOperatorName(comparisonMatches[2])\r\n      };\r\n    }\r\n\r\n  } else if (rangeMatches) {\r\n    return {\r\n      type: 'range',\r\n      values: [ rangeMatches[2], rangeMatches[3] ].map(value => parseFloat(value)),\r\n      start: rangeMatches[1] === ']' ? 'exclude' : 'include',\r\n      end: rangeMatches[4] === '[' ? 'exclude' : 'include'\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport function isEmptyString(string) {\r\n  return string === '';\r\n}\r\n\r\nfunction isNumber(matches) {\r\n  return matches[0] && matches[1] && !matches[2] && !matches[3];\r\n}\r\n\r\nfunction isComparison(matches) {\r\n  return matches[0] && !matches[1] && matches[2] && matches[3];\r\n}\r\n\r\nexport function getComparisonString(comparisonOperator, comparisonValue) {\r\n  if (comparisonOperator === 'equals') {\r\n    return `${ comparisonValue }`;\r\n  } else {\r\n    return `${ operators[comparisonOperator] } ${ comparisonValue }`;\r\n  }\r\n}\r\n\r\nexport function getRangeString(\r\n    rangeStartValue,\r\n    rangeEndValue,\r\n    rangeStartType,\r\n    rangeEndType) {\r\n  const rangeStartChar = rangeStartType === 'exclude' ? ']' : '[',\r\n        rangeEndChar = rangeEndType === 'exclude' ? '[' : ']';\r\n\r\n  return `${ rangeStartChar }${ rangeStartValue }..${ rangeEndValue }${ rangeEndChar }`;\r\n}"],"mappings":"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"}