{"version":3,"file":"DescriptorUtil.js","names":["isArray","forEach","keys","reduce","createHooks","copyTableProperties","copyBusinessObjectProperties","reviveHooks","reviveBusinessObject","reviveTableElement","createDescriptor","element","cache","hooks","createDescriptors0","createDescriptor0","elements","result","currentCache","descriptorCache","currentDescriptors","root","id","descriptor","existingDescriptor","element0","evaluateHooks","create","hook","Row","Col","Cell","newDesc","type","getType","cells0","cells","businessObject","bo0","createBoDescriptor","Error","bo","boCache","existingBoDesc","$type","$descriptor","properties","property","value","name","map","b","value0","reviveDescriptor","entry","reviveCache","reviveDescriptors0","reviveDescriptor0","descriptors","existingElement","evaluateReviveHooks","revive","createCache","elementAttrs","Constructor","getConstructor","newElement","cell","row","col","createBo","boDescriptor","existingBo","newBoAttrs","key","val","val0","_keepIds","_model","ids","assigned","newBo","_dmnFactory","newBoAttr","$parent","a"],"sources":["../../../src/features/copy-cut-paste/DescriptorUtil.js"],"sourcesContent":["import {\n  isArray,\n  forEach,\n  keys,\n  reduce\n} from 'min-dash';\n\n// creating descriptors //////////\n\nconst createHooks = [\n  copyTableProperties,\n  copyBusinessObjectProperties\n];\n\nconst reviveHooks = [\n  reviveBusinessObject,\n  reviveTableElement\n];\n\n/**\n * Return a serializable snapshot of the given elements.\n *\n * @param {Array<Base>} elements list of table elements\n *\n * @return {Tree} descriptor tree\n */\nexport function createDescriptor(element, cache, hooks) {\n\n  hooks = hooks || createHooks;\n  cache = cache || {};\n\n  if (isArray(element)) {\n    return createDescriptors0(element, cache, hooks);\n  } else {\n    return createDescriptor0(element, cache, hooks);\n  }\n\n}\n\n\n/**\n * Create descriptors of elements, returning { descriptors: [], descriptorCache }.\n *\n * @param {Array<Base>} elements list of table elements\n * @param {Object} cache the create cache\n *\n * @return {Object} new descriptors + updated cache\n */\nfunction createDescriptors0(elements, cache, hooks) {\n\n  return reduce(elements, (result, element) => {\n\n    var currentCache = result.descriptorCache,\n        currentDescriptors = result.root;\n\n    let {\n      root,\n      descriptorCache\n    } = createDescriptor0(element, currentCache, hooks);\n\n    return {\n      root: [\n        ...currentDescriptors,\n        root\n      ],\n      descriptorCache: {\n        ...currentCache,\n        ...descriptorCache\n      }\n    };\n  }, {\n    root: [],\n    descriptorCache: cache\n  });\n}\n\nfunction createDescriptor0(element, cache, hooks) {\n\n  var id = element.id;\n\n  var descriptor = {\n    id: id\n  };\n\n  var elements = cache.elements || {};\n\n  var existingDescriptor = elements[id];\n\n  // element already created; nothing to do\n  if (existingDescriptor) {\n    return {\n      root: existingDescriptor,\n      descriptorCache: cache\n    };\n  }\n\n  // we're new; need to initialize element via hooks\n  // we assume we're not handling recursive data structures\n  // here. Otherwise we'd need to pre-populate the cache\n  // with the given element\n  let element0 = evaluateHooks(element, descriptor, hooks, {\n    ...cache,\n    elements\n  });\n\n  return {\n    root: element0.root,\n    descriptorCache: {\n      ...element0.descriptorCache,\n      elements: {\n        ...element0.descriptorCache.elements,\n        [id]: element0.root\n      }\n    }\n  };\n}\n\n\nfunction evaluateHooks(element, descriptor, hooks, cache) {\n\n  function create(element, descriptorCache) {\n    return createDescriptor(element, descriptorCache, hooks);\n  }\n\n  return reduce(hooks, function(result, hook) {\n    return hook(\n      element,\n      result.root,\n      result.descriptorCache,\n      create\n    );\n  }, {\n    root: descriptor,\n    descriptorCache: cache\n  });\n}\n\n\nimport {\n  Row,\n  Col,\n  Cell\n} from 'table-js/lib/model';\n\n\nfunction copyTableProperties(element, descriptor, cache, create) {\n\n  var descriptorCache = cache;\n\n  var newDesc = {\n    ...descriptor,\n    type: getType(element)\n  };\n\n  if (\n    element instanceof Row ||\n    element instanceof Col\n  ) {\n    let cells0 = create(element.cells, descriptorCache);\n\n    newDesc.cells = cells0.root;\n    descriptorCache = cells0.descriptorCache;\n  }\n\n  return {\n    root: newDesc,\n    descriptorCache\n  };\n}\n\n\nfunction copyBusinessObjectProperties(element, descriptor, cache) {\n\n  var businessObject = element.businessObject;\n\n  if (!businessObject) {\n    return {\n      root: descriptor,\n      descriptorCache: cache\n    };\n  }\n\n  // need to clone businessObject\n  var bo0 = createBoDescriptor(businessObject, cache);\n\n  return {\n    root: {\n      ...descriptor,\n      businessObject: bo0.root\n    },\n    descriptorCache: bo0.descriptorCache\n  };\n}\n\n\nfunction getType(element) {\n\n  if (element instanceof Row) {\n    return 'row';\n  }\n\n  if (element instanceof Col) {\n    return 'col';\n  }\n\n  if (element instanceof Cell) {\n    return 'cell';\n  }\n\n  throw new Error('cannot deduce element type: #' + element.id);\n}\n\n\nfunction createBoDescriptor(bo, cache) {\n  var boCache,\n      existingBoDesc;\n\n  var id = bo.id;\n\n  if (id) {\n    boCache = cache.boCache || {};\n\n    existingBoDesc = boCache[id];\n\n    // businessObject already created; nothing to do\n    if (existingBoDesc) {\n      return {\n        root: existingBoDesc,\n        descriptorCache: cache\n      };\n    }\n  }\n\n  var descriptor = {\n    $type: bo.$type\n  };\n\n  if (id) {\n    descriptor.id = id;\n\n    boCache = {\n      ...boCache,\n      [id]: descriptor\n    };\n\n    cache = {\n      ...cache,\n      boCache\n    };\n  }\n\n  // TODO(nikku): distinguish relations and containment\n  // Need to build up the whole tree and revive relations afterwards\n\n  // ITERATE OVER ALL SET PROPERTIES\n  // (Object.keys(bo) or via bo.$descriptor....)\n\n  bo.$descriptor.properties.forEach(function(property) {\n    var value = bo[property.name];\n\n    // const propertyDescriptor = bo.$model.getPropertyDescriptor(bo, property.name),\n    //       isId = propertyDescriptor.isId,\n    //       isReference = propertyDescriptor.isReference;\n\n    // not set\n    if (!value) {\n      return;\n    }\n\n    // arrays of moddle elements\n    if (isArray(value)) {\n      value = value.map(b => {\n        var value0 = createBoDescriptor(b, cache);\n\n        cache = value0.descriptorCache;\n\n        return value0.root;\n      });\n    }\n\n    // moddle elements\n    if (value.$type) {\n      let value0 = createBoDescriptor(value, cache);\n\n      cache = value0.descriptorCache;\n      value = value0.root;\n    }\n\n    // other values\n    descriptor[property.name] = value;\n  });\n\n  return {\n    root: descriptor,\n    descriptorCache: cache\n  };\n}\n\n\n\n// reviving //////////\n\nexport function reviveDescriptor(entry, reviveCache, hooks) {\n\n  hooks = hooks || reviveHooks;\n  reviveCache = reviveCache || {};\n\n  if (isArray(entry.root)) {\n    return reviveDescriptors0(entry, reviveCache, hooks);\n  } else {\n    return reviveDescriptor0(entry, reviveCache, hooks);\n  }\n}\n\n\n/**\n * TBD: document this!\n *\n * @param  {[type]} entry       [description]\n * @param  {[type]} reviveCache [description]\n * @param  {[type]} hooks       [description]\n * @return {[type]}             [description]\n */\nfunction reviveDescriptors0(entry, reviveCache, hooks) {\n\n  let descriptors = entry.root;\n  let descriptorCache = entry.descriptorCache;\n\n  return reduce(descriptors, (result, element) => {\n\n    var currentCache = result.reviveCache,\n        currentDescriptors = result.root;\n\n    let {\n      root,\n      reviveCache\n    } = reviveDescriptor0({ root: element, descriptorCache }, currentCache, hooks);\n\n    return {\n      root: [\n        ...currentDescriptors,\n        root\n      ],\n      reviveCache\n    };\n  }, {\n    root: [],\n    reviveCache\n  });\n}\n\n/**\n * TBD: document this!\n *\n * @param  {[type]} entry [description]\n * @param  {[type]} cache [description]\n * @param  {[type]} hooks [description]\n * @return {[type]}       [description]\n */\nfunction reviveDescriptor0(entry, reviveCache, hooks) {\n\n  var descriptor = entry.root;\n\n  var id = descriptor.id;\n\n  var elements = reviveCache.elements || {};\n\n  var existingElement = elements[id];\n\n  // element already created; nothing to do\n  if (existingElement) {\n    return {\n      root: existingElement,\n      reviveCache: reviveCache\n    };\n  }\n\n  // start with a fake element; haha <3\n  var element = {\n    id: id\n  };\n\n  // we're new; need to initialize element via hooks\n  let element0 = evaluateReviveHooks(entry, element, hooks, {\n    ...reviveCache,\n    elements\n  });\n\n  return {\n    root: element0.root,\n    reviveCache: {\n      ...element0.reviveCache,\n      elements: {\n        ...element0.reviveCache.elements,\n        [id]: element0.root\n      }\n    }\n  };\n}\n\n// entry = { root, descriptorCache }\n// element = { id: foo }\n// hooks = [ ... ]\n// reviveCache = { ... }\nfunction evaluateReviveHooks(entry, element, hooks, reviveCache) {\n\n  function revive(entry, reviveCache) {\n    return reviveDescriptor(entry, reviveCache, hooks);\n  }\n\n  return reduce(hooks, function(result, hook) {\n    return hook(\n      entry,\n      result.root,\n      result.reviveCache,\n      revive\n    );\n  }, {\n    root: element,\n    reviveCache: reviveCache\n  });\n}\n\n\nfunction reviveTableElement(entry, element, reviveCache, revive) {\n  var descriptor = entry.root;\n  var createCache = entry.descriptorCache;\n\n  var elementAttrs = {\n    ...element\n  };\n\n  // make sure table element ID is same as moddle element ID\n  if (element.businessObject && element.businessObject.id) {\n    elementAttrs.id = element.businessObject.id;\n  }\n\n  if (\n    descriptor.type === 'row' ||\n    descriptor.type === 'col'\n  ) {\n    let cells0 = revive({\n      root: descriptor.cells,\n      descriptorCache: createCache\n    }, reviveCache);\n\n    elementAttrs.cells = cells0.root;\n    reviveCache = cells0.reviveCache;\n  }\n\n  var Constructor = getConstructor(descriptor);\n\n  var newElement = new Constructor(elementAttrs);\n\n  // set parent row or col\n  if (newElement instanceof Row) {\n    newElement.cells.forEach(cell => {\n      cell.row = newElement;\n    });\n  } else if (newElement instanceof Col) {\n    newElement.cells.forEach(cell => {\n      cell.col = newElement;\n    });\n  }\n\n  return {\n    root: newElement,\n    reviveCache\n  };\n}\n\n\nfunction reviveBusinessObject(entry, element, reviveCache) {\n  var businessObject = entry.root.businessObject;\n\n  if (!businessObject) {\n    return {\n      root: element,\n      reviveCache\n    };\n  }\n\n  // need to clone businessObject\n  var bo0 = createBo({\n    root: businessObject,\n    descriptorCache: entry.descriptorCache\n  }, reviveCache);\n\n  return {\n    root: {\n      ...element,\n      businessObject: bo0.root\n    },\n    reviveCache: bo0.reviveCache\n  };\n}\n\n\nfunction getConstructor(descriptor) {\n\n  switch (descriptor.type) {\n  case 'row':\n    return Row;\n  case 'cell':\n    return Cell;\n  case 'col':\n    return Col;\n  default:\n    throw new Error('unknown element type: #' + descriptor.type);\n  }\n}\n\n\nfunction createBo(entry, reviveCache) {\n  var boDescriptor = entry.root;\n\n  var id = boDescriptor.id;\n\n  let boCache,\n      existingBo;\n\n  if (id) {\n    boCache = reviveCache.boCache || {};\n\n    existingBo = boCache[id];\n\n    // businessObject already created; nothing to do\n    if (existingBo) {\n      return {\n        root: existingBo,\n        reviveCache\n      };\n    }\n  }\n\n  var newBoAttrs = {};\n\n  // set attrs for new business object (might include creating other business objects)\n  keys(boDescriptor).forEach(key => {\n    let val,\n        val0;\n\n    if (boDescriptor[key].$type) {\n      val0 = createBo({\n        root: boDescriptor[key]\n      }, reviveCache);\n\n      val = val0.root;\n\n      reviveCache = val0.reviveCache;\n      boCache = reviveCache.boCache || {};\n    } else if (isArray(boDescriptor[key])) {\n      val = boDescriptor[key].map(b => {\n        val0 = createBo({\n          root: b\n        }, reviveCache);\n\n        reviveCache = val0.reviveCache;\n        boCache = reviveCache.boCache || {};\n\n        return val0.root;\n      });\n    } else {\n      val = boDescriptor[key];\n    }\n\n    newBoAttrs[key] = val;\n  });\n\n  const type = newBoAttrs.$type;\n\n  delete newBoAttrs.$type;\n\n  // generate new ID if not supposed to be kept or already assigned\n  if (!reviveCache._keepIds\n    || reviveCache._model.ids.assigned(newBoAttrs.id)) {\n\n    delete newBoAttrs.id;\n  }\n\n  var newBo = reviveCache._dmnFactory.create(type, newBoAttrs);\n\n  // set up $parent relationships for moddle elements\n  forEach(newBoAttrs, newBoAttr => {\n    if (newBoAttr.$type) {\n      newBoAttr.$parent = newBo;\n    }\n\n    if (isArray(newBoAttr)) {\n      newBoAttr.forEach(a => a.$parent = newBo);\n    }\n  });\n\n  if (id) {\n    boCache = {\n      ...boCache,\n      [id]: newBo\n    };\n\n    reviveCache = {\n      ...reviveCache,\n      boCache\n    };\n  }\n\n  return {\n    root: newBo,\n    reviveCache\n  };\n\n}"],"mappings":"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"}