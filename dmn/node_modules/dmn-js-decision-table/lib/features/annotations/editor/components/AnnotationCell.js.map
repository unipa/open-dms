{"version":3,"file":"AnnotationCell.js","names":["Component","EditableComponent","Cell","inject","EditableAnnotationCell","constructor","props","context","forceUpdate","text","row","modeling","editAnnotation","businessObject","componentWillMount","changeSupport","onElementsChanged","id","componentWillUnmount","offElementsChanged","render","rowIndex","description","setAnnotationValue","$inject","AnnotationEditor","getClassName","getEditor"],"sources":["../../../../../src/features/annotations/editor/components/AnnotationCell.js"],"sourcesContent":["import { Component } from 'inferno';\n\nimport EditableComponent from 'dmn-js-shared/lib/components/EditableComponent';\n\nimport {\n  Cell,\n  inject\n} from 'table-js/lib/components';\n\n\nexport default class EditableAnnotationCell extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    inject(this);\n  }\n\n  componentWillMount() {\n    const { row } = this.props;\n\n    this.changeSupport.onElementsChanged(row.id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const { row } = this.props;\n\n    this.changeSupport.offElementsChanged(row.id, this.onElementsChanged);\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  };\n\n  setAnnotationValue = (text) => {\n    const { row } = this.props;\n\n    this.modeling.editAnnotation(row.businessObject, text);\n  };\n\n\n  render() {\n    const {\n      row,\n      rowIndex\n    } = this.props;\n    const {\n      description,\n      id\n    } = row.businessObject;\n\n    return (\n\n      <Cell\n        className=\"annotation\"\n        onChange={ this.setAnnotationValue }\n        coords={ `${rowIndex}:annotation` }\n        value={ description }\n        elementId={ id }\n        data-row-id={ row.id }>\n\n        <AnnotationEditor\n          ctrlForNewline={ true }\n          className=\"annotation-editor\"\n          onChange={ this.setAnnotationValue }\n          value={ description } />\n      </Cell>\n    );\n  }\n\n}\n\nEditableAnnotationCell.$inject = [\n  'changeSupport',\n  'modeling'\n];\n\n\nclass AnnotationEditor extends EditableComponent {\n\n  render() {\n    return (\n      <div className={ this.getClassName() }>\n        { this.getEditor() }\n      </div>\n    );\n  }\n}"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,SAAS;AAEnC,OAAOC,iBAAiB,MAAM,gDAAgD;AAE9E,SACEC,IAAI,EACJC,MAAM,QACD,yBAAyB;AAGhC,eAAe,MAAMC,sBAAsB,SAASJ,SAAS,CAAC;EAE5DK,WAAW,CAACC,KAAK,EAAEC,OAAO,EAAE;IAC1B,KAAK,CAACD,KAAK,EAAEC,OAAO,CAAC;IAAC,2CAiBJ,MAAM;MACxB,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC;IAAA,4CAEqBC,IAAI,IAAK;MAC7B,MAAQC,GAAG,GAAK,IAAI,CAACJ,KAAK,CAAlBI,GAAG;MAEX,IAAI,CAACC,QAAQ,CAACC,cAAc,CAACF,GAAG,CAACG,cAAc,EAAEJ,IAAI,CAAC;IACxD,CAAC;IAvBCN,MAAM,CAAC,IAAI,CAAC;EACd;EAEAW,kBAAkB,GAAG;IACnB,MAAQJ,GAAG,GAAK,IAAI,CAACJ,KAAK,CAAlBI,GAAG;IAEX,IAAI,CAACK,aAAa,CAACC,iBAAiB,CAACN,GAAG,CAACO,EAAE,EAAE,IAAI,CAACD,iBAAiB,CAAC;EACtE;EAEAE,oBAAoB,GAAG;IACrB,MAAQR,GAAG,GAAK,IAAI,CAACJ,KAAK,CAAlBI,GAAG;IAEX,IAAI,CAACK,aAAa,CAACI,kBAAkB,CAACT,GAAG,CAACO,EAAE,EAAE,IAAI,CAACD,iBAAiB,CAAC;EACvE;EAaAI,MAAM,GAAG;IACP,oBAGI,IAAI,CAACd,KAAK;MAFZI,GAAG,eAAHA,GAAG;MACHW,QAAQ,eAARA,QAAQ;IAEV,4BAGIX,GAAG,CAACG,cAAc;MAFpBS,WAAW,uBAAXA,WAAW;MACXL,EAAE,uBAAFA,EAAE;IAGJ;MAAA,aAGc,YAAY;MAAA,YACX,IAAI,CAACM,kBAAkB;MAAA,oBACtBF,QAAQ;MAAA,SACZC,WAAW;MAAA,aACPL,EAAE;MAAA,eACAP,GAAG,CAACO,EAAE;MAAA;QAAA,kBAGD,IAAI;QAAA,aACX,mBAAmB;QAAA,YAClB,IAAI,CAACM,kBAAkB;QAAA,SAC1BD;MAAW;IAAA;EAG3B;AAEF;AAEAlB,sBAAsB,CAACoB,OAAO,GAAG,CAC/B,eAAe,EACf,UAAU,CACX;AAGD,MAAMC,gBAAgB,SAASxB,iBAAiB,CAAC;EAE/CmB,MAAM,GAAG;IACP,6BACmB,IAAI,CAACM,YAAY,EAAE,EAChC,IAAI,CAACC,SAAS,EAAE;EAGxB;AACF"}