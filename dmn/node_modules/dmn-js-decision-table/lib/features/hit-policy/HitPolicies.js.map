{"version":3,"file":"HitPolicies.js","names":["HIT_POLICIES","label","value","hitPolicy","aggregation","undefined","explanation"],"sources":["../../../src/features/hit-policy/HitPolicies.js"],"sourcesContent":["/* eslint max-len: 0 */\nexport const HIT_POLICIES = [\n  {\n    label: 'Unique',\n    value: {\n      hitPolicy: 'UNIQUE',\n      aggregation: undefined\n    },\n    explanation: 'No overlap is possible and all rules are disjoint. Only a single rule can be matched'\n  },\n  {\n    label: 'First',\n    value: {\n      hitPolicy: 'FIRST',\n      aggregation: undefined\n    },\n    explanation: 'Rules may overlap. The first matching rule will be chosen'\n  },\n  {\n    label: 'Priority',\n    value: {\n      hitPolicy: 'PRIORITY',\n      aggregation: undefined\n    },\n    explanation: 'Rules may overlap. The one with the highest priority will be chosen'\n  },\n  {\n    label: 'Any',\n    value: {\n      hitPolicy: 'ANY',\n      aggregation: undefined\n    },\n    explanation: 'Rules may overlap. Their output have to match'\n  },\n  {\n    label: 'Collect',\n    value: {\n      hitPolicy: 'COLLECT',\n      aggregation: undefined\n    },\n    explanation: 'Collects the values of all matching rules'\n  },\n  {\n    label: 'Collect (Sum)',\n    value: {\n      hitPolicy: 'COLLECT',\n      aggregation: 'SUM'\n    },\n    explanation: 'Collects the values of all matching rules and sums up to a single value'\n  },\n  {\n    label: 'Collect (Min)',\n    value: {\n      hitPolicy: 'COLLECT',\n      aggregation: 'MIN'\n    },\n    explanation: 'Collects the values of all matching rules and uses the lowest value'\n  },\n  {\n    label: 'Collect (Max)',\n    value: {\n      hitPolicy: 'COLLECT',\n      aggregation: 'MAX'\n    },\n    explanation: 'Collects the values of all matching rules and uses the highest value'\n  },\n  {\n    label: 'Collect (Count)',\n    value: {\n      hitPolicy: 'COLLECT',\n      aggregation: 'COUNT'\n    },\n    explanation: 'Collects the values of all matching rules and counts the number of them'\n  },\n  {\n    label: 'Rule order',\n    value: {\n      hitPolicy: 'RULE ORDER',\n      aggregation: undefined\n    },\n    explanation: 'Collects the values of all matching rules in rule order'\n  },\n  {\n    label: 'Output order',\n    value: {\n      hitPolicy: 'OUTPUT ORDER',\n      aggregation: undefined\n    },\n    explanation: 'Collects the values of all matching rules in decreasing output priority order'\n  }\n];\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,CAC1B;EACEC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE;IACLC,SAAS,EAAE,QAAQ;IACnBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE;IACLC,SAAS,EAAE,OAAO;IAClBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE;IACLC,SAAS,EAAE,UAAU;IACrBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;IACLC,SAAS,EAAE,KAAK;IAChBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE;IACLC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE;IACLC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAE;EACf,CAAC;EACDE,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE;IACLC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAE;EACf,CAAC;EACDE,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE;IACLC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAE;EACf,CAAC;EACDE,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,iBAAiB;EACxBC,KAAK,EAAE;IACLC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAE;EACf,CAAC;EACDE,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,YAAY;EACnBC,KAAK,EAAE;IACLC,SAAS,EAAE,YAAY;IACvBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE;IACLC,SAAS,EAAE,cAAc;IACzBC,WAAW,EAAEC;EACf,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,CACF"}