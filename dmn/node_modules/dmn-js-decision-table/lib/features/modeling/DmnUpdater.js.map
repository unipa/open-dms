{"version":3,"file":"DmnUpdater.js","names":["is","CommandInterceptor","DmnUpdater","constructor","eventBus","sheet","executed","ifDmn","e","context","element","row","col","updateRoot","oldRoot","reverted","newRoot","root","businessObject","oldTable","oldRules","get","oldIdx","indexOf","splice","$parent","newTable","newIdx","rows","cells","forEach","cell","idx","wireCell","collection","collectionIdx","inputs","outputs","Error","cel","rowIdx","unwireCell","colIdx","cols","length","oldRow","cellBo","oldRowBo","inputEntries","outputEntries","rowBo","$inject","fn","event"],"sources":["../../../src/features/modeling/DmnUpdater.js"],"sourcesContent":["import { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n\n/**\n * A handler responsible for updating the underlying DMN\n * once changes on the table happen.\n */\nexport default class DmnUpdater extends CommandInterceptor {\n\n  constructor(eventBus, sheet) {\n    super(eventBus);\n\n    this.executed([\n      'row.add',\n      'row.remove',\n      'col.add',\n      'col.remove'\n    ], ifDmn((e) => {\n      var context = e.context;\n\n      var element = context.row || context.col;\n\n      this.updateRoot(element, context.oldRoot);\n    }));\n\n    this.reverted([\n      'row.add',\n      'row.remove',\n      'col.add',\n      'col.remove'\n    ], ifDmn((e) => {\n      var context = e.context;\n\n      var element = context.row || context.col;\n\n      this.updateRoot(element, context.newRoot);\n    }));\n\n  }\n\n  updateRoot(element, oldRoot) {\n\n    var newRoot = element.root;\n\n    var businessObject = element.businessObject;\n\n    if (is(element, 'dmn:DecisionRule')) {\n\n      // we're removing\n      if (oldRoot) {\n        let oldTable = oldRoot.businessObject;\n\n        let oldRules = oldTable.get('rule');\n        let oldIdx = oldRules.indexOf(businessObject);\n\n        // unwire Row <-> Table\n        oldRules.splice(oldIdx, 1);\n        businessObject.$parent = null;\n      }\n\n      // we're adding\n      if (newRoot) {\n        let newTable = newRoot.businessObject;\n\n        let newIdx = newRoot.rows.indexOf(element);\n\n        // wire Row <-> Table\n        newTable.get('rule').splice(newIdx, 0, businessObject);\n        businessObject.$parent = newTable;\n\n        element.cells.forEach((cell, idx) => {\n\n          // wire Cell <-> Row\n          this.wireCell(cell, element, idx);\n        });\n      }\n    }\n\n\n    if (is(element, 'dmn:InputClause') || is(element, 'dmn:OutputClause')) {\n\n      let collection,\n          collectionIdx;\n\n      // we're removing\n      if (oldRoot) {\n        let oldTable = oldRoot.businessObject;\n\n        let inputs = oldTable.get('input');\n        let outputs = oldTable.get('output');\n\n        if (is(element, 'dmn:InputClause')) {\n          collection = inputs;\n          collectionIdx = inputs.indexOf(businessObject);\n        }\n\n        if (is(element, 'dmn:OutputClause')) {\n          collection = outputs;\n          collectionIdx = outputs.indexOf(businessObject);\n        }\n\n        if (collectionIdx === -1) {\n          throw new Error('inconsistent model: clause not in table');\n        }\n\n        // unwire Col <-> Table\n        collection.splice(collectionIdx, 1);\n        businessObject.$parent = null;\n\n        element.cells.forEach((cel, rowIdx) => {\n\n          // unwire Cell <-> Row\n          this.unwireCell(cel, oldRoot.rows[rowIdx]);\n        });\n\n      }\n\n\n      if (newRoot) {\n        let newTable = newRoot.businessObject;\n\n        let inputs = newTable.get('input');\n        let outputs = newTable.get('output');\n\n        let colIdx = newRoot.cols.indexOf(element);\n\n        let collectionIdx,\n            collection;\n\n        if (is(element, 'dmn:InputClause')) {\n          collection = inputs;\n          collectionIdx = colIdx;\n        }\n\n        if (is(element, 'dmn:OutputClause')) {\n          collection = outputs;\n          collectionIdx = colIdx - inputs.length;\n        }\n\n        // wire Col <-> Table\n        collection.splice(collectionIdx, 0, businessObject);\n        businessObject.$parent = newTable;\n\n        element.cells.forEach((cell, rowIdx) => {\n\n          // wire Cell <-> Row\n          this.wireCell(cell, newRoot.rows[rowIdx], colIdx);\n        });\n\n      }\n    }\n  }\n\n  unwireCell(cell, oldRow) {\n\n    var cellBo = cell.businessObject;\n\n    let oldRowBo = oldRow.businessObject;\n\n    let inputEntries = oldRowBo.get('inputEntry');\n    let outputEntries = oldRowBo.get('outputEntry');\n\n    let collection,\n        collectionIdx;\n\n    // remove from inputEntries\n    if (is(cell, 'dmn:UnaryTests')) {\n      collection = inputEntries;\n    }\n\n    // remove from outputEntries\n    if (is(cell, 'dmn:LiteralExpression')) {\n      collection = outputEntries;\n    }\n\n    collectionIdx = collection.indexOf(cellBo);\n\n    if (collectionIdx === -1) {\n      throw new Error('cell not in row');\n    }\n\n    // unwire Cell <-> Row relationship\n    collection.splice(collectionIdx, 1);\n    cellBo.$parent = null;\n  }\n\n  wireCell(cell, row, colIdx) {\n\n    var cellBo = cell.businessObject;\n\n    let rowBo = row.businessObject;\n\n    let inputEntries = rowBo.get('inputEntry');\n    let outputEntries = rowBo.get('outputEntry');\n\n    let collection,\n        collectionIdx;\n\n    // ensure we handle already wired cells\n    if (cellBo.$parent === rowBo) {\n      return;\n    }\n\n    // add to inputEntries\n    if (is(cell, 'dmn:UnaryTests')) {\n      collection = inputEntries;\n      collectionIdx = colIdx;\n    }\n\n    // add to outputEntries\n    if (is(cell, 'dmn:LiteralExpression')) {\n      collection = outputEntries;\n      collectionIdx = colIdx - inputEntries.length;\n    }\n\n    // wire Cell <-> Row relationship\n    collection.splice(collectionIdx, 0, cellBo);\n    cellBo.$parent = rowBo;\n  }\n\n}\n\nDmnUpdater.$inject = [\n  'eventBus',\n  'sheet'\n];\n\n\n\n// helpers //////////////////////\n\n/**\n * Make sure the event listener is only called\n * if the touched element is a DMN element.\n *\n * @param  {Function} fn\n * @return {Function} guarded function\n */\nfunction ifDmn(fn) {\n\n  return function(event) {\n\n    var context = event.context,\n        element = context.row || context.col;\n\n    if (is(element, 'dmn:DMNElement')) {\n      fn(event);\n    }\n  };\n}"],"mappings":"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"}