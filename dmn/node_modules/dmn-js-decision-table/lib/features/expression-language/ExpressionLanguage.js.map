{"version":3,"file":"ExpressionLanguage.js","names":["InputSelect","getBusinessObject","isInput","ExpressionLanguage","constructor","components","elementRegistry","modeling","expressionLanguages","translate","contextMenu","_modeling","_translate","_expressionLanguages","onGetComponent","context","contextMenuType","event","id","element","get","_shouldDisplayContextMenuEntry","openMenu","clickEvent","open","x","pageX","y","pageY","expressionLanguage","_getElementExpressionLanguage","options","getAll","className","value","onChange","inputExpression","input","editExpressionLanguage","length","_getDefaultElementExpressionLanguage","getDefault","col","$inject"],"sources":["../../../src/features/expression-language/ExpressionLanguage.js"],"sourcesContent":["import InputSelect from 'dmn-js-shared/lib/components/InputSelect';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  isInput\r\n} from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\n\r\nexport default class ExpressionLanguage {\r\n  constructor(\r\n      components, elementRegistry, modeling, expressionLanguages,\r\n      translate, contextMenu) {\r\n    this._modeling = modeling;\r\n    this._translate = translate;\r\n    this._expressionLanguages = expressionLanguages;\r\n\r\n    components.onGetComponent('context-menu-cell-additional', (context = {}) => {\r\n      if (context.contextMenuType && context.contextMenuType === 'context-menu') {\r\n\r\n        const {\r\n          event,\r\n          id\r\n        } = context;\r\n\r\n        if (!id) {\r\n          return;\r\n        }\r\n\r\n        const element = elementRegistry.get(id);\r\n\r\n        // element might not be in element registry (e.g. cut)\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        if (!this._shouldDisplayContextMenuEntry(element)) {\r\n          return;\r\n        }\r\n\r\n        const openMenu = clickEvent => {\r\n          contextMenu.open({\r\n            x: (event || clickEvent).pageX,\r\n            y: (event || clickEvent).pageY\r\n          }, {\r\n            contextMenuType: 'expression-language',\r\n            id\r\n          });\r\n        };\r\n\r\n        return (\r\n          <div\r\n            className=\"context-menu-group-entry\"\r\n            onClick={ openMenu }\r\n          >\r\n            { this._translate('Change Cell Expression Language') }\r\n          </div>\r\n        );\r\n\r\n      }\r\n    });\r\n\r\n    components.onGetComponent('context-menu', (context = {}) => {\r\n      if (context.contextMenuType && context.contextMenuType === 'expression-language') {\r\n\r\n        const { id } = context;\r\n\r\n        if (!id) {\r\n          return;\r\n        }\r\n\r\n        const element = elementRegistry.get(id);\r\n\r\n        // element might not be in element registry (e.g. cut)\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        const expressionLanguage = this._getElementExpressionLanguage(element);\r\n\r\n        const options = expressionLanguages.getAll();\r\n\r\n        const className = 'context-menu-group-entry ' +\r\n          'context-menu-entry-set-expression-language';\r\n\r\n        return () => (\r\n          <div\r\n            className=\"context-menu-flex\">\r\n            <div className=\"context-menu-group\">\r\n              <div\r\n                className={ className }>\r\n                <div>\r\n                  { this._translate('Expression Language') }\r\n                </div>\r\n\r\n                <InputSelect\r\n                  className=\"expression-language\"\r\n                  onChange={ value => this.onChange(element, value) }\r\n                  options={ options }\r\n                  value={ expressionLanguage } />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n    });\r\n\r\n    components.onGetComponent('context-menu', (context = {}) => {\r\n      if (\r\n        context.contextMenuType === 'input-edit'\r\n      ) {\r\n        return () => {\r\n          const { inputExpression } = context.input;\r\n\r\n          if (!this._shouldDisplayContextMenuEntry(inputExpression)) {\r\n            return;\r\n          }\r\n\r\n          const expressionLanguage = this._getElementExpressionLanguage(inputExpression);\r\n\r\n          const options = expressionLanguages.getAll();\r\n\r\n          return <div className=\"context-menu-container ref-language\">\r\n            <div className=\"dms-form-control\">\r\n              <label className=\"dms-label\">\r\n                {\r\n                  this._translate('Expression Language')\r\n                }\r\n              </label>\r\n\r\n              <InputSelect\r\n                className=\"ref-language\"\r\n                value={ expressionLanguage || '' }\r\n                onChange={ value => this.onChange(inputExpression, value) }\r\n                options={ options } />\r\n            </div>\r\n          </div>;\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange(element, expressionLanguage) {\r\n    this._modeling.editExpressionLanguage(element, expressionLanguage);\r\n  }\r\n\r\n  _shouldDisplayContextMenuEntry(element) {\r\n    const expressionLanguages = this._expressionLanguages.getAll();\r\n\r\n    if (expressionLanguages.length > 1) {\r\n      return true;\r\n    }\r\n\r\n    const expressionLanguage = this._getElementExpressionLanguage(element);\r\n\r\n    return expressionLanguage !== this._getDefaultElementExpressionLanguage(element);\r\n  }\r\n\r\n  _getElementExpressionLanguage(element) {\r\n    return getBusinessObject(element).expressionLanguage\r\n    || this._getDefaultElementExpressionLanguage(element);\r\n  }\r\n\r\n  _getDefaultElementExpressionLanguage(element) {\r\n    return this._expressionLanguages.getDefault(\r\n      isInput(element.col) ? 'inputCell' : 'outputCell').value;\r\n  }\r\n}\r\n\r\nExpressionLanguage.$inject = [\r\n  'components',\r\n  'elementRegistry',\r\n  'modeling',\r\n  'expressionLanguages',\r\n  'translate',\r\n  'contextMenu'\r\n];\r\n"],"mappings":"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"}