{"version":3,"file":"TableTreeWalker.js","names":["forEach","elementToString","TableTreeWalker","handler","options","visit","element","ctx","definitions","gfx","Error","visitTable","table","handleDecision","decision","id","decisionLogic","output","input","handleClauses","handleRules","rule","clauses","context","e","rules","handleEntry","inputEntry","outputEntry","entry"],"sources":["../../src/import/TableTreeWalker.js"],"sourcesContent":["import { forEach } from 'min-dash';\n\nimport { elementToString } from './Util';\n\nexport default function TableTreeWalker(handler, options) {\n\n  function visit(element, ctx, definitions) {\n\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error(`already rendered ${ elementToString(element) }`);\n    }\n\n    // call handler\n    return handler.element(element, ctx, definitions);\n  }\n\n  function visitTable(element) {\n    return handler.table(element);\n  }\n\n\n  // Semantic handling //////////////////////\n\n  function handleDecision(decision) {\n\n    if (!decision.id) {\n      decision.id = 'decision';\n    }\n\n    const table = decision.decisionLogic;\n\n    if (table) {\n\n      if (!table.output) {\n        throw new Error(`missing output for ${ elementToString(table) }`);\n      }\n\n      const ctx = visitTable(table);\n\n      if (table.input) {\n        handleClauses(table.input, ctx, table);\n      }\n\n      handleClauses(table.output, ctx, table);\n\n      // if any input or output clauses (columns) were added\n      // make sure that for each rule the according input/output entry is created\n      handleRules(table.rule, ctx, table);\n    } else {\n      throw new Error(`no table for ${ elementToString(decision) }`);\n    }\n\n  }\n\n  function handleClauses(clauses, context, definitions) {\n    forEach(clauses, function(e) {\n      visit(e, context, definitions);\n    });\n  }\n\n  function handleRules(rules, context, definitions) {\n    forEach(rules, function(e) {\n      visit(e, context, definitions);\n\n      handleEntry(e.inputEntry, e);\n\n      handleEntry(e.outputEntry, e);\n    });\n  }\n\n  function handleEntry(entry, context, definitions) {\n    forEach(entry, function(e) {\n      visit(e, context, definitions);\n    });\n  }\n\n\n  // API //////////////////////\n\n  return {\n    handleDecision: handleDecision\n  };\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;AAElC,SAASC,eAAe,QAAQ,QAAQ;AAExC,eAAe,SAASC,eAAe,CAACC,OAAO,EAAEC,OAAO,EAAE;EAExD,SAASC,KAAK,CAACC,OAAO,EAAEC,GAAG,EAAEC,WAAW,EAAE;IAExC,IAAIC,GAAG,GAAGH,OAAO,CAACG,GAAG;;IAErB;IACA,IAAIA,GAAG,EAAE;MACP,MAAM,IAAIC,KAAK,4BAAsBT,eAAe,CAACK,OAAO,CAAC,EAAI;IACnE;;IAEA;IACA,OAAOH,OAAO,CAACG,OAAO,CAACA,OAAO,EAAEC,GAAG,EAAEC,WAAW,CAAC;EACnD;EAEA,SAASG,UAAU,CAACL,OAAO,EAAE;IAC3B,OAAOH,OAAO,CAACS,KAAK,CAACN,OAAO,CAAC;EAC/B;;EAGA;;EAEA,SAASO,cAAc,CAACC,QAAQ,EAAE;IAEhC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChBD,QAAQ,CAACC,EAAE,GAAG,UAAU;IAC1B;IAEA,MAAMH,KAAK,GAAGE,QAAQ,CAACE,aAAa;IAEpC,IAAIJ,KAAK,EAAE;MAET,IAAI,CAACA,KAAK,CAACK,MAAM,EAAE;QACjB,MAAM,IAAIP,KAAK,8BAAwBT,eAAe,CAACW,KAAK,CAAC,EAAI;MACnE;MAEA,MAAML,GAAG,GAAGI,UAAU,CAACC,KAAK,CAAC;MAE7B,IAAIA,KAAK,CAACM,KAAK,EAAE;QACfC,aAAa,CAACP,KAAK,CAACM,KAAK,EAAEX,GAAG,EAAEK,KAAK,CAAC;MACxC;MAEAO,aAAa,CAACP,KAAK,CAACK,MAAM,EAAEV,GAAG,EAAEK,KAAK,CAAC;;MAEvC;MACA;MACAQ,WAAW,CAACR,KAAK,CAACS,IAAI,EAAEd,GAAG,EAAEK,KAAK,CAAC;IACrC,CAAC,MAAM;MACL,MAAM,IAAIF,KAAK,wBAAkBT,eAAe,CAACa,QAAQ,CAAC,EAAI;IAChE;EAEF;EAEA,SAASK,aAAa,CAACG,OAAO,EAAEC,OAAO,EAAEf,WAAW,EAAE;IACpDR,OAAO,CAACsB,OAAO,EAAE,UAASE,CAAC,EAAE;MAC3BnB,KAAK,CAACmB,CAAC,EAAED,OAAO,EAAEf,WAAW,CAAC;IAChC,CAAC,CAAC;EACJ;EAEA,SAASY,WAAW,CAACK,KAAK,EAAEF,OAAO,EAAEf,WAAW,EAAE;IAChDR,OAAO,CAACyB,KAAK,EAAE,UAASD,CAAC,EAAE;MACzBnB,KAAK,CAACmB,CAAC,EAAED,OAAO,EAAEf,WAAW,CAAC;MAE9BkB,WAAW,CAACF,CAAC,CAACG,UAAU,EAAEH,CAAC,CAAC;MAE5BE,WAAW,CAACF,CAAC,CAACI,WAAW,EAAEJ,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEA,SAASE,WAAW,CAACG,KAAK,EAAEN,OAAO,EAAEf,WAAW,EAAE;IAChDR,OAAO,CAAC6B,KAAK,EAAE,UAASL,CAAC,EAAE;MACzBnB,KAAK,CAACmB,CAAC,EAAED,OAAO,EAAEf,WAAW,CAAC;IAChC,CAAC,CAAC;EACJ;;EAGA;;EAEA,OAAO;IACLK,cAAc,EAAEA;EAClB,CAAC;AACH"}