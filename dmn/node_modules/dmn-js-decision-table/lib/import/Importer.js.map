{"version":3,"file":"Importer.js","names":["TableTreeWalker","importDecision","decisionTable","decision","done","importer","get","eventBus","sheet","hasModeling","error","warnings","render","visitor","create","type","parent","clause","rule","table","element","add","parentShape","definitions","message","context","push","walker","canAddMissingEntries","handleDecision","fire","e","elements","getRoot"],"sources":["../../src/import/Importer.js"],"sourcesContent":["import TableTreeWalker from './TableTreeWalker';\n\n\n/**\n * Import the decision table into a table.\n *\n * Errors and warnings are reported through the specified callback.\n *\n * @param  {decisionTable} decisionTable instance of DecisionTable\n * @param  {ModdleElement} decision moddle element\n * @param  {Function} done\n *         the callback, invoked with (err, [ warning ]) once the import is done\n */\nexport function importDecision(decisionTable, decision, done) {\n  const importer = decisionTable.get('tableImporter'),\n        eventBus = decisionTable.get('eventBus'),\n        sheet = decisionTable.get('sheet');\n\n  let hasModeling = decisionTable.get('modeling', false);\n\n  let error,\n      warnings = [];\n\n  function render(decision) {\n\n    const visitor = {\n      create(type, parent, clause, rule) {\n        return importer.create(type, parent, clause, rule);\n      },\n\n      table(element) {\n        return importer.add(element);\n      },\n\n      element(element, parentShape, definitions) {\n        return importer.add(element, parentShape, definitions);\n      },\n\n      error(message, context) {\n        warnings.push({ message: message, context: context });\n      }\n    };\n\n    const walker = new TableTreeWalker(visitor, { canAddMissingEntries: hasModeling });\n\n    // import\n    walker.handleDecision(decision);\n  }\n\n  eventBus.fire('import.render.start', { decision: decision });\n\n  try {\n    render(decision);\n  } catch (e) {\n    error = e;\n  }\n\n  eventBus.fire('import.render.complete', {\n    error: error,\n    warnings: warnings\n  });\n\n  eventBus.fire('elements.changed', {\n    elements: [ sheet.getRoot() ]\n  });\n\n  done(error, warnings);\n}\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,mBAAmB;;AAG/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACC,aAAa,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EAC5D,MAAMC,QAAQ,GAAGH,aAAa,CAACI,GAAG,CAAC,eAAe,CAAC;IAC7CC,QAAQ,GAAGL,aAAa,CAACI,GAAG,CAAC,UAAU,CAAC;IACxCE,KAAK,GAAGN,aAAa,CAACI,GAAG,CAAC,OAAO,CAAC;EAExC,IAAIG,WAAW,GAAGP,aAAa,CAACI,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;EAEtD,IAAII,KAAK;IACLC,QAAQ,GAAG,EAAE;EAEjB,SAASC,MAAM,CAACT,QAAQ,EAAE;IAExB,MAAMU,OAAO,GAAG;MACdC,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE;QACjC,OAAOb,QAAQ,CAACS,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,CAAC;MACpD,CAAC;MAEDC,KAAK,CAACC,OAAO,EAAE;QACb,OAAOf,QAAQ,CAACgB,GAAG,CAACD,OAAO,CAAC;MAC9B,CAAC;MAEDA,OAAO,CAACA,OAAO,EAAEE,WAAW,EAAEC,WAAW,EAAE;QACzC,OAAOlB,QAAQ,CAACgB,GAAG,CAACD,OAAO,EAAEE,WAAW,EAAEC,WAAW,CAAC;MACxD,CAAC;MAEDb,KAAK,CAACc,OAAO,EAAEC,OAAO,EAAE;QACtBd,QAAQ,CAACe,IAAI,CAAC;UAAEF,OAAO,EAAEA,OAAO;UAAEC,OAAO,EAAEA;QAAQ,CAAC,CAAC;MACvD;IACF,CAAC;IAED,MAAME,MAAM,GAAG,IAAI3B,eAAe,CAACa,OAAO,EAAE;MAAEe,oBAAoB,EAAEnB;IAAY,CAAC,CAAC;;IAElF;IACAkB,MAAM,CAACE,cAAc,CAAC1B,QAAQ,CAAC;EACjC;EAEAI,QAAQ,CAACuB,IAAI,CAAC,qBAAqB,EAAE;IAAE3B,QAAQ,EAAEA;EAAS,CAAC,CAAC;EAE5D,IAAI;IACFS,MAAM,CAACT,QAAQ,CAAC;EAClB,CAAC,CAAC,OAAO4B,CAAC,EAAE;IACVrB,KAAK,GAAGqB,CAAC;EACX;EAEAxB,QAAQ,CAACuB,IAAI,CAAC,wBAAwB,EAAE;IACtCpB,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACZ,CAAC,CAAC;EAEFJ,QAAQ,CAACuB,IAAI,CAAC,kBAAkB,EAAE;IAChCE,QAAQ,EAAE,CAAExB,KAAK,CAACyB,OAAO,EAAE;EAC7B,CAAC,CAAC;EAEF7B,IAAI,CAACM,KAAK,EAAEC,QAAQ,CAAC;AACvB"}