/**
 * @typedef { { parent: Element } } PropertiesPanelConfig
 * @typedef { import('../../core/EventBus').default } EventBus
 * @typedef { import('../../types').Injector } Injector
 */
/**
 * @param {PropertiesPanelConfig} propertiesPanelConfig
 * @param {Injector} injector
 * @param {EventBus} eventBus
 */
declare class PropertiesPanelRenderer {
    constructor(propertiesPanelConfig: any, injector: any, eventBus: any);
    _eventBus: any;
    _injector: any;
    _container: HTMLElement;
    /**
     * Attach the properties panel to a parent node.
     *
     * @param {HTMLElement} container
     */
    attachTo(container: HTMLElement): void;
    /**
     * Detach the properties panel from its parent node.
     */
    detach(): void;
    _render(): void;
    _destroy(): void;
}
declare namespace PropertiesPanelRenderer {
    const $inject: string[];
}
export default PropertiesPanelRenderer;
export type PropertiesPanelConfig = {
    parent: Element;
};
export type EventBus = any;
export type Injector = import('../../types').Injector;
