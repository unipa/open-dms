/**
 * @typedef { { container: Element, compact?: boolean } } RenderConfig
 * @typedef { import('didi').Injector } Injector
 * @typedef { import('../core/EventBus').default } EventBus
 * @typedef { import('../FormEditor').default } FormEditor
 */
/**
 * @param {RenderConfig} renderConfig
 * @param {EventBus} eventBus
 * @param {FormEditor} formEditor
 * @param {Injector} injector
 */
declare class Renderer {
    constructor(renderConfig: any, eventBus: any, formEditor: any, injector: any);
}
declare namespace Renderer {
    const $inject: string[];
}
export default Renderer;
export type RenderConfig = {
    container: Element;
    compact?: boolean;
};
export type Injector = import('didi').Injector;
export type EventBus = any;
export type FormEditor = import('../FormEditor').default;
